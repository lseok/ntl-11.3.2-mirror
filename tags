!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AbsPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR AbsPrec(const RR& a, long p)$/;"	f
AddMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ AddMod(const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ AddMod(const ZZ& a, long b, const ZZ& n)$/;"	f
AddMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ AddMod(long a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void AddMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void AddMod(ZZ& x, long a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long AddMod(long a, long b, long n)$/;"	f
AddPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR AddPrec(const RR& a, const RR& b, long p)$/;"	f
AddRef	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void AddRef() const$/;"	f	class:CloneablePtr
AddRef	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void AddRef() const$/;"	f	class:SmartPtr
AdjustAlloc	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void AdjustAlloc(long n) { if (_vec__rep) NTL_VEC_HEAD(_vec__rep)->alloc = n; }$/;"	f	class:Vec
AdjustLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void AdjustLength(long n) { if (_vec__rep) NTL_VEC_HEAD(_vec__rep)->length = n; }$/;"	f	class:Vec
AdjustMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void AdjustMaxLength(long n) { if (_vec__rep) NTL_VEC_HEAD(_vec__rep)->init = n; }$/;"	f	class:Vec
AlignedArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   AlignedArray() : dp(0), sp(0) { }$/;"	f	class:AlignedArray
AlignedArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   AlignedArray(AlignedArray&& other) noexcept : AlignedArray() $/;"	f	class:AlignedArray
AlignedArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   explicit AlignedArray(fake_null_type1) : dp(0), sp(0) { }$/;"	f	class:AlignedArray
AlignedArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class AlignedArray {$/;"	c
AllocateTo	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::AllocateTo(long n)   $/;"	f	class:Vec
ArithmeticError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void ArithmeticError(const char *msg) { TerminalError(msg); }$/;"	f
ArithmeticError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void ArithmeticError(const char *msg) { throw ArithmeticErrorObject(msg); }$/;"	f
ArithmeticErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   ArithmeticErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:ArithmeticErrorObject
ArithmeticErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class ArithmeticErrorObject : public ErrorObject {$/;"	c
AtomicBool	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   explicit AtomicBool(const bool& _data) : data(_data) { }$/;"	f	class:AtomicBool
AtomicBool	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^class AtomicBool {$/;"	c
AtomicCounter	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   AtomicCounter() : cnt(0) { }$/;"	f	class:AtomicCounter
AtomicCounter	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   explicit AtomicCounter(unsigned long _cnt) : cnt(_cnt) { }$/;"	f	class:AtomicCounter
AtomicCounter	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^class AtomicCounter {$/;"	c
AtomicLong	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   explicit AtomicLong(const long& _data) : data(_data) { }$/;"	f	class:AtomicLong
AtomicLong	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^class AtomicLong {$/;"	c
AtomicLowWaterMark	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   explicit AtomicLowWaterMark(const unsigned long& _data) : data(_data) { }$/;"	f	class:AtomicLowWaterMark
AtomicLowWaterMark	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^class AtomicLowWaterMark {$/;"	c
AtomicRefCount	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   AtomicRefCount() : cnt(0) { }$/;"	f	class:AtomicRefCount
AtomicRefCount	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^class AtomicRefCount {$/;"	c
AutomaticThread	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      AutomaticThread() : t(worker, &localSignal) $/;"	f	struct:BasicThreadPool::AutomaticThread
AutomaticThread	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   struct AutomaticThread {$/;"	s	class:BasicThreadPool
AvailableThreads	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^inline long AvailableThreads()$/;"	f
B1	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   FFTRep B1; $/;"	m	class:ZZ_pXMultiplier
B1	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   fftRep B1; $/;"	m	class:zz_pXMultiplier
B2	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   FFTRep B2; $/;"	m	class:ZZ_pXMultiplier
B2	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   fftRep B2; $/;"	m	class:zz_pXMultiplier
BaseSize	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   long BaseSize() const { return bsize; }$/;"	f	class:GF2XVec
BaseSize	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   long BaseSize() const { return bsize; }$/;"	f	class:ZZVec
BasicThreadPool	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  BasicThreadPool(long _nthreads) : $/;"	f	class:BasicThreadPool
BasicThreadPool	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^class BasicThreadPool {$/;"	c
BlockConstruct	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void BlockConstruct(T* p, long n) $/;"	f	class:Vec
BlockConstruct	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void BlockConstruct(T* p, long n) { default_BlockConstruct(p, n); } $/;"	f
BlockConstructFromObj	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void BlockConstructFromObj(T* p, long n, const T& q) $/;"	f	class:Vec
BlockConstructFromObj	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void BlockConstructFromObj(T* p, long n, const T& q)  { default_BlockConstructFromObj(p, n, q); }$/;"	f
BlockConstructFromVec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void BlockConstructFromVec(T* p, long n, const T* q) $/;"	f	class:Vec
BlockConstructFromVec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void BlockConstructFromVec(T* p, long n, const T* q) { default_BlockConstructFromVec(p, n, q); }$/;"	f
BlockDestroy	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void BlockDestroy(T* p, long n) $/;"	f	class:Vec
BlockDestroy	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void BlockDestroy(T* p, long n) { default_BlockDestroy(p, n); }  $/;"	f
BuildFromRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX BuildFromRoots(const vec_GF2E& a)$/;"	f
BuildFromRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX BuildFromRoots(const vec_ZZ_pE& a)$/;"	f
BuildFromRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX BuildFromRoots(const vec_ZZ_p& a)$/;"	f
BuildFromRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX BuildFromRoots(const vec_zz_pE& a)$/;"	f
BuildFromRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX BuildFromRoots(const vec_zz_p& a)$/;"	f
BuildIrred_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline GF2EX BuildIrred_GF2EX(long n)$/;"	f
BuildIrred_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline GF2X BuildIrred_GF2X(long n)$/;"	f
BuildIrred_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX BuildIrred_ZZ_pEX(long n)$/;"	f
BuildIrred_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX BuildIrred_ZZ_pX(long n)$/;"	f
BuildIrred_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX BuildIrred_zz_pEX(long n)$/;"	f
BuildIrred_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline zz_pX BuildIrred_zz_pX(long n)$/;"	f
BuildRandomIrred	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline GF2EX BuildRandomIrred(const GF2EX& g)$/;"	f
BuildRandomIrred	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline GF2X BuildRandomIrred(const GF2X& g)$/;"	f
BuildRandomIrred	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX BuildRandomIrred(const ZZ_pEX& g)$/;"	f
BuildRandomIrred	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX BuildRandomIrred(const ZZ_pX& g)$/;"	f
BuildRandomIrred	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX BuildRandomIrred(const zz_pEX& g)$/;"	f
BuildRandomIrred	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline zz_pX BuildRandomIrred(const zz_pX& g)$/;"	f
BuildSparseIrred_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline GF2X BuildSparseIrred_GF2X(long n)$/;"	f
Builder	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      Builder(const Lazy& _ref) : building(false), moved(false),$/;"	f	class:Lazy::Builder
Builder	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   class Builder {$/;"	c	class:Lazy
Builder	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      Builder(const LazyTable& _ref, long _request) $/;"	f	class:LazyTable::Builder
Builder	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^   class Builder {$/;"	c	class:LazyTable
BytesFromZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void BytesFromZZ(unsigned char *p, const ZZ& a, long n)$/;"	f
CRTInRange	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long CRTInRange(const ZZ& gg, const ZZ& aa)$/;"	f
CSRPush	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^struct CSRPush {$/;"	s
CanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long CanZass(const GF2EX& f, long verbose=0)$/;"	f
CanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline vec_pair_GF2X_long CanZass(const GF2X& f, long verbose=0)$/;"	f
CanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline vec_pair_ZZ_pEX_long CanZass(const ZZ_pEX& f, long verbose=0)$/;"	f
CanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long CanZass(const ZZ_pX& f, long verbose=0)$/;"	f
CanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline vec_pair_zz_pEX_long CanZass(const zz_pEX& f, long verbose=0)$/;"	f
CanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long CanZass(const zz_pX& f, long verbose=0)$/;"	f
CeilPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR CeilPrec(const RR& a, long p)$/;"	f
CeilToZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline ZZ CeilToZZ(const RR& a)$/;"	f
CharPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX CharPolyMod(const ZZX& a, const ZZX& f, long deterministic=0)$/;"	f
CharPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX CharPolyMod(const ZZ_pX& a, const ZZ_pX& f)$/;"	f
CharPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX CharPolyMod(const zz_pX& a, const zz_pX& f)$/;"	f
ChoosePolicy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct ChoosePolicy { };$/;"	s
CloneablePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr() : dp(0), cp(0)  { }$/;"	f	class:CloneablePtr
CloneablePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr(CloneablePtrLoopHole, T* _dp, CloneablePtrControl *_cp) : dp(_dp), cp(_cp)$/;"	f	class:CloneablePtr
CloneablePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr(const CloneablePtr& other) : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
CloneablePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr(const CloneablePtr<Y>& other) : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
CloneablePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr(fake_null_type1) : dp(0), cp(0) { }$/;"	f	class:CloneablePtr
CloneablePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class CloneablePtr {$/;"	c
CloneablePtrControl	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class CloneablePtrControl : public SmartPtrControl {$/;"	c
CloneablePtrControlDerived	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtrControlDerived(const T& x) : d(x) { }$/;"	f	class:CloneablePtrControlDerived
CloneablePtrControlDerived	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class CloneablePtrControlDerived : public CloneablePtrControl {$/;"	c
CloneablePtrLoopHole	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct CloneablePtrLoopHole { };$/;"	s
CloningCopiedPtrPolicy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct CloningCopiedPtrPolicy : DefaultDeleterPolicy, CloningCopier { };$/;"	s
CloningCopier	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct CloningCopier {$/;"	s
CoeffModP	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   Vec<long> CoeffModP;    \/\/ coeff mod p$/;"	m	class:zz_pInfoT
CoeffModPpinv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   Vec<mulmod_precon_t> CoeffModPpinv; $/;"	m	class:zz_pInfoT
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^CompMod(const GF2EX& g, const GF2EX& h, const GF2EXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^CompMod(const GF2EX& g, const GF2EXArgument& H, const GF2EXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X CompMod(const GF2X& g, $/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X CompMod(const GF2X& g, const GF2X& h, const GF2XModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^CompMod(const ZZ_pEX& g, const ZZ_pEX& h, const ZZ_pEXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^CompMod(const ZZ_pEX& g, const ZZ_pEXArgument& H, const ZZ_pEXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^CompMod(const ZZ_pX& g, const ZZ_pXArgument& H, const ZZ_pXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX CompMod(const ZZ_pX& g, const ZZ_pX& h, $/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^CompMod(const zz_pEX& g, const zz_pEX& h, const zz_pEXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^CompMod(const zz_pEX& g, const zz_pEXArgument& H, const zz_pEXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^CompMod(const zz_pX& g, const zz_pXArgument& H, const zz_pXModulus& F)$/;"	f
CompMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX CompMod(const zz_pX& g, const zz_pX& h,$/;"	f
CompTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX CompTower(const GF2X& g, const GF2EX& h,$/;"	f
CompTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX CompTower(const GF2X& g, const GF2EXArgument& A,$/;"	f
CompTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX CompTower(const ZZ_pX& g, const ZZ_pEX& h,$/;"	f
CompTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX CompTower(const ZZ_pX& g, const ZZ_pEXArgument& A,$/;"	f
CompTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX CompTower(const zz_pX& g, const zz_pEX& h,$/;"	f
CompTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX CompTower(const zz_pX& g, const zz_pEXArgument& A,$/;"	f
CompositeSignal	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     CompositeSignal() : val(0) { }$/;"	f	class:BasicThreadPool::CompositeSignal
CompositeSignal	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   class CompositeSignal {$/;"	c	class:BasicThreadPool
ComputePi_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ComputePi_RR()$/;"	f
ConcurrentTask	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     ConcurrentTask(BasicThreadPool *_pool) : pool(_pool) { }$/;"	f	class:BasicThreadPool::ConcurrentTask
ConcurrentTask	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   class ConcurrentTask {$/;"	c	class:BasicThreadPool
ConcurrentTaskFct	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     ConcurrentTaskFct(BasicThreadPool *_pool, const Fct& _fct) : $/;"	f	class:BasicThreadPool::ConcurrentTaskFct
ConcurrentTaskFct	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   class ConcurrentTaskFct : public ConcurrentTask {$/;"	c	class:BasicThreadPool
ConcurrentTaskFct1	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      ConcurrentTaskFct1(BasicThreadPool *_pool, const Fct& _fct, $/;"	f	class:BasicThreadPool::ConcurrentTaskFct1
ConcurrentTaskFct1	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   class ConcurrentTaskFct1 : public ConcurrentTask {$/;"	c	class:BasicThreadPool
ConcurrentTaskTerminate	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     ConcurrentTaskTerminate() : ConcurrentTask(0) { }$/;"	f	class:BasicThreadPool::ConcurrentTaskTerminate
ConcurrentTaskTerminate	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   class ConcurrentTaskTerminate : public ConcurrentTask {$/;"	c	class:BasicThreadPool
ConstReferenceWrapper	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ConstReferenceWrapper(const T& _x) : x(_x) { }$/;"	f	class:ConstReferenceWrapper
ConstReferenceWrapper	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class ConstReferenceWrapper$/;"	c
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(const RR& a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(const ZZ& a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(const char *s, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(const quad_float& a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(const xdouble& a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(double a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(int a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(long a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(unsigned int a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ConvPrec(unsigned long a, long p)$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void ConvPrec(RR& z, int a, long p) { ConvPrec(z, long(a), p); }$/;"	f
ConvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void ConvPrec(RR& z, unsigned int a, long p) $/;"	f
CopiedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CopiedPtr() : dp(0) { }$/;"	f	class:CopiedPtr
CopiedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CopiedPtr(CopiedPtr&& other) noexcept : CopiedPtr() $/;"	f	class:CopiedPtr
CopiedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CopiedPtr(const CopiedPtr& other) : dp(0)$/;"	f	class:CopiedPtr
CopiedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   explicit CopiedPtr(T *p) : dp(p) { }$/;"	f	class:CopiedPtr
CopiedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class CopiedPtr {$/;"	c
DDF	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long DDF(const GF2EX& f, const GF2EX& h,$/;"	f
DDF	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline vec_pair_GF2X_long DDF(const GF2X& f,$/;"	f
DDF	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long DDF(const ZZ_pX& f, const ZZ_pX& h,$/;"	f
DDF	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long DDF(const zz_pX& f, const zz_pX& h,$/;"	f
DeclareRelocatableType	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^constexpr bool DeclareRelocatableType(T*)$/;"	f
DeclareRelocatableType	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline bool DeclareRelocatableType(T*)$/;"	f
DefaultCopiedPtrPolicy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct DefaultCopiedPtrPolicy : DefaultDeleterPolicy, DefaultCopierPolicy { };$/;"	s
DefaultCopierPolicy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct DefaultCopierPolicy {$/;"	s
DefaultDeleterPolicy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct DefaultDeleterPolicy {$/;"	s
Deleter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class Deleter {$/;"	c	class:ZZ
DivCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^   long DivCross;$/;"	m	class:GF2EInfoT
DivCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static long DivCross() { return GF2EInfo->DivCross; }$/;"	f	class:GF2E
DivCross	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^static long DivCross() { return 16; }$/;"	f	class:ZZ_pE
DivCross	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^static long DivCross() { return 16; }$/;"	f	class:zz_pE
DivHandler	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^DivHandlerPtr DivHandler;$/;"	m	class:ZZ_p
DivHandlerPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^typedef void (*DivHandlerPtr)(const ZZ_p& a);   \/\/ error-handler for division$/;"	t	class:ZZ_p
DivPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR DivPrec(const RR& a, const RR& b, long p)$/;"	f
DivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long DivRem(ZZ& q, const ZZ& a, long b)$/;"	f
DivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void DivRem(ZZ& q, ZZ& r, const ZZ& a, const ZZ& b)$/;"	f
DoSetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::DoSetLength(long n)$/;"	f	class:Vec
DoSetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::DoSetLength(long n, const T& a)$/;"	f	class:Vec
DoSetLengthAndApply	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::DoSetLengthAndApply(long n, F& f)$/;"	f	class:Vec
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   class Dummy { };$/;"	c	class:Lazy
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:AlignedArray
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:CloneablePtr
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:CopiedPtr
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:SmartPtr
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:Unique2DArray
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:UniqueArray
Dummy	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:UniquePtr
Dummy1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:AlignedArray
Dummy1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:CloneablePtr
Dummy1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:CopiedPtr
Dummy1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:SmartPtr
Dummy1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:Unique2DArray
Dummy1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:UniqueArray
Dummy1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:UniquePtr
DummyScopeGuard	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   DummyScopeGuard() : active(true) { }$/;"	f	class:DummyScopeGuard
DummyScopeGuard	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class DummyScopeGuard {$/;"	c
DynamicCast	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr<Y> DynamicCast() const $/;"	f	class:CloneablePtr
DynamicCast	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr<Y> DynamicCast() const $/;"	f	class:SmartPtr
DynamicCast	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^CloneablePtr<X> DynamicCast(const CloneablePtr<Y>& p)  { return p.template DynamicCast<X>(); }$/;"	f
DynamicCast	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^SmartPtr<X> DynamicCast(const SmartPtr<Y>& p)  { return p.template DynamicCast<X>(); }$/;"	f
EDF	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX EDF(const GF2EX& f, const GF2EX& b,$/;"	f
EDF	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline vec_GF2X EDF(const GF2X& f, $/;"	f
EDF	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pEX EDF(const ZZ_pEX& f, const ZZ_pEX& b,$/;"	f
EDF	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX EDF(const ZZ_pX& f, const ZZ_pX& b,$/;"	f
EDF	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pEX EDF(const zz_pEX& f, const zz_pEX& b,$/;"	f
EDF	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX EDF(const zz_pX& f, const zz_pX& b,$/;"	f
Error	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void Error(const char *msg) { TerminalError(msg); }$/;"	f
Error	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void Error(const char *msg) { throw ErrorObject(msg); }$/;"	f
ErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   ErrorObject(const char *msg) : runtime_error(msg) { }$/;"	f	class:ErrorObject
ErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class ErrorObject : public NTL_SNS runtime_error {$/;"	c
ExtendedModulusSize	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   long ExtendedModulusSize;$/;"	m	class:ZZ_pInfoT
ExtendedModulusSize	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^static long ExtendedModulusSize() { return ZZ_pInfo->ExtendedModulusSize; }$/;"	f	class:ZZ_p
FFTFwd	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTFwd(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTFwd	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTFwd(long* A, const long *a, long k, long i)$/;"	f
FFTFwd_trans	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTFwd_trans(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTFwd_trans	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTFwd_trans(long* A, const long *a, long k, long i)$/;"	f
FFTFwd_trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTFwd_trunc(long* A, const long *a, long k, const FFTPrimeInfo& info,$/;"	f
FFTFwd_trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTFwd_trunc(long* A, const long *a, long k, long i, long yn, long xn)$/;"	f
FFTInfo	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   Lazy<ZZ_pFFTInfoT> FFTInfo;$/;"	m	class:ZZ_pInfoT
FFTMulTabsDeleterPolicy	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^struct FFTMulTabsDeleterPolicy {$/;"	s
FFTPrimeInfo	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^struct FFTPrimeInfo {$/;"	s
FFTRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   FFTRep() : k(-1), MaxK(-1), len(0), NumPrimes(0) { }$/;"	f	class:FFTRep
FFTRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   FFTRep(INIT_SIZE_TYPE, long InitK) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:FFTRep
FFTRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   FFTRep(const FFTRep& R) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:FFTRep
FFTRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^class FFTRep {$/;"	c
FFTRev1	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTRev1(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTRev1	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTRev1(long* A, const long *a, long k, long i)$/;"	f
FFTRev1_trans	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTRev1_trans(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTRev1_trans	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTRev1_trans(long* A, const long *a, long k, long i)$/;"	f
FFTRev1_trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTRev1_trunc(long* A, const long *a, long k, const FFTPrimeInfo& info,$/;"	f
FFTRev1_trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void FFTRev1_trunc(long* A, const long *a, long k, long i, long yn)$/;"	f
FFTRoundUp	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT_impl.h	/^long FFTRoundUp(long xn, long k)$/;"	f
FFTTablesType	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^typedef LazyTable<FFTPrimeInfo, NTL_MAX_FFTPRIMES> FFTTablesType;$/;"	t
FRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   FFTRep FRep; \/\/ 2^k point rep of f$/;"	m	class:ZZ_pXModulus
FRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   fftRep FRep; \/\/ 2^k point rep of f$/;"	m	class:zz_pXModulus
FacVec	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	/^typedef vec_IntFactor FacVec;$/;"	t
FileError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void FileError(const char *msg) { TerminalError(msg); }$/;"	f
FileError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void FileError(const char *msg) { throw FileErrorObject(msg); }$/;"	f
FileErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   FileErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:FileErrorObject
FileErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class FileErrorObject : public ErrorObject {$/;"	c
FileList	/home/penguin/projects/ntl-11.3.2/include/NTL/fileio.h	/^   FileList() { }$/;"	f	class:FileList
FileList	/home/penguin/projects/ntl-11.3.2/include/NTL/fileio.h	/^class FileList {$/;"	c
FindRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline GF2E FindRoot(const GF2EX& f)$/;"	f
FindRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pE FindRoot(const ZZ_pEX& f)$/;"	f
FindRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_p FindRoot(const ZZ_pX& f)$/;"	f
FindRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline zz_pE FindRoot(const zz_pEX& f)$/;"	f
FindRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline zz_p FindRoot(const zz_pX& f)$/;"	f
FindRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_GF2E FindRoots(const GF2EX& f)$/;"	f
FindRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pE FindRoots(const ZZ_pEX& f)$/;"	f
FindRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_p FindRoots(const ZZ_pX& f)$/;"	f
FindRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pE FindRoots(const zz_pEX& f)$/;"	f
FindRoots	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_p FindRoots(const zz_pX& f)$/;"	f
FixAtCurrentLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::FixAtCurrentLength() $/;"	f	class:Vec
FixLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::FixLength(long n) $/;"	f	class:Vec
Fixer	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^      explicit Fixer(long _m) : m(_m) { }$/;"	f	struct:Mat::Fixer
Fixer	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   struct Fixer {$/;"	s	class:Mat
FloorPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR FloorPrec(const RR& a, long p)$/;"	f
FloorToZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline ZZ FloorToZZ(const RR& a)$/;"	f
FloorToZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void FloorToZZ(ZZ& z, const RR& a) { conv(z, a); }$/;"	f
ForceToMem	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void ForceToMem(double *p) { _ntl_ForceToMem(p); }$/;"	f
ForceToMem	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void ForceToMem(double *p) { }$/;"	f
FrobeniusMap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline GF2EX FrobeniusMap(const GF2EXModulus& F)$/;"	f
Fwd	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^ConstReferenceWrapper<T> Fwd(const T& x) { return ConstReferenceWrapper<T>(x); }$/;"	f
Fwd	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^ReferenceWrapper<T> Fwd(T& x) { return ReferenceWrapper<T>(x); }$/;"	f
Fwd	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^T& Fwd(T& x) { return x; }$/;"	f
Fwd	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^const T& Fwd(const T& x) { return x; }$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX GCD(const GF2EX& a, const GF2EX& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X GCD(const GF2X& a, const GF2X& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ GCD(const ZZ& a, const ZZ& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void GCD(ZZ& d, const ZZ& a, const ZZ& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX GCD(const ZZX& a, const ZZX& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX GCD(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX GCD(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX GCD(const zz_pEX& a, const zz_pEX& b)$/;"	f
GCD	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX GCD(const zz_pX& a, const zz_pX& b)$/;"	f
GCDCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^   long GCDCross;$/;"	m	class:GF2EInfoT
GCDCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static long GCDCross() { return GF2EInfo->GCDCross; }$/;"	f	class:GF2E
GCD_alt	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void GCD_alt(ZZ& d, const ZZ& a, const ZZ& b)$/;"	f
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2() : _GF2__rep(0) { }$/;"	f	class:GF2
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2(INIT_ALLOC_TYPE) : _GF2__rep(0) { } $/;"	f	class:GF2
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2(INIT_LOOP_HOLE_TYPE, unsigned long a) : _GF2__rep(a) { }$/;"	f	class:GF2
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2(INIT_NO_ALLOC_TYPE) : _GF2__rep(0) { } $/;"	f	class:GF2
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2(INIT_VAL_TYPE, long a) : _GF2__rep(a & 1) { }$/;"	f	class:GF2
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2::GF2(const ref_GF2& other) :$/;"	f	class:GF2
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^class GF2 {$/;"	c
GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^explicit GF2(long a) : _GF2__rep(0) { *this = a; }$/;"	f	class:GF2
GF2Bak	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^class GF2Bak {$/;"	c
GF2Context	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2Context() {}$/;"	f	class:GF2Context
GF2Context	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^class GF2Context {$/;"	c
GF2Context	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^explicit GF2Context(long p) {  if (p != 2) LogicError("GF2Context with p != 2"); }$/;"	f	class:GF2Context
GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2E() {  } \/\/ NO_ALLOC$/;"	f	class:GF2E
GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2E(GF2E& x, INIT_TRANS_TYPE) : _GF2E__rep(x._GF2E__rep, INIT_TRANS) { }$/;"	f	class:GF2E
GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2E(INIT_ALLOC_TYPE) { _GF2E__rep.xrep.SetMaxLength(GF2E::WordLength());  }  \/\/ allocates space$/;"	f	class:GF2E
GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2E(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:GF2E
GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^class GF2E {$/;"	c
GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^explicit GF2E(GF2 a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:GF2E
GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^explicit GF2E(long a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:GF2E
GF2EBak	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2EBak() : MustRestore(false) {  }$/;"	f	class:GF2EBak
GF2EBak	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^class GF2EBak {$/;"	c
GF2EContext	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2EContext() { }$/;"	f	class:GF2EContext
GF2EContext	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^class GF2EContext {$/;"	c
GF2EContext	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^explicit GF2EContext(const GF2X& p) : ptr(MakeSmart<GF2EInfoT>(p)) { }$/;"	f	class:GF2EContext
GF2EInfoT	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^class GF2EInfoT {$/;"	c
GF2EPush	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2EPush() { bak.save(); }$/;"	f	class:GF2EPush
GF2EPush	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^class GF2EPush {$/;"	c
GF2EPush	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^explicit GF2EPush(const GF2EContext& context) { bak.save(); context.restore(); }$/;"	f	class:GF2EPush
GF2EPush	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^explicit GF2EPush(const GF2X& p) { bak.save(); GF2EContext c(p); c.restore(); }$/;"	f	class:GF2EPush
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^GF2EX() { }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^GF2EX(GF2EX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^GF2EX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^class GF2EX {$/;"	c
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^explicit GF2EX(GF2 a) { *this = a; }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^explicit GF2EX(const GF2& a) { *this = a; }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^explicit GF2EX(long a) { *this = a; }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i, const GF2E& a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(long i, const GF2E& a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EXArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^struct GF2EXArgument {$/;"	s
GF2EXModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^class GF2EXModulus {$/;"	c
GF2EXTransMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^struct GF2EXTransMultiplier {$/;"	s
GF2Push	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2Push() { }$/;"	f	class:GF2Push
GF2Push	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^class GF2Push {$/;"	c
GF2Push	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^explicit GF2Push(const GF2Context& context) { }$/;"	f	class:GF2Push
GF2Push	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^explicit GF2Push(long p) { if (p != 2) LogicError("GF2Push with p != 2"); }$/;"	f	class:GF2Push
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^GF2X() { }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^GF2X(GF2X& x, INIT_TRANS_TYPE) : xrep(x.xrep, INIT_TRANS) { }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^GF2X(const GF2X& a) : xrep(a.xrep) { }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^class GF2X {$/;"	c
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^explicit GF2X(GF2 a) { *this = a; }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^explicit GF2X(long a) { *this = a; }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X::GF2X(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X::GF2X(INIT_MONO_TYPE, long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X::GF2X(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X::GF2X(long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X::GF2X(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2XArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^struct GF2XArgument {$/;"	s
GF2XFromBytes	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X GF2XFromBytes(const unsigned char *p, long n)$/;"	f
GF2XHexOutputPush	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2XHexOutputPush() : OldHexOutput(GF2X::HexOutput) { }$/;"	f	class:GF2XHexOutputPush
GF2XHexOutputPush	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^class GF2XHexOutputPush {$/;"	c
GF2XModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^class GF2XModulus {$/;"	c
GF2XTransMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^struct GF2XTransMultiplier {$/;"	s
GF2XVec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   GF2XVec() : v(0), len(0), bsize(0) { }$/;"	f	class:GF2XVec
GF2XVec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   GF2XVec(GF2XVec&& other) noexcept : GF2XVec() $/;"	f	class:GF2XVec
GF2XVec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   GF2XVec(long n, long d) : v(0), len(0), bsize(0)  { SetSize(n, d); }$/;"	f	class:GF2XVec
GF2XVec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^class GF2XVec {$/;"	c
GF2XWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2XWatcher(GF2X& _watched) : watched(_watched) {}$/;"	f	class:GF2XWatcher
GF2XWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^class GF2XWatcher {$/;"	c
GenGermainPrime_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ GenGermainPrime_ZZ(long l, long err = 80) $/;"	f
GenPrime_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ GenPrime_ZZ(long l, long err = 80) $/;"	f
GetCost	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   double GetCost() const { return cost; }$/;"	f	struct:MatPrime_crt_helper
GetFFTInfo	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^static const ZZ_pFFTInfoT* GetFFTInfo() $/;"	f	class:ZZ_p
GetFFTPrime	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^long GetFFTPrime(long i)$/;"	f
GetFFTPrimeInv	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^mulmod_t GetFFTPrimeInv(long i)$/;"	f
GetFFTPrimeRecip	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^double GetFFTPrimeRecip(long i)$/;"	f
GetFFT_ZZ_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline const sp_ZZ_reduce_struct& GetFFT_ZZ_red_struct(long i) $/;"	f
GetMatPrime	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^long GetMatPrime(long i)$/;"	f
GetNumPrimes	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   long GetNumPrimes() const { return NumPrimes; }$/;"	f	struct:MatPrime_crt_helper
GetPID	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long GetPID() { return _ntl_GetPID(); }$/;"	f
GetThreadPool	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^BasicThreadPool *GetThreadPool()$/;"	f
GetTime	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double GetTime() { return _ntl_GetTime(); }$/;"	f
GetTmpSpace	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^static ZZ_pTmpSpaceT* GetTmpSpace()$/;"	f	class:ZZ_p
GetWallTime	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double GetWallTime() { return _ntl_GetWallTime(); }$/;"	f
GuardProxy	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   GuardProxy(MutexProxy& mtx) : lck(mtx.mtx, NTL_SNS defer_lock) { }$/;"	f	class:GuardProxy
GuardProxy	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^class GuardProxy {$/;"	c
H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   vec_GF2EX H;$/;"	m	struct:GF2EXArgument
H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   vec_GF2X H;$/;"	m	struct:GF2XArgument
H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   vec_ZZ_pEX H;$/;"	m	struct:ZZ_pEXArgument
H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   vec_ZZ_pX H;$/;"	m	struct:ZZ_pXArgument
H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   vec_zz_pEX H;$/;"	m	struct:zz_pEXArgument
H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   vec_zz_pX H;$/;"	m	struct:zz_pXArgument
HRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   FFTRep HRep; \/\/ 2^l point rep of H$/;"	m	class:ZZ_pXModulus
HRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   fftRep HRep; \/\/ 2^l point rep of H$/;"	m	class:zz_pXModulus
HenselSolve1	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^void HenselSolve1(ZZ& d_out, vec_ZZ& x_out, const mat_ZZ& A, const vec_ZZ& b)$/;"	f
HexOutput	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^static NTL_CHEAP_THREAD_LOCAL long HexOutput;$/;"	m	class:GF2X
INIT_ALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_ALLOC_STRUCT INIT_ALLOC = INIT_ALLOC_STRUCT();$/;"	v
INIT_ALLOC_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_ALLOC_STRUCT { };$/;"	s
INIT_ALLOC_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_ALLOC_STRUCT& INIT_ALLOC_TYPE;$/;"	t
INIT_FFT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_FFT_STRUCT INIT_FFT = INIT_FFT_STRUCT();$/;"	v
INIT_FFT_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_FFT_STRUCT { };$/;"	s
INIT_FFT_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_FFT_STRUCT& INIT_FFT_TYPE;$/;"	t
INIT_LOOP_HOLE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_LOOP_HOLE_STRUCT INIT_LOOP_HOLE = INIT_LOOP_HOLE_STRUCT();$/;"	v
INIT_LOOP_HOLE_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_LOOP_HOLE_STRUCT { };$/;"	s
INIT_LOOP_HOLE_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_LOOP_HOLE_STRUCT& INIT_LOOP_HOLE_TYPE;$/;"	t
INIT_MONO	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_MONO_STRUCT INIT_MONO = INIT_MONO_STRUCT();$/;"	v
INIT_MONO_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_MONO_STRUCT { };$/;"	s
INIT_MONO_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_MONO_STRUCT& INIT_MONO_TYPE;$/;"	t
INIT_NO_ALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_NO_ALLOC_STRUCT INIT_NO_ALLOC = INIT_NO_ALLOC_STRUCT();$/;"	v
INIT_NO_ALLOC_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_NO_ALLOC_STRUCT { };$/;"	s
INIT_NO_ALLOC_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_NO_ALLOC_STRUCT& INIT_NO_ALLOC_TYPE;$/;"	t
INIT_SIZE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_SIZE_STRUCT INIT_SIZE = INIT_SIZE_STRUCT();$/;"	v
INIT_SIZE_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_SIZE_STRUCT { };$/;"	s
INIT_SIZE_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_SIZE_STRUCT& INIT_SIZE_TYPE;$/;"	t
INIT_TRANS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_TRANS_STRUCT INIT_TRANS = INIT_TRANS_STRUCT();$/;"	v
INIT_TRANS_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_TRANS_STRUCT { };$/;"	s
INIT_TRANS_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_TRANS_STRUCT& INIT_TRANS_TYPE;$/;"	t
INIT_USER_FFT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_USER_FFT_STRUCT INIT_USER_FFT = INIT_USER_FFT_STRUCT();$/;"	v
INIT_USER_FFT_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_USER_FFT_STRUCT { };$/;"	s
INIT_USER_FFT_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_USER_FFT_STRUCT& INIT_USER_FFT_TYPE;$/;"	t
INIT_VAL	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^const INIT_VAL_STRUCT INIT_VAL = INIT_VAL_STRUCT();$/;"	v
INIT_VAL_STRUCT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct INIT_VAL_STRUCT { };$/;"	s
INIT_VAL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef const INIT_VAL_STRUCT& INIT_VAL_TYPE;$/;"	t
Init	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::Init(long n)   $/;"	f	class:Vec
Init	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::Init(long n, const T *src) $/;"	f	class:Vec
Init	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::Init(long n, const T& src) $/;"	f	class:Vec
InitAndApply	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::InitAndApply(long n, F& f)   $/;"	f	class:Vec
InitCopyMove	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::InitCopyMove(long n, T *src, std::false_type)$/;"	f	class:Vec
InitCopyMove	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::InitCopyMove(long n, T *src, std::true_type)$/;"	f	class:Vec
InitMove	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::InitMove(long n, T *src, std::false_type)$/;"	f	class:Vec
InitMove	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::InitMove(long n, T *src, std::true_type) $/;"	f	class:Vec
InnerProd_L_bound	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^InnerProd_L_bound(long d)$/;"	f
InnerProd_L_viable	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^InnerProd_L_viable(long n, long d)$/;"	f
InnerProduct	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void InnerProduct(ref_GF2 x, const vec_GF2& a, const vec_GF2& b)$/;"	f
InputError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void InputError(const char *msg) { TerminalError(msg); }$/;"	f
InputError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void InputError(const char *msg) { throw InputErrorObject(msg); }$/;"	f
InputErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   InputErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:InputErrorObject
InputErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class InputErrorObject : public ErrorObject {$/;"	c
InputPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR InputPrec(NTL_SNS istream& s, long p)$/;"	f
IntFactor	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	/^struct IntFactor {$/;"	s
InvMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX InvMod(const GF2EX& a, const GF2EX& f)$/;"	f
InvMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X InvMod(const GF2X& a, const GF2X& f)$/;"	f
InvMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ InvMod(const ZZ& a, const ZZ& n)$/;"	f
InvMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX InvMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
InvMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX InvMod(const ZZ_pX& a,  const ZZ_pX& f)$/;"	f
InvMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX InvMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
InvMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX InvMod(const zz_pX& a, const zz_pX& f)$/;"	f
InvModError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void InvModError(const char *msg) { TerminalError(msg); }$/;"	f
InvModError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void InvModError(const char *msg) { throw ArithmeticErrorObject(msg); }$/;"	f
InvModErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   InvModErrorObject(const char *s, const ZZ& a, const ZZ& n)$/;"	f	class:InvModErrorObject
InvModErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class InvModErrorObject : public ArithmeticErrorObject {$/;"	c
InvModStatus	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long InvModStatus(GF2X& c, const GF2X& a, const GF2XModulus& F)$/;"	f
InvModStatus	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long InvModStatus(ZZ& x, const ZZ& a, const ZZ& n)$/;"	f
InvPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR InvPrec(const RR& a, long p)$/;"	f
InvTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX InvTrunc(const GF2EX& a, long m)$/;"	f
InvTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X InvTrunc(const GF2X& a, long e)$/;"	f
InvTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX InvTrunc(const ZZX& a, long m)$/;"	f
InvTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX InvTrunc(const ZZ_pEX& a, long m)$/;"	f
InvTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX InvTrunc(const ZZ_pX& a, long m)$/;"	f
InvTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX InvTrunc(const zz_pEX& a, long m)$/;"	f
InvTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX InvTrunc(const zz_pX& a, long m)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX IrredPolyMod(const GF2EX& g, const GF2EXModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX IrredPolyMod(const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X IrredPolyMod(const GF2X& g, const GF2XModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X IrredPolyMod(const GF2X& g, const GF2XModulus& F, long m)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX IrredPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX IrredPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX IrredPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX IrredPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F, long m)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void IrredPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX IrredPolyMod(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX IrredPolyMod(const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void IrredPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX IrredPolyMod(const zz_pX& g, const zz_pXModulus& F)$/;"	f
IrredPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX IrredPolyMod(const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2X IrredPolyTower(const GF2EX& g, const GF2EXModulus& F)$/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2X IrredPolyTower(const GF2EX& g, const GF2EXModulus& F,$/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void IrredPolyTower(GF2X& h, const GF2EX& g, $/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pX IrredPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pX IrredPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F,$/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void IrredPolyTower(ZZ_pX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void IrredPolyTower(zz_pX& h, const zz_pEX& g, $/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pX IrredPolyTower(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
IrredPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pX IrredPolyTower(const zz_pEX& g, const zz_pEXModulus& F,$/;"	f
IsFFTPrime	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static bool IsFFTPrime() { return zz_pInfo->p_info != 0; }$/;"	f	class:zz_p
IsFinite	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long IsFinite(double *p) { return _ntl_IsFinite(p); }$/;"	f
IsOdd	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long IsOdd(const ZZ& a)$/;"	f
IsOne	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long IsOne(GF2 a)$/;"	f
IsOne	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long IsOne(const GF2E& a)$/;"	f
IsOne	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long IsOne(const ZZ& a)$/;"	f
IsOne	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline long IsOne(const ZZ_p& a)$/;"	f
IsOne	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long IsOne(const ZZ_pE& a)$/;"	f
IsOne	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long IsOne(zz_p a)$/;"	f
IsOne	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long IsOne(const zz_pE& a)$/;"	f
IsZero	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long IsZero(GF2 a)$/;"	f
IsZero	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long IsZero(const GF2E& a)$/;"	f
IsZero	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long IsZero(const ZZ& a)$/;"	f
IsZero	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline long IsZero(const ZZ_p& a)$/;"	f
IsZero	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long IsZero(const ZZ_pE& a)$/;"	f
IsZero	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long IsZero(zz_p a)$/;"	f
IsZero	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long IsZero(const zz_pE& a)$/;"	f
KarCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^   long KarCross;$/;"	m	class:GF2EInfoT
KarCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static long KarCross() { return GF2EInfo->KarCross; }$/;"	f	class:GF2E
KillBig	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^void KillBig() { xrep.KillBig(); }$/;"	f	class:GF2X
KillBig	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   void KillBig() { if (MaxLength() > NTL_RELEASE_THRESH) kill(); }$/;"	f	class:WordVector
KillBig	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^void KillBig() { if (MaxAlloc() > NTL_RELEASE_THRESH) kill(); }$/;"	f	class:ZZ
KillBig	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^void KillBig() { _ZZ_p__rep.KillBig(); }$/;"	f	class:ZZ_p
LLLCheckFct	/home/penguin/projects/ntl-11.3.2/include/NTL/LLL.h	/^typedef long (*LLLCheckFct)(const vec_ZZ&); $/;"	t
Lazy	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   Lazy() : initialized(false) { }$/;"	f	class:Lazy
Lazy	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   Lazy(const Lazy& other) : initialized(false)$/;"	f	class:Lazy
Lazy	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^class Lazy {$/;"	c
LazyTable	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^   LazyTable() : len(0) { }$/;"	f	class:LazyTable
LazyTable	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^class LazyTable {$/;"	c
LeftRotate_lip_impl	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^LeftRotate_lip_impl(ZZ& a, const ZZ& b, long e, const ZZ& p, long n, ZZ& scratch)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX LeftShift(const GF2EX& a, long n)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X LeftShift(const GF2X& a, long n)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ LeftShift(const ZZ& a, long k)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void LeftShift(ZZ& x, const ZZ& a, long k)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX LeftShift(const ZZX& a, long n)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX LeftShift(const ZZ_pEX& a, long n)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX LeftShift(const ZZ_pX& a, long n)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX LeftShift(const zz_pEX& a, long n)$/;"	f
LeftShift	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX LeftShift(const zz_pX& a, long n)$/;"	f
LogicError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void LogicError(const char *msg) { TerminalError(msg); }$/;"	f
LogicError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void LogicError(const char *msg) { throw LogicErrorObject(msg); }$/;"	f
LogicErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   LogicErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:LogicErrorObject
LogicErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class LogicErrorObject : public ErrorObject {$/;"	c
LoopHole	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2X& LoopHole() { return _GF2E__rep; }$/;"	f	class:GF2E
LoopHole	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ& LoopHole() { return _ZZ_p__rep; }$/;"	f	class:ZZ_p
LoopHole	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pX& LoopHole() { return _ZZ_pE__rep; }$/;"	f	class:ZZ_pE
LoopHole	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^long& LoopHole() { return _zz_p__rep; }$/;"	f	class:zz_p
LoopHole	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pX& LoopHole() { return _zz_pE__rep; }$/;"	f	class:zz_pE
LowLevelPowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void LowLevelPowerMod(ZZ& x, const ZZ& a, const ZZ& e, const ZZ& n)$/;"	f
MakeCloneable	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^CloneablePtr<T> MakeCloneable(Args&&... args)$/;"	f
MakeCloneableAux	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   MakeCloneableAux(Args&&... args) : d(std::forward<Args>(args)...) { }$/;"	f	class:MakeCloneableAux
MakeCloneableAux	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class MakeCloneableAux : public CloneablePtrControl {$/;"	c
MakeMatrix	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^void MakeMatrix(Mat<T>& x, const Vec< Vec<T> >& a)  $/;"	f
MakeMatrixStatus	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^bool MakeMatrixStatus(Mat<T>& x, const Vec< Vec<T> >& a)  $/;"	f
MakeOdd	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long MakeOdd(ZZ& x)$/;"	f
MakeRR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR MakeRR(const ZZ& a,  long e)$/;"	f
MakeRRPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR MakeRRPrec(const ZZ& a, long e, long p)$/;"	f
MakeRaw	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^T* MakeRaw(Args&&... args) { $/;"	f
MakeRawArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^T *MakeRawArray(long n)$/;"	f
MakeSmart	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^SmartPtr<T> MakeSmart(Args&&... args)$/;"	f
MakeSmartAux	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   MakeSmartAux(Args&&... args) : d(std::forward<Args>(args)...) { }$/;"	f	class:MakeSmartAux
MakeSmartAux	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class MakeSmartAux : public SmartPtrControl {$/;"	c
Mat	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   Mat() : _mat__numcols(0) { }  $/;"	f	class:Mat
Mat	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   Mat(Mat& x, INIT_TRANS_TYPE) :  $/;"	f	class:Mat
Mat	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   Mat(Mat&& other) noexcept : Mat() $/;"	f	class:Mat
Mat	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^Mat<T>::Mat(INIT_SIZE_TYPE, long n, long m) : _mat__numcols(0)$/;"	f	class:Mat
Mat	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^Mat<T>::Mat(const Mat& src) : $/;"	f	class:Mat
Mat	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^class Mat {  $/;"	c
MatPrimeInfo	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^struct MatPrimeInfo {$/;"	s
MatPrimeTablesType	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^typedef LazyTable<MatPrimeInfo, NTL_MAX_MATPRIMES> MatPrimeTablesType;$/;"	t
MatPrime_crt_helper	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^struct MatPrime_crt_helper {$/;"	s
MatPrime_crt_helper_deleter_policy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   struct MatPrime_crt_helper_deleter_policy {$/;"	s	class:ZZ_pInfoT
MatPrime_crt_helper_info	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   Lazy<MatPrime_crt_helper,MatPrime_crt_helper_deleter_policy> MatPrime_crt_helper_info;$/;"	m	class:ZZ_pInfoT
MatPrime_crt_helper_scratch	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^struct MatPrime_crt_helper_scratch {$/;"	s
MatPrime_residue_t	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^typedef int MatPrime_residue_t;$/;"	t
MaxAlloc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long MaxAlloc() const$/;"	f	class:ZZ
MaxK	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long MaxK;             \/\/ maximum space allocated$/;"	m	class:FFTRep
MaxK	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long MaxK;             \/\/ maximum space allocated$/;"	m	class:fftRep
MaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   long MaxLength() const $/;"	f	class:WordVector
MaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   long MaxLength() const { return _maxlen >> 1; }  $/;"	f	class:Vec
MaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long MaxLength() const $/;"	f	class:Vec
MaxN	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long MaxN;$/;"	m	class:ZZ_pXModRep
MaxRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   long MaxRoot;  $/;"	m	class:ZZ_pFFTInfoT
MaxRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   long MaxRoot;$/;"	m	class:zz_pInfoT
MemoryError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void MemoryError() { TerminalError("out of memory"); }$/;"	f
MemoryError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void MemoryError() { throw NTL_SNS bad_alloc(); }$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX MinPolyMod(const GF2EX& g, const GF2EXModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX MinPolyMod(const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MinPolyMod(const GF2X& g, const GF2XModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MinPolyMod(const GF2X& g, const GF2XModulus& F, long m)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX MinPolyMod(const ZZX& a, const ZZX& f)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F, long m)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void MinPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX MinPolyMod(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX MinPolyMod(const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void MinPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MinPolyMod(const zz_pX& g, const zz_pXModulus& F)$/;"	f
MinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MinPolyMod(const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
MinPolySeq	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX MinPolySeq(const vec_GF2E& a, long m)$/;"	f
MinPolySeq	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MinPolySeq(const vec_GF2& a, long m)$/;"	f
MinPolySeq	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MinPolySeq(const vec_ZZ_pE& a, long m)$/;"	f
MinPolySeq	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MinPolySeq(const vec_ZZ_p& a, long m)$/;"	f
MinPolySeq	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX MinPolySeq(const vec_zz_pE& a, long m)$/;"	f
MinPolySeq	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MinPolySeq(const vec_zz_p& a, long m)$/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2X MinPolyTower(const GF2EX& g, const GF2EXModulus& F)$/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2X MinPolyTower(const GF2EX& g, const GF2EXModulus& F,$/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void MinPolyTower(GF2X& h, const GF2EX& g, $/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pX MinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pX MinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F,$/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void MinPolyTower(ZZ_pX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void MinPolyTower(zz_pX& h, const zz_pEX& g, $/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pX MinPolyTower(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
MinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pX MinPolyTower(const zz_pEX& g, const zz_pEXModulus& F,$/;"	f
MinusMModP	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   ZZ MinusMModP;  \/\/  -M mod p, M = product of primes$/;"	m	struct:MatPrime_crt_helper
MinusMModP	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ MinusMModP;  \/\/  -M mod p, M = product of primes$/;"	m	class:ZZ_pFFTInfoT
MinusMModP	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   long MinusMModP;  \/\/  -M mod p, M = product of primes$/;"	m	class:zz_pInfoT
MinusMModPpinv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   mulmod_precon_t MinusMModPpinv;$/;"	m	class:zz_pInfoT
ModCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^   long ModCross;$/;"	m	class:GF2EInfoT
ModCross	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static long ModCross() { return GF2EInfo->ModCross; }$/;"	f	class:GF2E
ModCross	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^static long ModCross() { return 8; }$/;"	f	class:ZZ_pE
ModCross	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^static long ModCross() { return 8; }$/;"	f	class:zz_pE
ModulusInverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^mulmod_t ModulusInverse() const { return ptr->pinv; }$/;"	f	class:zz_pContext
ModulusInverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static mulmod_t ModulusInverse() { return zz_pInfo->pinv; }$/;"	f	class:zz_p
ModulusSize	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^static long ModulusSize() { return ZZ_pInfo->size; }$/;"	f	class:ZZ_p
MulAdd	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble MulAdd(const xdouble& a, const xdouble& b, $/;"	f
MulAddTo	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^MulAddTo(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
MulAddTo	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^MulAddTo(ZZ& x, const ZZ& a, long b)$/;"	f
MulByX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MulByX(const GF2X& a) $/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX MulByXMod(const GF2EX& a, const GF2EX& f)$/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MulByXMod(const GF2X& a, const GF2X& f)$/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MulByXMod(const GF2X& a, const GF2XModulus& F)$/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX MulByXMod(const ZZX& a, const ZZX& f)$/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulByXMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulByXMod(const ZZ_pX& a,  const ZZ_pX& f)$/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX MulByXMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
MulByXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MulByXMod(const zz_pX& a, const zz_pX& f)$/;"	f
MulDivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long MulDivRem(long& qres, long a, long b, long n,  sp_muldivrem_struct bninv)$/;"	f
MulDivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long MulDivRem(long& qres, long a, long b, long n, wide_double bninv)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX MulMod(const GF2EX& a, const GF2EX& b, const GF2EX& f)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX MulMod(const GF2EX& a, const GF2EX& b, const GF2EXModulus& F)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MulMod(const GF2X& a, const GF2X& b, const GF2X& f)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MulMod(const GF2X& a, const GF2X& b, const GF2XModulus& F)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ MulMod(const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ MulMod(const ZZ& a, long b, const ZZ& n)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ MulMod(long a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void MulMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void MulMod(ZZ& x, const ZZ& a, long b, const ZZ& n)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void MulMod(ZZ& x, long a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX MulMod(const ZZX& a, const ZZX& b, const ZZX& f)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulMod(const ZZ_pEX& a, const ZZ_pEX& b, $/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulMod(const ZZ_pEX& a, const ZZ_pEX& b, const ZZ_pEX& f)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulMod(const ZZ_pX& a, const ZZ_pX& b, const ZZ_pX& f)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulMod(const ZZ_pX& a, const ZZ_pX& b, const ZZ_pXModulus& F)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulMod(const ZZ_pX& a, const ZZ_pXMultiplier& B,$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX MulMod(const zz_pEX& a, const zz_pEX& b, $/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX MulMod(const zz_pEX& a, const zz_pEX& b, const zz_pEX& f)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MulMod(const zz_pX& a, const zz_pX& b, const zz_pX& f)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MulMod(const zz_pX& a, const zz_pX& b, const zz_pXModulus& F)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MulMod(const zz_pX& a, const zz_pXMultiplier& B,$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^MulMod(long a, long b, long n, sp_inverse ninv)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long MulMod(long a, long b, long n)$/;"	f
MulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long MulMod(long a, long b, long n, wide_double ninv)$/;"	f
MulMod2	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline long MulMod2(long a, long b, long n, wide_double bninv)$/;"	f
MulMod2_legacy	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long MulMod2_legacy(long a, long b, long n, wide_double bninv)$/;"	f
MulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline long MulModPrecon(long a, long b, long n, unsigned long bninv)$/;"	f
MulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline long MulModPrecon(long a, long b, long n, wide_double bninv)$/;"	f
MulModPreconWithQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline long MulModPreconWithQuo(long& qq, long a, long b, long n, wide_double bninv)$/;"	f
MulModPreconWithQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline long MulModPreconWithQuo(long& qres, long a, long b, long n, unsigned long bninv)$/;"	f
MulModWithQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^MulModWithQuo(long& qres, long a, long b, long n, sp_inverse ninv)$/;"	f
MulModWithQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long MulModWithQuo(long& qres, long a, long b, long n, wide_double ninv)$/;"	f
MulPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR MulPrec(const RR& a, const RR& b, long p)$/;"	f
MulSub	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble MulSub(const xdouble& a, const xdouble& b, $/;"	f
MulSubFrom	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^MulSubFrom(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
MulSubFrom	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^MulSubFrom(ZZ& x, const ZZ& a, long b)$/;"	f
MulTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX MulTrunc(const GF2EX& a, const GF2EX& b, long n)$/;"	f
MulTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X MulTrunc(const GF2X& a, const GF2X& b, long n)$/;"	f
MulTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX MulTrunc(const ZZX& a, const ZZX& b, long n)$/;"	f
MulTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulTrunc(const ZZ_pEX& a, const ZZ_pEX& b, long n)$/;"	f
MulTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulTrunc(const ZZ_pX& a, const ZZ_pX& b, long n)$/;"	f
MulTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX MulTrunc(const zz_pEX& a, const zz_pEX& b, long n)$/;"	f
MulTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX MulTrunc(const zz_pX& a, const zz_pX& b, long n)$/;"	f
MustRestore	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^bool MustRestore;$/;"	m	class:GF2EBak
MustRestore	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^bool MustRestore;$/;"	m	class:ZZ_pBak
MustRestore	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^bool MustRestore;$/;"	m	class:ZZ_pEBak
MustRestore	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^bool MustRestore;$/;"	m	class:zz_pBak
MustRestore	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^bool MustRestore;$/;"	m	class:zz_pEBak
MutexProxy	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   MutexProxy() { }$/;"	f	class:MutexProxy
MutexProxy	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^class MutexProxy { $/;"	c
NTL_ALIGNED_LOCAL_ARRAY	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	502;"	d
NTL_ALWAYS_INLINE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	440;"	d
NTL_ALWAYS_INLINE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	445;"	d
NTL_ARGTYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	815;"	d
NTL_ARGTYPES	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	816;"	d
NTL_AVX512_BYTE_ALIGN	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	512;"	d
NTL_AVX512_LOCAL_ARRAY	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	514;"	d
NTL_AVX_BYTE_ALIGN	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	507;"	d
NTL_AVX_DBL_ALIGN	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	508;"	d
NTL_AVX_LOCAL_ARRAY	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	510;"	d
NTL_BASIC_MALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	214;"	d
NTL_BASIC_SNS_MALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	240;"	d
NTL_BITS_PER_INT32	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	123;"	d
NTL_BITS_PER_INT32	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	131;"	d
NTL_BITS_PER_LIMB_T	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	21;"	d
NTL_BITS_PER_LIMB_T	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	128;"	d
NTL_BITS_PER_NONCE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	1178;"	d
NTL_BITS_PER_NONCE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	1180;"	d
NTL_BasicThreadPool__H	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	3;"	d
NTL_CHEAP_THREAD_LOCAL	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	342;"	d
NTL_CHEAP_THREAD_LOCAL	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	344;"	d
NTL_CHEAP_THREAD_LOCAL	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	350;"	d
NTL_CLEAN_PTR	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	207;"	d
NTL_CLIENT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	93;"	d
NTL_CLOSE_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	64;"	d
NTL_CLOSE_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	84;"	d
NTL_CRT_ALTCODE	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	455;"	d
NTL_CXX_STANDARD	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	27;"	d
NTL_CXX_STANDARD	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	29;"	d
NTL_CXX_STANDARD	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	31;"	d
NTL_DECLARE_RELOCATABLE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	1125;"	d
NTL_DECLARE_RELOCATABLE_WHEN	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^template<class S, class T> NTL_DECLARE_RELOCATABLE_WHEN((Pair<S,T>*))$/;"	f
NTL_DECLARE_RELOCATABLE_WHEN	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	1007;"	d
NTL_DECLARE_RELOCATABLE_WHEN	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	1112;"	d
NTL_DEFAULT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	1137;"	d
NTL_DEFAULT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	1141;"	d
NTL_DEFAULT_ALIGN	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	517;"	d
NTL_DEFINE_COPIED_MAKE	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	1306;"	d
NTL_DEFINE_MAKECLONEABLE	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	918;"	d
NTL_DEFINE_MAKERAW	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	950;"	d
NTL_DEFINE_MAKESMART	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	874;"	d
NTL_DEFINE_MAKESMART	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	890;"	d
NTL_DEFINE_OPTIONAL_VAL_MAKE	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	1488;"	d
NTL_DEFINE_SCALAR_MOVE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	415;"	d
NTL_DEFINE_SMART_CONSTRUCTOR	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	862;"	d
NTL_DEFINE_SWAP	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	380;"	d
NTL_DEFINE_UNIQUE_MAKE	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	1121;"	d
NTL_DISABLE_MOVE_ASSIGN	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	159;"	d
NTL_EMPTY_ARG	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	712;"	d
NTL_END_IMPL	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	75;"	d
NTL_END_IMPL	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	89;"	d
NTL_EXEC_INDEX	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	642;"	d
NTL_EXEC_INDEX_END	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	648;"	d
NTL_EXEC_RANGE	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	620;"	d
NTL_EXEC_RANGE_END	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	626;"	d
NTL_FAKE_NOEXCEPT	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	41;"	d
NTL_FAKE_NOEXCEPT	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	43;"	d
NTL_FAKE_NOEXCEPT	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	49;"	d
NTL_FFTFudge	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	15;"	d
NTL_FFTMaxRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	28;"	d
NTL_FFTMaxRootBnd	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	23;"	d
NTL_FFT_BIGTAB	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	397;"	d
NTL_FFT_LAZYMUL	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	410;"	d
NTL_FFT_RDUP	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT_impl.h	21;"	d
NTL_FFT__H	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	3;"	d
NTL_FFT_impl__H	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT_impl.h	3;"	d
NTL_FILE_THRESH	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	155;"	d
NTL_FOREACH_ARG	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	807;"	d
NTL_FOREACH_ARG1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	810;"	d
NTL_FRADIX	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	124;"	d
NTL_FRADIX_INV	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	108;"	d
NTL_FRADIX_INV	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	125;"	d
NTL_FacVec__H	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	3;"	d
NTL_GEXEC_RANGE	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	631;"	d
NTL_GEXEC_RANGE_END	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	637;"	d
NTL_GF2EXFactoring__H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	4;"	d
NTL_GF2EX__H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	4;"	d
NTL_GF2E__H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	4;"	d
NTL_GF2XFactoring__H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	2;"	d
NTL_GF2XRegister	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	803;"	d
NTL_GF2XVec__H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	2;"	d
NTL_GF2X_ALTCODE1	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	492;"	d
NTL_GF2X__H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	3;"	d
NTL_GF2__H	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	3;"	d
NTL_GMP_LIP	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	101;"	d
NTL_GNUC_INTEL	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	13;"	d
NTL_HAVE_LL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	20;"	d
NTL_HAVE_MULMOD_T	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	39;"	d
NTL_HAVE_SP_LL_ROUTINES	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	1002;"	d
NTL_HNF__H	/home/penguin/projects/ntl-11.3.2/include/NTL/HNF.h	3;"	d
NTL_IMPORT	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	721;"	d
NTL_IMPORT_FROM_STD	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	40;"	d
NTL_INPUT_CHECK_ERR	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	139;"	d
NTL_INPUT_CHECK_RET	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	146;"	d
NTL_INPUT_ERROR	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	118;"	d
NTL_KEEP_NONZERO_0	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	796;"	d
NTL_KEEP_NONZERO_1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	797;"	d
NTL_KEEP_NONZERO_2	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	798;"	d
NTL_KEEP_NONZERO_3	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	799;"	d
NTL_KEEP_NONZERO_4	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	800;"	d
NTL_KEEP_NONZERO_5	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	801;"	d
NTL_KEEP_NONZERO_6	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	802;"	d
NTL_KEEP_NONZERO_7	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	803;"	d
NTL_KEEP_NONZERO_8	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	804;"	d
NTL_KEEP_NONZERO_9	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	805;"	d
NTL_LG2_PDSZ	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT_impl.h	16;"	d
NTL_LLL__H	/home/penguin/projects/ntl-11.3.2/include/NTL/LLL.h	2;"	d
NTL_LONGDOUBLE_SP_MULMOD	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	54;"	d
NTL_LONGLONG_SP_MULMOD	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	32;"	d
NTL_LazyTable__H	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	3;"	d
NTL_Lazy__H	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	78;"	d
NTL_MAJOR_VERSION	/home/penguin/projects/ntl-11.3.2/include/NTL/version.h	7;"	d
NTL_MALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	218;"	d
NTL_MALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	223;"	d
NTL_MAX_ALLOC_BLOCK	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	298;"	d
NTL_MAX_FFTPRIMES	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	80;"	d
NTL_MAX_MATPRIMES	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	53;"	d
NTL_MINOR_VERSION	/home/penguin/projects/ntl-11.3.2/include/NTL/version.h	8;"	d
NTL_MORE_ARGTYPES	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	817;"	d
NTL_MORE_PASSTYPES	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	824;"	d
NTL_MatPrimeFudge	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	14;"	d
NTL_MatPrimeLimit	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	18;"	d
NTL_MatPrime_HALF_SIZE_STRATEGY	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	41;"	d
NTL_MatPrime_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	24;"	d
NTL_MatPrime_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	31;"	d
NTL_MatPrime__H	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	3;"	d
NTL_NAMESPACE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	62;"	d
NTL_NAMESPACE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	82;"	d
NTL_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	115;"	d
NTL_NBITSH	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	104;"	d
NTL_NBITSH	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	119;"	d
NTL_NEW_OP	/home/penguin/projects/ntl-11.3.2/include/NTL/new.h	7;"	d
NTL_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	66;"	d
NTL_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	86;"	d
NTL_NOEXCEPT	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	38;"	d
NTL_NOEXCEPT	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	48;"	d
NTL_NO_INIT_TRANS	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	265;"	d
NTL_NO_X86_FIX	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	299;"	d
NTL_NSP_BOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	137;"	d
NTL_NSP_BOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	98;"	d
NTL_NSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	136;"	d
NTL_NSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	82;"	d
NTL_NSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	84;"	d
NTL_NSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	85;"	d
NTL_OPEN_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	63;"	d
NTL_OPEN_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	83;"	d
NTL_OPT_RETURN	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	201;"	d
NTL_OPT_RETURN	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	203;"	d
NTL_OVERFLOW	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	179;"	d
NTL_OVERFLOW1	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	198;"	d
NTL_OVFBND	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	150;"	d
NTL_OVFBND1	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	163;"	d
NTL_OVFBND1	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	165;"	d
NTL_PACKAGE	/home/penguin/projects/ntl-11.3.2/include/NTL/PackageInfo.h	1;"	d
NTL_PASSARG	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	826;"	d
NTL_PASSARGS	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	827;"	d
NTL_PASSTYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	822;"	d
NTL_PASSTYPES	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	823;"	d
NTL_PASTE_TOKENS	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	140;"	d
NTL_PASTE_TOKENS2	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	139;"	d
NTL_PDSZ	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT_impl.h	22;"	d
NTL_PD__H	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	2;"	d
NTL_POST_SHIFT	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	561;"	d
NTL_POST_SHIFT	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	568;"	d
NTL_PRE_SHIFT1	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	560;"	d
NTL_PRE_SHIFT1	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	567;"	d
NTL_PRE_SHIFT2	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	563;"	d
NTL_PRE_SHIFT2	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	570;"	d
NTL_PRG_KEYLEN	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	1076;"	d
NTL_PRIME_BND	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	1659;"	d
NTL_PRIME_BND	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	1661;"	d
NTL_PROVIDES_SS_LIP_IMPL	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	686;"	d
NTL_PROVIDES_TRUNC_FFT	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	13;"	d
NTL_RADIX	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	103;"	d
NTL_RADIX	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	118;"	d
NTL_RADIXM	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	105;"	d
NTL_RADIXM	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	120;"	d
NTL_RADIXROOT	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	106;"	d
NTL_RADIXROOT	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	121;"	d
NTL_RADIXROOTM	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	107;"	d
NTL_RADIXROOTM	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	122;"	d
NTL_RANGE_CHECK_CODE	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	31;"	d
NTL_RANGE_CHECK_CODE	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	33;"	d
NTL_REALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	269;"	d
NTL_RELEASE_THRESH	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	355;"	d
NTL_RELOC_TAG	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	1005;"	d
NTL_RELOC_TAG	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	1110;"	d
NTL_REPEATER_0	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	774;"	d
NTL_REPEATER_1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	775;"	d
NTL_REPEATER_2	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	776;"	d
NTL_REPEATER_3	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	777;"	d
NTL_REPEATER_4	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	778;"	d
NTL_REPEATER_5	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	779;"	d
NTL_REPEATER_6	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	780;"	d
NTL_REPEATER_7	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	781;"	d
NTL_REPEATER_8	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	782;"	d
NTL_REPEATER_9	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	783;"	d
NTL_RESTRICT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	439;"	d
NTL_RESTRICT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	444;"	d
NTL_REVISION	/home/penguin/projects/ntl-11.3.2/include/NTL/version.h	9;"	d
NTL_RR__H	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	2;"	d
NTL_SAFE_VECTORS	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	218;"	d
NTL_SCOPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	616;"	d
NTL_SCOPE	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	632;"	d
NTL_SEPARATOR_0	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	785;"	d
NTL_SEPARATOR_1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	786;"	d
NTL_SEPARATOR_2	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	787;"	d
NTL_SEPARATOR_3	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	788;"	d
NTL_SEPARATOR_4	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	789;"	d
NTL_SEPARATOR_5	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	790;"	d
NTL_SEPARATOR_6	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	791;"	d
NTL_SEPARATOR_7	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	792;"	d
NTL_SEPARATOR_8	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	793;"	d
NTL_SEPARATOR_9	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	794;"	d
NTL_SNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	37;"	d
NTL_SNS_MALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	245;"	d
NTL_SNS_MALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	251;"	d
NTL_SNS_REALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	285;"	d
NTL_SPMM_ULL	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	375;"	d
NTL_SPMM_ULL_VIABLE	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	43;"	d
NTL_SP_BOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	134;"	d
NTL_SP_BOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	97;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	133;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	40;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	42;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	47;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	48;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	56;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	61;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	62;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	69;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	78;"	d
NTL_SP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	79;"	d
NTL_START_IMPL	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	72;"	d
NTL_START_IMPL	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	88;"	d
NTL_STD_CXX11	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	141;"	d
NTL_STRINGIFY	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	142;"	d
NTL_STRINGIFY_AUX	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	143;"	d
NTL_SmartPtr__H	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	4;"	d
NTL_TBDECL	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	658;"	d
NTL_TBDECL_static	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	659;"	d
NTL_TBL_REM	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	441;"	d
NTL_THREADS	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	72;"	d
NTL_THREAD_BOOST	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	91;"	d
NTL_THREAD_LOCAL	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	339;"	d
NTL_THREAD_LOCAL	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	349;"	d
NTL_TLS_GLOBAL_ACCESS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	726;"	d
NTL_TLS_GLOBAL_DECL	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	724;"	d
NTL_TLS_GLOBAL_DECL_INIT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	715;"	d
NTL_TLS_HACK	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	63;"	d
NTL_TLS_LOCAL	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	713;"	d
NTL_TLS_LOCAL_INIT	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	685;"	d
NTL_UINT_TO_INT	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	322;"	d
NTL_ULL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	103;"	d
NTL_ULL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	73;"	d
NTL_ULL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	77;"	d
NTL_ULL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	81;"	d
NTL_ULL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	85;"	d
NTL_ULL_TYPE	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	91;"	d
NTL_ULONG_TO_LONG	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	307;"	d
NTL_UNWRAPARG	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	829;"	d
NTL_UNWRAPARGS	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	830;"	d
NTL_UPTRINT_T	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	453;"	d
NTL_UPTRINT_T	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	462;"	d
NTL_USE_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	65;"	d
NTL_USE_NNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	85;"	d
NTL_USE_SNS	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	38;"	d
NTL_USE_ZZ_pXNewArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	1146;"	d
NTL_VARARG	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	819;"	d
NTL_VARARGS	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	820;"	d
NTL_VECTOR_HEADER_SIZE	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	25;"	d
NTL_VEC_HEAD	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	27;"	d
NTL_VERSION	/home/penguin/projects/ntl-11.3.2/include/NTL/version.h	5;"	d
NTL_VectorInputBlock	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	46;"	d
NTL_VectorMinAlloc	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	40;"	d
NTL_WIDE_DOUBLE_PRECISION	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	373;"	d
NTL_WIDE_DOUBLE_PRECISION	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	384;"	d
NTL_WIDE_DOUBLE_PRECISION	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	390;"	d
NTL_WIDE_FDOUBLE_PRECISION	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	374;"	d
NTL_WIDE_FDOUBLE_PRECISION	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	385;"	d
NTL_WIDE_FDOUBLE_PRECISION	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	391;"	d
NTL_WSP_BOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	140;"	d
NTL_WSP_BOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	99;"	d
NTL_WSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	139;"	d
NTL_WSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	88;"	d
NTL_WSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	93;"	d
NTL_WSP_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	94;"	d
NTL_WV_RANGE_CHECK_CODE	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	30;"	d
NTL_WordVectorInputBlock	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	44;"	d
NTL_WordVectorMinAlloc	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	38;"	d
NTL_WordVector__H	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	3;"	d
NTL_XD_BOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	24;"	d
NTL_XD_BOUND_INV	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	25;"	d
NTL_XD_HBOUND	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	12;"	d
NTL_XD_HBOUND_INV	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	22;"	d
NTL_XD_HBOUND_LOG	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	13;"	d
NTL_ZZRegister	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	190;"	d
NTL_ZZVec__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	2;"	d
NTL_ZZXFactoring__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZXFactoring.h	2;"	d
NTL_ZZX__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	3;"	d
NTL_ZZ_FRADIX	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	130;"	d
NTL_ZZ_NBITS	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	129;"	d
NTL_ZZ_WIDE_FRADIX	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	131;"	d
NTL_ZZ__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	4;"	d
NTL_ZZ_limbs__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	2;"	d
NTL_ZZ_pEXFactoring__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	3;"	d
NTL_ZZ_pEX__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	3;"	d
NTL_ZZ_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	3;"	d
NTL_ZZ_pRegister	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	556;"	d
NTL_ZZ_pXFactoring__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	4;"	d
NTL_ZZ_pX_BERMASS_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	32;"	d
NTL_ZZ_pX_DIV_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	29;"	d
NTL_ZZ_pX_FFT_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	27;"	d
NTL_ZZ_pX_GCD_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	31;"	d
NTL_ZZ_pX_HalfGCD_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	30;"	d
NTL_ZZ_pX_NEWTON_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	28;"	d
NTL_ZZ_pX_TRACE_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	33;"	d
NTL_ZZ_pX__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	4;"	d
NTL_ZZ_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	4;"	d
NTL_config__H	/home/penguin/projects/ntl-11.3.2/include/NTL/config.h	3;"	d
NTL_ctools__H	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	3;"	d
NTL_fileio__H	/home/penguin/projects/ntl-11.3.2/include/NTL/fileio.h	3;"	d
NTL_g_lip__H	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	3;"	d
NTL_mat_GF2E__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	3;"	d
NTL_mat_GF2__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	3;"	d
NTL_mat_RR__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	3;"	d
NTL_mat_ZZ__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	3;"	d
NTL_mat_ZZ_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	3;"	d
NTL_mat_ZZ_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	3;"	d
NTL_mat_poly_ZZ__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_poly_ZZ.h	3;"	d
NTL_mat_poly_ZZ_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_poly_ZZ_p.h	3;"	d
NTL_mat_poly_zz_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_poly_lzz_p.h	3;"	d
NTL_mat_zz_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	3;"	d
NTL_mat_zz_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	3;"	d
NTL_matrix__H	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	2;"	d
NTL_new__H	/home/penguin/projects/ntl-11.3.2/include/NTL/new.h	3;"	d
NTL_pair_GF2EX_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_GF2EX_long.h	3;"	d
NTL_pair_GF2X_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_GF2X_long.h	3;"	d
NTL_pair_ZZX_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZX_long.h	3;"	d
NTL_pair_ZZ_pEX_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZ_pEX_long.h	3;"	d
NTL_pair_ZZ_pX_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZ_pX_long.h	3;"	d
NTL_pair__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	3;"	d
NTL_pair_zz_pEX_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_lzz_pEX_long.h	3;"	d
NTL_pair_zz_pX_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_lzz_pX_long.h	3;"	d
NTL_pd_FFT__H	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	3;"	d
NTL_quad_float__H	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	3;"	d
NTL_sp_arith__H	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	4;"	d
NTL_thread__H	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	3;"	d
NTL_tools__H	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	6;"	d
NTL_vec_GF2E__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	3;"	d
NTL_vec_GF2XVec__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2XVec.h	3;"	d
NTL_vec_GF2__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	3;"	d
NTL_vec_RR__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	3;"	d
NTL_vec_ZZVec__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZVec.h	3;"	d
NTL_vec_ZZ__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	3;"	d
NTL_vec_ZZ_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	3;"	d
NTL_vec_ZZ_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	3;"	d
NTL_vec_double__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_double.h	3;"	d
NTL_vec_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_long.h	3;"	d
NTL_vec_quad_float__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_quad_float.h	3;"	d
NTL_vec_ulong__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ulong.h	3;"	d
NTL_vec_vec_GF2E__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_GF2E.h	3;"	d
NTL_vec_vec_GF2__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_GF2.h	3;"	d
NTL_vec_vec_RR__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_RR.h	3;"	d
NTL_vec_vec_ZZ__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ZZ.h	3;"	d
NTL_vec_vec_ZZ_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ZZ_pE.h	3;"	d
NTL_vec_vec_ZZ_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ZZ_p.h	3;"	d
NTL_vec_vec_long__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_long.h	3;"	d
NTL_vec_vec_ulong__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ulong.h	3;"	d
NTL_vec_vec_zz_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_lzz_pE.h	3;"	d
NTL_vec_vec_zz_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_lzz_p.h	3;"	d
NTL_vec_xdouble__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_xdouble.h	3;"	d
NTL_vec_zz_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	3;"	d
NTL_vec_zz_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	3;"	d
NTL_vector__H	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	3;"	d
NTL_version__H	/home/penguin/projects/ntl-11.3.2/include/NTL/version.h	3;"	d
NTL_xdouble__H	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	2;"	d
NTL_zz_pEXFactoring__H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	3;"	d
NTL_zz_pEX__H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	3;"	d
NTL_zz_pE__H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	3;"	d
NTL_zz_pRegister	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	155;"	d
NTL_zz_pXFactoring__H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	4;"	d
NTL_zz_pX_BERMASS_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	22;"	d
NTL_zz_pX_DIV_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	19;"	d
NTL_zz_pX_GCD_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	21;"	d
NTL_zz_pX_HalfGCD_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	20;"	d
NTL_zz_pX_MOD_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	16;"	d
NTL_zz_pX_MUL_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	17;"	d
NTL_zz_pX_NEWTON_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	18;"	d
NTL_zz_pX_TRACE_CROSSOVER	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	23;"	d
NTL_zz_pX__H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	3;"	d
NTL_zz_p__H	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	3;"	d
NegateMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ NegateMod(const ZZ& a, const ZZ& n)$/;"	f
NegateMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void NegateMod(ZZ& x, const ZZ& a, const ZZ& n)$/;"	f
NegateMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long NegateMod(long a, long n)$/;"	f
NegatePrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR NegatePrec(const RR& a, long p)$/;"	f
NewDDF	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long NewDDF(const GF2EX& f, const GF2EX& h,$/;"	f
NewDDF	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline vec_pair_ZZ_pEX_long NewDDF(const ZZ_pEX& f, const ZZ_pEX& h,$/;"	f
NewDDF	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long NewDDF(const ZZ_pX& f, const ZZ_pX& h,$/;"	f
NewDDF	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline vec_pair_zz_pEX_long NewDDF(const zz_pEX& f, const zz_pEX& h,$/;"	f
NewDDF	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long NewDDF(const zz_pX& f, const zz_pX& h,$/;"	f
NextPrime	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ NextPrime(const ZZ& m, long NumTrials=10)$/;"	f
NormMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2E NormMod(const GF2EX& a, const GF2EX& f)$/;"	f
NormMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZ NormMod(const ZZX& a, const ZZX& f, long deterministic=0)$/;"	f
NormMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pE NormMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
NormMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_p NormMod(const ZZ_pX& a, const ZZ_pX& f)$/;"	f
NormMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pE NormMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
NormMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_p NormMod(const zz_pX& a, const zz_pX& f)$/;"	f
NormalizedModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^NormalizedModulus(sp_inverse ninv) { return ninv.shamt == 0; }$/;"	f
NormalizedModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline bool NormalizedModulus(wide_double ninv) { return true; }$/;"	f
NormalizedMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^NormalizedMulMod(long a, long b, long n, sp_inverse ninv)$/;"	f
NormalizedMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long NormalizedMulMod(long a, long b, long n, wide_double ninv)$/;"	f
NumBits	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long NumBits(const GF2X& a)$/;"	f
NumBits	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long NumBits(const ZZ& a)$/;"	f
NumBits	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long NumBits(long a)$/;"	f
NumBytes	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long NumBytes(const GF2X& a)$/;"	f
NumBytes	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long NumBytes(const ZZ& a)$/;"	f
NumBytes	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long NumBytes(long a)$/;"	f
NumCols	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^   long NumCols() const $/;"	f	struct:mat_ZZ_p_opaque
NumCols	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   long NumCols() const { return _mat__numcols; }  $/;"	f	class:Mat
NumIntervals	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   long NumIntervals() const { return nintervals; }$/;"	f	struct:PartitionInfo
NumPrimes	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   long NumPrimes;$/;"	m	struct:MatPrime_crt_helper
NumPrimes	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   long NumPrimes;$/;"	m	class:ZZ_pFFTInfoT
NumPrimes	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long NumPrimes; $/;"	m	class:FFTRep
NumPrimes	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long NumPrimes; $/;"	m	class:ZZ_pXModRep
NumPrimes	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   long NumPrimes;$/;"	m	class:zz_pInfoT
NumPrimes	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long NumPrimes;$/;"	m	class:fftRep
NumRows	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^   long NumRows() const $/;"	f	struct:mat_ZZ_p_opaque
NumRows	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   long NumRows() const { return _mat__rep.length(); }  $/;"	f	class:Mat
NumThreads	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  long NumThreads() const { return nthreads; }$/;"	f	class:BasicThreadPool
NumTwos	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long NumTwos(const ZZ& x)$/;"	f
OldHexOutput	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long OldHexOutput;$/;"	m	class:GF2XHexOutputPush
OptionalVal	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   OptionalVal() { }$/;"	f	class:OptionalVal
OptionalVal	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   OptionalVal(OptionalVal&& other) noexcept : OptionalVal() $/;"	f	class:OptionalVal
OptionalVal	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   OptionalVal(const OptionalVal& other) $/;"	f	class:OptionalVal
OptionalVal	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   explicit OptionalVal(T *p) : dp(p) { }$/;"	f	class:OptionalVal
OptionalVal	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class OptionalVal {$/;"	c
OutputPrecision	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^static long OutputPrecision() { return oprec; }$/;"	f	class:RR
OutputPrecision	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^  static long OutputPrecision() { return oprec; }$/;"	f	class:quad_float
OutputPrecision	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^static long OutputPrecision() { return oprec; }$/;"	f	class:xdouble
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD() { }$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(__m128d _data) : data(_data) { }$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(__m256d _data) : data(_data) { }$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(__m512d _data) : data(_data) { }$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(double d0, double d1)$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(double d0, double d1, double d2, double d3)$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(double d0, double d1, double d2, double d3,$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(double x) : data(_mm256_set1_pd(x)) { }$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(double x) : data(_mm512_set1_pd(x)) { }$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   PD(double x) : data(_mm_set1_pd(x)) { }$/;"	f	struct:PD
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^struct PD {$/;"	s
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^struct PD<2> {$/;"	s
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^struct PD<4> {$/;"	s
PD	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^struct PD<8> {$/;"	s
Pair	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^   Pair() { }  $/;"	f	class:Pair
Pair	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^   Pair(const S& x, const T& y) : a(x), b(y) { }  $/;"	f	class:Pair
Pair	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^class Pair {  $/;"	c
PartitionInfo	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   PartitionInfo(long sz, long nt = AvailableThreads()) $/;"	f	struct:PartitionInfo
PartitionInfo	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^struct PartitionInfo {$/;"	s
PowerCompose	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline GF2EX PowerCompose(const GF2EX& a, long d, const GF2EXModulus& F)$/;"	f
PowerCompose	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX PowerCompose(const ZZ_pEX& a, long d, const ZZ_pEXModulus& F)$/;"	f
PowerCompose	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX PowerCompose(const ZZ_pX& a, long d, const ZZ_pXModulus& F)$/;"	f
PowerCompose	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX PowerCompose(const zz_pEX& a, long d, const zz_pEXModulus& F)$/;"	f
PowerCompose	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline zz_pX PowerCompose(const zz_pX& a, long d, const zz_pXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX PowerMod(const GF2EX& g, const ZZ& e, const GF2EXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX PowerMod(const GF2EX& g, long e, const GF2EXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void PowerMod(GF2EX& h, const GF2EX& g, long e, const GF2EXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X PowerMod(const GF2X& g, const ZZ& e, const GF2XModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X PowerMod(const GF2X& g, long e, const GF2XModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void PowerMod(GF2X& x, const GF2X& g, long e, const GF2XModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ PowerMod(const ZZ& a, const ZZ& e, const ZZ& n)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ PowerMod(const ZZ& a, long e, const ZZ& n)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void PowerMod(ZZ& x, const ZZ& a, long e, const ZZ& n)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerMod(const ZZ_pEX& g, const ZZ& e, $/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerMod(const ZZ_pEX& g, long e, const ZZ_pEXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void PowerMod(ZZ_pEX& h, const ZZ_pEX& g, long e, $/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerMod(const ZZ_pX& a, const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerMod(const ZZ_pX& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void PowerMod(ZZ_pX& x, const ZZ_pX& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void PowerMod(zz_pEX& h, const zz_pEX& g, long e, $/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerMod(const zz_pEX& g, const ZZ& e, $/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerMod(const zz_pEX& g, long e, const zz_pEXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void PowerMod(zz_pX& x, const zz_pX& a, long e, const zz_pXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX PowerMod(const zz_pX& a, const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX PowerMod(const zz_pX& a, long e, const zz_pXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX PowerXMod(const ZZ& e, const GF2EXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX PowerXMod(long e, const GF2EXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void PowerXMod(GF2EX& h, long e, const GF2EXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X PowerXMod(const ZZ& e, const GF2XModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X PowerXMod(long e, const GF2XModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void PowerXMod(GF2X& x, long e, const GF2XModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerXMod(const ZZ& e, const ZZ_pEXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerXMod(long e, const ZZ_pEXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void PowerXMod(ZZ_pEX& h, long e, const ZZ_pEXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXMod(const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXMod(long e, const ZZ_pXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void PowerXMod(ZZ_pX& x, long e, const ZZ_pXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void PowerXMod(zz_pEX& h, long e, const zz_pEXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerXMod(const ZZ& e, const zz_pEXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerXMod(long e, const zz_pEXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void PowerXMod(zz_pX& x, long e, const zz_pXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX PowerXMod(const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerXMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX PowerXMod(long e, const zz_pXModulus& F)$/;"	f
PowerXPlusAMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXPlusAMod(const ZZ_p& a, const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerXPlusAMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXPlusAMod(const ZZ_p& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerXPlusAMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void PowerXPlusAMod(ZZ_pX& x, const ZZ_p& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerXPlusAMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void PowerXPlusAMod(zz_pX& x, zz_p a, long e, const zz_pXModulus& F)$/;"	f
PowerXPlusAMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX PowerXPlusAMod(zz_p a, const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerXPlusAMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX PowerXPlusAMod(zz_p a, long e, const zz_pXModulus& F)$/;"	f
PrepMulDivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline muldivrem_t PrepMulDivRem(long b, long n)$/;"	f
PrepMulDivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline sp_muldivrem_struct PrepMulDivRem(long b, long n, sp_inverse ninv)$/;"	f
PrepMulDivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double PrepMulDivRem(long b, long n, wide_double ninv)$/;"	f
PrepMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^PrepMulMod(long n)$/;"	f
PrepMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double PrepMulMod(long n)$/;"	f
PrepMulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^PrepMulModPrecon(long b, long n, sp_inverse ninv)$/;"	f
PrepMulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline mulmod_precon_t PrepMulModPrecon(long b, long n)$/;"	f
PrepMulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline unsigned long PrepMulModPrecon(long b, long n, wide_double ninv)$/;"	f
PrepMulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double PrepMulModPrecon(long b, long n, wide_double ninv)$/;"	f
PrimeCnt	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   long PrimeCnt;    \/\/ 0 for FFT prime;  otherwise same as NumPrimes$/;"	m	class:zz_pInfoT
PrimeCnt	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static long PrimeCnt() { return zz_pInfo->PrimeCnt; }$/;"	f	class:zz_p
PrimeSeq	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class PrimeSeq {$/;"	c
PrimitivePart	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX PrimitivePart(const ZZX& f)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX ProbMinPolyMod(const GF2EX& g, const GF2EXModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX ProbMinPolyMod(const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X ProbMinPolyMod(const GF2X& g, const GF2XModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X ProbMinPolyMod(const GF2X& g, const GF2XModulus& F, long m)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX ProbMinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX ProbMinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX ProbMinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX ProbMinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F, long m)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void ProbMinPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX ProbMinPolyMod(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX ProbMinPolyMod(const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void ProbMinPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX ProbMinPolyMod(const zz_pX& g, const zz_pXModulus& F)$/;"	f
ProbMinPolyMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX ProbMinPolyMod(const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2X ProbMinPolyTower(const GF2EX& g, const GF2EXModulus& F)$/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2X ProbMinPolyTower(const GF2EX& g, const GF2EXModulus& F,$/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void ProbMinPolyTower(GF2X& h, const GF2EX& g, $/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pX ProbMinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pX ProbMinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F,$/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void ProbMinPolyTower(ZZ_pX& h, const ZZ_pEX& g, $/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void ProbMinPolyTower(zz_pX& h, const zz_pEX& g, $/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pX ProbMinPolyTower(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
ProbMinPolyTower	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pX ProbMinPolyTower(const zz_pEX& g, const zz_pEXModulus& F,$/;"	f
ProjectPowers	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline vec_GF2E ProjectPowers(const vec_GF2E& a, long k, $/;"	f
ProjectPowers	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline vec_GF2 ProjectPowers(const vec_GF2& a, long k, $/;"	f
ProjectPowers	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE ProjectPowers(const vec_ZZ_pE& a, long k, $/;"	f
ProjectPowers	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p ProjectPowers(const vec_ZZ_p& a, long k,$/;"	f
ProjectPowers	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline vec_zz_pE ProjectPowers(const vec_zz_pE& a, long k, $/;"	f
ProjectPowers	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline vec_zz_p ProjectPowers(const vec_zz_p& a, long k,$/;"	f
PseudoDiv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX PseudoDiv(const ZZX& a, const ZZX& b)$/;"	f
PseudoDiv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void PseudoDiv(ZZX& q, const ZZX& a, const ZZX& b)$/;"	f
PseudoDivRem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void PseudoDivRem(ZZX& q, ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
PseudoRem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX PseudoRem(const ZZX& a, const ZZX& b)$/;"	f
PseudoRem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void PseudoRem(ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
QuickAccumBegin	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^void QuickAccumBegin(ZZ& x, long sz)$/;"	f
QuickAccumEnd	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^void QuickAccumEnd(ZZ& x)$/;"	f
QuickAccumMulAdd	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^void QuickAccumMulAdd(ZZ& x, const ZZ& y, long b)$/;"	f
QuickRem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void QuickRem(ZZ& r, const ZZ& b)$/;"	f
QuickSetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   void QuickSetLength(long n) { rep[-1] = _ntl_ulong(n); } $/;"	f	class:WordVector
QuickSetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void QuickSetLength(long n) { NTL_VEC_HEAD(_vec__rep)->length = n; } $/;"	f	class:Vec
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^RR() {  e = 0; }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^RR(RR& z, INIT_TRANS_TYPE) : x(z.x, INIT_TRANS), e(z.e) { } $/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^class RR {$/;"	c
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^explicit RR(double a) : e(0) { *this = a; }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const RR& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const ZZ& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const char *a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const quad_float& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const xdouble& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, double a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, float a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, int a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, long a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, unsigned int a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, unsigned long a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RROutputPush	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^   RROutputPush() : old_p(RR::oprec) { }$/;"	f	class:RROutputPush
RROutputPush	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^class RROutputPush {$/;"	c
RRPush	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^   RRPush() : old_p(RR::prec) { }$/;"	f	class:RRPush
RRPush	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^class RRPush {$/;"	c
RandomBits	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void RandomBits(long& x, long l) { x = RandomBits_long(l); }$/;"	f
RandomBits_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ RandomBits_ZZ(long NumBits)$/;"	f
RandomBnd	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ RandomBnd(const ZZ& n)$/;"	f
RandomBnd	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void RandomBnd(long& x, long n) { x = RandomBnd(n); }$/;"	f
RandomBndGenerator	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomBndGenerator() : p(0) { }$/;"	f	struct:RandomBndGenerator
RandomBndGenerator	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomBndGenerator(long _p) : p(0) { build(_p); }$/;"	f	struct:RandomBndGenerator
RandomBndGenerator	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^struct RandomBndGenerator {$/;"	s
RandomLen	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void RandomLen(long& x, long l) { x = RandomLen_long(l); }$/;"	f
RandomLen_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ RandomLen_ZZ(long NumBits)$/;"	f
RandomPrime_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ RandomPrime_ZZ(long l, long NumTrials=10)$/;"	f
RandomStream	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomStream(const RandomStream& other) {$/;"	f	class:RandomStream
RandomStream	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomStream(const unsigned char *key) {$/;"	f	class:RandomStream
RandomStream	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class RandomStream {$/;"	c
RandomStreamPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomStreamPush() : saved(GetCurrentRandomStream()) { }$/;"	f	class:RandomStreamPush
RandomStreamPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class RandomStreamPush {$/;"	c
RandomStream_impl_deleter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^RandomStream_impl_deleter {$/;"	s
RawGet	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T& RawGet(long i)   $/;"	f	class:Vec
RawGet	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T& RawGet(long i) const $/;"	f	class:Vec
ReAllocate	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::ReAllocate(long m, VecStrategy<false>)   $/;"	f	class:Vec
ReAllocate	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::ReAllocate(long m, VecStrategy<true>)   $/;"	f	class:Vec
ReconstructRational	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long ReconstructRational(ZZ& a, ZZ& b, const ZZ& u, const ZZ& m, $/;"	f
ReferenceWrapper	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ReferenceWrapper(T& _x) : x(_x) { }$/;"	f	class:ReferenceWrapper
ReferenceWrapper	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class ReferenceWrapper$/;"	c
Relocate_aux_Failable	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct Relocate_aux_Failable$/;"	s
Relocate_aux_TwoChars	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct Relocate_aux_TwoChars { char d[2]; };$/;"	s
Relocate_aux_has_any_copy	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^constexpr bool Relocate_aux_has_any_copy(T*)$/;"	f
Relocate_aux_has_copy	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct Relocate_aux_has_copy$/;"	s
Relocate_aux_has_trivial_copy	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^constexpr bool Relocate_aux_has_trivial_copy(T*)$/;"	f
RemoveRef	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void RemoveRef() const$/;"	f	class:CloneablePtr
RemoveRef	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void RemoveRef() const$/;"	f	class:SmartPtr
ResourceError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void ResourceError(const char *msg) { TerminalError(msg); }$/;"	f
ResourceError	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void ResourceError(const char *msg) { throw ResourceErrorObject(msg); }$/;"	f
ResourceErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   ResourceErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:ResourceErrorObject
ResourceErrorObject	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class ResourceErrorObject : public ErrorObject {$/;"	c
RestoreMatPrime	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^void RestoreMatPrime(long i)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX RightShift(const GF2EX& a, long n)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X RightShift(const GF2X& a, long n)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ RightShift(const ZZ& a, long k)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void RightShift(ZZ& x, const ZZ& a, long k)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX RightShift(const ZZX& a, long n)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX RightShift(const ZZ_pEX& a, long n)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX RightShift(const ZZ_pX& a, long n)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX RightShift(const zz_pEX& a, long n)$/;"	f
RightShift	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX RightShift(const zz_pX& a, long n)$/;"	f
RootEDF	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX RootEDF(const GF2EX& f, long verbose=0)$/;"	f
RootEDF	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pEX RootEDF(const ZZ_pEX& f, long verbose=0)$/;"	f
RootEDF	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX RootEDF(const ZZ_pX& f, long verbose=0)$/;"	f
RootEDF	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pEX RootEDF(const zz_pEX& f, long verbose=0)$/;"	f
RootEDF	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX RootEDF(const zz_pX& f, long verbose=0)$/;"	f
RootTable	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   Vec<long> RootTable[2];$/;"	m	struct:FFTPrimeInfo
RoundPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR RoundPrec(const RR& a, long p)$/;"	f
RoundToPrecision	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR RoundToPrecision(const RR& a, long p)$/;"	f
RoundToZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline ZZ RoundToZZ(const RR& a)$/;"	f
SFBerlekamp	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX SFBerlekamp(const GF2EX& f, long verbose=0)$/;"	f
SFBerlekamp	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX SFBerlekamp(const ZZ_pX& f, long verbose=0)$/;"	f
SFBerlekamp	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX SFBerlekamp(const zz_pX& f, long verbose=0)$/;"	f
SFCanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX SFCanZass(const GF2EX& f, long verbose=0)$/;"	f
SFCanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline vec_GF2X SFCanZass(const GF2X& f, long verbose=0)$/;"	f
SFCanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pEX SFCanZass(const ZZ_pEX& f, long verbose=0)$/;"	f
SFCanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX SFCanZass(const ZZ_pX& f, long verbose=0)$/;"	f
SFCanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pEX SFCanZass(const zz_pEX& f, long verbose=0)$/;"	f
SFCanZass	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX SFCanZass(const zz_pX& f, long verbose=0)$/;"	f
SFFactor	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZXFactoring.h	/^inline vec_ZZX SFFactor(const ZZX& f, long verbose=0, long bnd=0)$/;"	f
SS_AddMod_lip_impl	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^SS_AddMod_lip_impl(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& p, long n)$/;"	f
SS_SubMod_lip_impl	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^SS_SubMod_lip_impl(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& p, long n)$/;"	f
SetBit	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long SetBit(ZZ& x, long p)$/;"	f
SetDims	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void SetDims(long n, long m) $/;"	f	class:Unique2DArray
SetDims	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^void Mat<T>::SetDims(long n, long m)  $/;"	f	class:Mat
SetDimsFrom1	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void SetDimsFrom1(long n, long m) $/;"	f	class:Unique2DArray
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:GF2EX
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void SetLength(long n)$/;"	f	class:AlignedArray
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void SetLength(long n)$/;"	f	class:Unique2DArray
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void SetLength(long n)$/;"	f	class:UniqueArray
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   void SetLength(long n)$/;"	f	class:WordVector
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:ZZX
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:ZZ_pEX
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:ZZ_pX
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:zz_pEX
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:zz_pX
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void SetLength(long n) {$/;"	f	class:Vec
SetLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void SetLength(long n, const T& a) {$/;"	f	class:Vec
SetLengthAndApply	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void SetLengthAndApply(long n, F f) {$/;"	f	class:Vec
SetMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^void SetMaxLength(long n) $/;"	f	class:GF2EX
SetMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^void SetMaxLength(long n) $/;"	f	class:ZZX
SetMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^void SetMaxLength(long n) $/;"	f	class:ZZ_pEX
SetMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^void SetMaxLength(long n) $/;"	f	class:ZZ_pX
SetMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^void SetMaxLength(long n) $/;"	f	class:zz_pEX
SetMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^void SetMaxLength(long n) $/;"	f	class:zz_pX
SetMaxLength	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::SetMaxLength(long n) $/;"	f	class:Vec
SetNumThreads	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^inline void SetNumThreads(long n) $/;"	f
SetSize	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^void SetSize(long k)$/;"	f	class:ZZ
SimpleSignal	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     SimpleSignal() : val(0) { }$/;"	f	class:BasicThreadPool::SimpleSignal
SimpleSignal	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   class SimpleSignal {$/;"	c	class:BasicThreadPool
SinglePrecision	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long SinglePrecision() const$/;"	f	class:ZZ
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr() : dp(0), cp(0)  { }$/;"	f	class:SmartPtr
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr(SmartPtrLoopHole, T* _dp, SmartPtrControl *_cp) : dp(_dp), cp(_cp)$/;"	f	class:SmartPtr
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr(Y* p, ChoosePolicy<P>) : dp(p), cp(0) $/;"	f	class:SmartPtr
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr(const SmartPtr& other) : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr(const SmartPtr<Y>& other) : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr(fake_null_type1) : dp(0), cp(0) { }$/;"	f	class:SmartPtr
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   explicit SmartPtr(Y* p) : dp(p), cp(0) $/;"	f	class:SmartPtr
SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class SmartPtr {$/;"	c
SmartPtrControl	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtrControl() { }$/;"	f	class:SmartPtrControl
SmartPtrControl	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class SmartPtrControl {$/;"	c
SmartPtrControlDerived	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtrControlDerived(T* _p) : p(_p)  { }$/;"	f	class:SmartPtrControlDerived
SmartPtrControlDerived	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class SmartPtrControlDerived : public SmartPtrControl {$/;"	c
SmartPtrLoopHole	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^struct SmartPtrLoopHole { };$/;"	s
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX SqrMod(const GF2EX& a, const GF2EX& f)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX SqrMod(const GF2EX& a, const GF2EXModulus& F)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X SqrMod(const GF2X& a, const GF2X& f)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X SqrMod(const GF2X& a, const GF2XModulus& F)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ SqrMod(const ZZ& a, const ZZ& n)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void SqrMod(ZZ& x, const ZZ& a, const ZZ& n)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX SqrMod(const ZZX& a, const ZZX& f)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX SqrMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX SqrMod(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX SqrMod(const ZZ_pX& a,  const ZZ_pX& f)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX SqrMod(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX SqrMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX SqrMod(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX SqrMod(const zz_pX& a, const zz_pX& f)$/;"	f
SqrMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX SqrMod(const zz_pX& a, const zz_pXModulus& F)$/;"	f
SqrPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR SqrPrec(const RR& a, long p)$/;"	f
SqrRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR SqrRoot(const RR& a)$/;"	f
SqrRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ SqrRoot(const ZZ& a)$/;"	f
SqrRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long SqrRoot(long a) { return _ntl_gsqrts(a); }$/;"	f
SqrRoot	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void SqrRoot(ZZ& x, const ZZ& a)$/;"	f
SqrRootMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ SqrRootMod(const ZZ& a, const ZZ& n)$/;"	f
SqrRootPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR SqrRootPrec(const RR& a, long p)$/;"	f
SqrTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX SqrTrunc(const GF2EX& a, long n)$/;"	f
SqrTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X SqrTrunc(const GF2X& a, long n)$/;"	f
SqrTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX SqrTrunc(const ZZX& a, long n)$/;"	f
SqrTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX SqrTrunc(const ZZ_pEX& a, long n)$/;"	f
SqrTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX SqrTrunc(const ZZ_pX& a, long n)$/;"	f
SqrTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX SqrTrunc(const zz_pEX& a, long n)$/;"	f
SqrTrunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX SqrTrunc(const zz_pX& a, long n)$/;"	f
SquareFreeDecomp	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long SquareFreeDecomp(const GF2EX& f)$/;"	f
SquareFreeDecomp	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline vec_pair_GF2X_long SquareFreeDecomp(const GF2X& f)$/;"	f
SquareFreeDecomp	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZXFactoring.h	/^inline vec_pair_ZZX_long SquareFreeDecomp(const ZZX& f)$/;"	f
SquareFreeDecomp	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline vec_pair_ZZ_pEX_long SquareFreeDecomp(const ZZ_pEX& f)$/;"	f
SquareFreeDecomp	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long SquareFreeDecomp(const ZZ_pX& f)$/;"	f
SquareFreeDecomp	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline vec_pair_zz_pEX_long SquareFreeDecomp(const zz_pEX& f)$/;"	f
SquareFreeDecomp	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long SquareFreeDecomp(const zz_pX& f)$/;"	f
SubMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ SubMod(const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
SubMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ SubMod(const ZZ& a, long b, const ZZ& n)$/;"	f
SubMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ SubMod(long a, const ZZ& b, const ZZ& n)$/;"	f
SubMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void SubMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
SubMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long SubMod(long a, long b, long n)$/;"	f
SubPos	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void SubPos(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
SubPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR SubPrec(const RR& a, const RR& b, long p)$/;"	f
SwitchBit	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long SwitchBit(ZZ& x, long p)$/;"	f
T_ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   typedef T *T_ptr;$/;"	t	class:Unique2DArray
ToFFTRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void ToFFTRep(FFTRep& y, const ZZ_pX& x, long k)$/;"	f
ToFFTRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^void ToFFTRep(FFTRep& y, const ZZ_pX& x, long k, long lo, long hi)$/;"	f
ToFFTRep_trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void ToFFTRep_trunc(FFTRep& y, const ZZ_pX& x, long k, long len)$/;"	f
TofftRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void TofftRep(fftRep& y, const zz_pX& x, long k)$/;"	f
TofftRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^void TofftRep(fftRep& y, const zz_pX& x, long k, long lo, long hi)$/;"	f
TofftRep_trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void TofftRep_trunc(fftRep& y, const zz_pX& x, long k, long len)$/;"	f
TraceMap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline GF2EX TraceMap(const GF2EX& a, long d, const GF2EXModulus& F,$/;"	f
TraceMap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX TraceMap(const ZZ_pEX& a, long d, const ZZ_pEXModulus& F,$/;"	f
TraceMap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX TraceMap(const ZZ_pX& a, long d, const ZZ_pXModulus& F,$/;"	f
TraceMap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX TraceMap(const zz_pEX& a, long d, const zz_pEXModulus& F,$/;"	f
TraceMap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline zz_pX TraceMap(const zz_pX& a, long d, const zz_pXModulus& F,$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2E TraceMod(const GF2EX& a, const GF2EX& f)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2E TraceMod(const GF2EX& a, const GF2EXModulus& F)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2 TraceMod(const GF2X& a, const GF2X& f)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2 TraceMod(const GF2X& a, const GF2XModulus& F)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZ TraceMod(const ZZX& a, const ZZX& f)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pE TraceMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pE TraceMod(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_p TraceMod(const ZZ_pX& a, const ZZ_pX& f)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_p TraceMod(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pE TraceMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pE TraceMod(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_p TraceMod(const zz_pX& a, const zz_pX& f)$/;"	f
TraceMod	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_p TraceMod(const zz_pX& a, const zz_pXModulus& F)$/;"	f
TraceVec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline vec_GF2E TraceVec(const GF2EX& f)$/;"	f
TraceVec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline vec_GF2 TraceVec(const GF2X& f)$/;"	f
TraceVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline vec_ZZ TraceVec(const ZZX& f)$/;"	f
TraceVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE TraceVec(const ZZ_pEX& f)$/;"	f
TraceVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p TraceVec(const ZZ_pX& f)$/;"	f
TraceVec	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline vec_zz_pE TraceVec(const zz_pEX& f)$/;"	f
TraceVec	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline vec_zz_p TraceVec(const zz_pX& f)$/;"	f
TrueDouble	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double TrueDouble(double x)$/;"	f
TruncPrec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR TruncPrec(const RR& a, long p)$/;"	f
TruncToZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline ZZ TruncToZZ(const RR& a)$/;"	f
TwoInvPreconTable	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   Vec<mulmod_precon_t> TwoInvPreconTable;$/;"	m	struct:FFTPrimeInfo
TwoInvTable	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   Vec<long> TwoInvTable;$/;"	m	struct:FFTPrimeInfo
Type	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^     typedef out Type;$/;"	t	struct:Relocate_aux_Failable
Unique2DArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   Unique2DArray() : len(0) { }$/;"	f	class:Unique2DArray
Unique2DArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   Unique2DArray(Unique2DArray&& other) noexcept : Unique2DArray() $/;"	f	class:Unique2DArray
Unique2DArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class Unique2DArray {$/;"	c
UniqueArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniqueArray() : dp(0) { }$/;"	f	class:UniqueArray
UniqueArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniqueArray(UniqueArray&& other) noexcept : UniqueArray() $/;"	f	class:UniqueArray
UniqueArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   explicit UniqueArray(T *p) : dp(p) { }$/;"	f	class:UniqueArray
UniqueArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class UniqueArray {$/;"	c
UniquePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniquePtr() : dp(0) { }$/;"	f	class:UniquePtr
UniquePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniquePtr(UniquePtr&& other) noexcept : UniquePtr() $/;"	f	class:UniquePtr
UniquePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   explicit UniquePtr(T *p) : dp(p) { }$/;"	f	class:UniquePtr
UniquePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^class UniquePtr {$/;"	c
UnwrapReference	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^T& UnwrapReference(const ReferenceWrapper<T>& x) { return x; } $/;"	f
UnwrapReference	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^const T& UnwrapReference(const ConstReferenceWrapper<T>& x) { return x; } $/;"	f
UnwrapReference	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^const T& UnwrapReference(const T& x) { return x; } $/;"	f
UpdateMap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline vec_GF2E UpdateMap(const vec_GF2E& a,$/;"	f
UpdateMap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline vec_GF2 UpdateMap(const vec_GF2& a, $/;"	f
UpdateMap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE UpdateMap(const vec_ZZ_pE& a,$/;"	f
UpdateMap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^UpdateMap(const vec_ZZ_p& a, $/;"	f
UpdateMap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline vec_zz_pE UpdateMap(const vec_zz_pE& a,$/;"	f
UpdateMap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^UpdateMap(const vec_zz_p& a,$/;"	f
UpdateMin	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   void UpdateMin(unsigned long val) $/;"	f	class:AtomicLowWaterMark
UseFFT	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long UseFFT;$/;"	m	class:ZZ_pXMultiplier
UseFFT	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long UseFFT;\/\/ flag indicating whether FFT should be used.$/;"	m	class:ZZ_pXModulus
UseFFT	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long UseFFT;$/;"	m	class:zz_pXMultiplier
UseFFT	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long UseFFT;\/\/ flag indicating whether FFT should be used.$/;"	m	class:zz_pXModulus
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   Vec() : _len(0), _maxlen(0) {}$/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   Vec(INIT_SIZE_TYPE, long n) : _len(0), _maxlen(0) { SetLength(n); }$/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   Vec(Vec<GF2>& x, INIT_TRANS_TYPE) : $/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   Vec(const Vec<GF2>& a) : _len(0), _maxlen(0) { *this = a; }$/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^Vec(Vec&& a) NTL_FAKE_NOEXCEPT : Vec()$/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^class Vec<GF2> {$/;"	c
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   Vec() { }  $/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   Vec(INIT_SIZE_TYPE, long n) { SetLength(n); }  $/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   Vec(INIT_SIZE_TYPE, long n, const T& a) { SetLength(n, a); }  $/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   Vec(Vec& x, INIT_TRANS_TYPE) $/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   Vec(const Vec& a)  $/;"	f	class:Vec
Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^class Vec {  $/;"	c
VecStrategy	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^template<> struct VecStrategy<false> {$/;"	s
VecStrategy	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^template<> struct VecStrategy<true> {$/;"	s
VectorBaseType	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^typedef vec_GF2 VectorBaseType;$/;"	t	class:GF2X
VectorBaseType	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef vec_ZZ_p VectorBaseType; $/;"	t	class:ZZ_pX
VectorBaseType	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^typedef vec_zz_p VectorBaseType;$/;"	t	class:zz_pX
VectorConv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void VectorConv(long k, zz_p *x, const ZZ *a)$/;"	f
VectorConv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void VectorConv(long k, zz_p *x, const long *a)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline vec_GF2E VectorCopy(const GF2EX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void VectorCopy(vec_GF2E& x, const GF2EX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline vec_GF2 VectorCopy(const GF2X& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline vec_ZZ VectorCopy(const ZZX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void VectorCopy(vec_ZZ& x, const ZZX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE VectorCopy(const ZZ_pEX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void VectorCopy(vec_ZZ_pE& x, const ZZ_pEX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p VectorCopy(const ZZ_pX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void VectorCopy(vec_ZZ_p& x, const ZZ_pX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline vec_zz_pE VectorCopy(const zz_pEX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void VectorCopy(vec_zz_pE& x, const zz_pEX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline vec_zz_p VectorCopy(const zz_pX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void VectorCopy(vec_zz_p& x, const zz_pX& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 VectorCopy(const vec_GF2& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E VectorCopy(const vec_GF2E& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR VectorCopy(const vec_RR& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ VectorCopy(const vec_ZZ& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p VectorCopy(const vec_ZZ_p& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE VectorCopy(const vec_ZZ_pE& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p VectorCopy(const vec_zz_p& a, long n)$/;"	f
VectorCopy	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE VectorCopy(const vec_zz_pE& a, long n)$/;"	f
VectorMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^void VectorMulMod(long k, long *x, const long *a, long b, long n)$/;"	f
VectorMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^void VectorMulMod(long k, long *x, const long *a, long b, long n, $/;"	f
VectorMulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^void VectorMulModPrecon(long k, long *x, const long *a, long b, long n, $/;"	f
VectorRandom	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void VectorRandom(long k, zz_p* x)$/;"	f
VectorRandomBnd	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void VectorRandomBnd(long k, long* x, long n)$/;"	f
Watcher	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^      Watcher(Vec& _watched) : watched(_watched) {}$/;"	f	class:Vec::Watcher
Watcher	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   class Watcher {$/;"	c	class:Vec
WideSinglePrecision	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long WideSinglePrecision() const$/;"	f	class:ZZ
WordLength	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static long WordLength() { return GF2EInfo->p.WordLength(); }$/;"	f	class:GF2E
WordLength	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long WordLength() const { return size; }$/;"	f	class:GF2XModulus
WordVector	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   WordVector() : rep(0) { }  $/;"	f	class:WordVector
WordVector	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   WordVector(INIT_SIZE_TYPE, long n) : rep(0) { DoSetLength(n); }  $/;"	f	class:WordVector
WordVector	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   WordVector(WordVector& x, INIT_TRANS_TYPE) { rep = x.rep; x.rep = 0; }$/;"	f	class:WordVector
WordVector	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   WordVector(const WordVector& a) : rep(0) { *this = a; }     $/;"	f	class:WordVector
WordVector	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^class WordVector {  $/;"	c
WordVectorWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   WordVectorWatcher(WordVector& _watched) : watched(_watched) {}$/;"	f	class:WordVectorWatcher
WordVectorWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^class WordVectorWatcher {$/;"	c
WrappedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   WrappedPtr() : rep(0) { }$/;"	f	class:WrappedPtr
WrappedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class WrappedPtr {$/;"	c
XGCD	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void XGCD(ZZ& d, ZZ& s, ZZ& t, const ZZ& a, const ZZ& b)$/;"	f
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ() { }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ(INIT_SIZE_TYPE, long k) $/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, int a)  { _ntl_gintoz(a, &rep); }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, long a)  { _ntl_gintoz(a, &rep); }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, unsigned int a)  { _ntl_guintoz((unsigned long) a, &rep); }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, unsigned long a)  { _ntl_guintoz(a, &rep); }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ(ZZ& x, INIT_TRANS_TYPE) { rep.swap(x.rep); }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ(const ZZ& a) $/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class ZZ {$/;"	c
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^explicit ZZ(long a) { *this = a; }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ::ZZ(INIT_VAL_TYPE, const char *s)  { conv(*this, s); }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ::ZZ(INIT_VAL_TYPE, double a)  { conv(*this, a); }$/;"	f	class:ZZ
ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ::ZZ(INIT_VAL_TYPE, float a)  { conv(*this, a); }$/;"	f	class:ZZ
ZZFromBytes	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ ZZFromBytes(const unsigned char *p, long n)$/;"	f
ZZFromBytes	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void ZZFromBytes(ZZ& x, const unsigned char *p, long n)$/;"	f
ZZVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   ZZVec() : v(0), len(0), bsize(0) { }$/;"	f	class:ZZVec
ZZVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   ZZVec(ZZVec&& other) noexcept : ZZVec() $/;"	f	class:ZZVec
ZZVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   ZZVec(long n, long d) : v(0), len(0), bsize(0)  { SetSize(n, d); }$/;"	f	class:ZZVec
ZZVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^class ZZVec {$/;"	c
ZZWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   ZZWatcher(ZZ& _watched) : watched(_watched) {}$/;"	f	class:ZZWatcher
ZZWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class ZZWatcher {$/;"	c
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^ZZX() { }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^ZZX(INIT_SIZE_TYPE, long n) $/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^ZZX(ZZX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^class ZZX {$/;"	c
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^explicit ZZX(const ZZ& a) { *this = a; }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^explicit ZZX(long a) { *this = a; }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX::ZZX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX::ZZX(INIT_MONO_TYPE, long i, const ZZ& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX::ZZX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX::ZZX(long i, const ZZ& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX::ZZX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZ_BlockConstructAlloc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long ZZ_BlockConstructAlloc(ZZ& x, long d, long n)$/;"	f
ZZ_BlockConstructSet	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void ZZ_BlockConstructSet(ZZ& x, ZZ& y, long i)$/;"	f
ZZ_BlockDestroy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long ZZ_BlockDestroy(ZZ& x)$/;"	f
ZZ_CRTStructAdapter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class ZZ_CRTStructAdapter {$/;"	c
ZZ_ReduceStructAdapter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class ZZ_ReduceStructAdapter {$/;"	c
ZZ_RemStructAdapter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class ZZ_RemStructAdapter {$/;"	c
ZZ_RoundCorrection	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long ZZ_RoundCorrection(const ZZ& a, long k, long residual)$/;"	f
ZZ_TmpVecAdapter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class ZZ_TmpVecAdapter {$/;"	c
ZZ_limb_t	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	/^typedef _ntl_limb_t ZZ_limb_t;$/;"	t
ZZ_limbs_get	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	/^const ZZ_limb_t * ZZ_limbs_get(const ZZ& a)$/;"	f
ZZ_limbs_set	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	/^void ZZ_limbs_set(ZZ& x, const ZZ_limb_t *p, long n)$/;"	f
ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_p() { } \/\/ NO_ALLOC$/;"	f	class:ZZ_p
ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_p(INIT_ALLOC_TYPE) { _ZZ_p__rep.SetSize(ZZ_pInfo->size); }  \/\/ allocates space$/;"	f	class:ZZ_p
ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_p(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:ZZ_p
ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_p(ZZ_p& x, INIT_TRANS_TYPE) : _ZZ_p__rep(x._ZZ_p__rep, INIT_TRANS) { }$/;"	f	class:ZZ_p
ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_p {$/;"	c
ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^explicit ZZ_p(long a) { *this = a; }$/;"	f	class:ZZ_p
ZZ_pBak	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_pBak() : MustRestore(false) { }$/;"	f	class:ZZ_pBak
ZZ_pBak	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_pBak {$/;"	c
ZZ_pContext	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_pContext() { }$/;"	f	class:ZZ_pContext
ZZ_pContext	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_pContext {$/;"	c
ZZ_pContext	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^explicit ZZ_pContext(const ZZ& p) : ptr(MakeSmart<ZZ_pInfoT>(p)) { }$/;"	f	class:ZZ_pContext
ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pE() {  } \/\/ NO_ALLOC$/;"	f	class:ZZ_pE
ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pE(INIT_ALLOC_TYPE) {_ZZ_pE__rep.rep.SetMaxLength(ZZ_pE::degree());  }  \/\/ allocates space$/;"	f	class:ZZ_pE
ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pE(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:ZZ_pE
ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pE(ZZ_pE& x, INIT_TRANS_TYPE) : _ZZ_pE__rep(x._ZZ_pE__rep, INIT_TRANS) { }$/;"	f	class:ZZ_pE
ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^class ZZ_pE {$/;"	c
ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^explicit ZZ_pE(const ZZ_p& a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:ZZ_pE
ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^explicit ZZ_pE(long a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:ZZ_pE
ZZ_pEBak	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pEBak() : MustRestore(false) {  }$/;"	f	class:ZZ_pEBak
ZZ_pEBak	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^class ZZ_pEBak {$/;"	c
ZZ_pEContext	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pEContext() { }$/;"	f	class:ZZ_pEContext
ZZ_pEContext	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^class ZZ_pEContext {$/;"	c
ZZ_pEContext	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^explicit ZZ_pEContext(const ZZ_pX& p) : ptr(MakeSmart<ZZ_pEInfoT>(p)) { }$/;"	f	class:ZZ_pEContext
ZZ_pEInfoT	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^class ZZ_pEInfoT {$/;"	c
ZZ_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pEPush() { bak.save(); }$/;"	f	class:ZZ_pEPush
ZZ_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^class ZZ_pEPush {$/;"	c
ZZ_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^explicit ZZ_pEPush(const ZZ_pEContext& context) { bak.save(); context.restore(); }$/;"	f	class:ZZ_pEPush
ZZ_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^explicit ZZ_pEPush(const ZZ_pX& p) { bak.save(); ZZ_pEContext c(p); c.restore(); }$/;"	f	class:ZZ_pEPush
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^ZZ_pEX() { }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^ZZ_pEX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^ZZ_pEX(ZZ_pEX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^class ZZ_pEX {$/;"	c
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^explicit ZZ_pEX(const ZZ_p& a) { *this = a; }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^explicit ZZ_pEX(const ZZ_pE& a) { *this = a; }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^explicit ZZ_pEX(long a) { *this = a; }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i, const ZZ_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i, const ZZ_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(long i, const ZZ_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(long i, const ZZ_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEXArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^struct ZZ_pEXArgument {$/;"	s
ZZ_pEXModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^class ZZ_pEXModulus {$/;"	c
ZZ_pEXTransMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^struct ZZ_pEXTransMultiplier {$/;"	s
ZZ_pFFTInfoT	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ_pFFTInfoT() { }$/;"	f	class:ZZ_pFFTInfoT
ZZ_pFFTInfoT	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_pFFTInfoT {$/;"	c
ZZ_pInfoT	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_pInfoT {$/;"	c
ZZ_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_pPush() { bak.save(); }$/;"	f	class:ZZ_pPush
ZZ_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_pPush {$/;"	c
ZZ_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^explicit ZZ_pPush(const ZZ& p) { bak.save(); ZZ_pContext c(p); c.restore(); }$/;"	f	class:ZZ_pPush
ZZ_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^explicit ZZ_pPush(const ZZ_pContext& context) { bak.save(); context.restore(); }$/;"	f	class:ZZ_pPush
ZZ_pTmpSpaceT	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_pTmpSpaceT {$/;"	c
ZZ_pWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ_pWatcher(ZZ_p& _watched) : watched(_watched) { }$/;"	f	class:ZZ_pWatcher
ZZ_pWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^class ZZ_pWatcher {$/;"	c
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^ZZ_pX() { }$/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^ZZ_pX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^ZZ_pX(ZZ_pX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^class ZZ_pX {$/;"	c
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^explicit ZZ_pX(const ZZ_p& a) { *this = a; }$/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^explicit ZZ_pX(long a) { *this = a; }$/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); } $/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(INIT_MONO_TYPE, long i, const ZZ_p& a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(long i, const ZZ_p& a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(long i, long a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pXArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^struct ZZ_pXArgument {$/;"	s
ZZ_pXMatrix	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pXMatrix() { }$/;"	f	class:ZZ_pXMatrix
ZZ_pXMatrix	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^class ZZ_pXMatrix {$/;"	c
ZZ_pXModRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pXModRep() : n(0), MaxN(0), NumPrimes(0) {  }$/;"	f	class:ZZ_pXModRep
ZZ_pXModRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pXModRep(INIT_SIZE_TYPE, long NewN) : n(0), MaxN(0), NumPrimes(0)$/;"	f	class:ZZ_pXModRep
ZZ_pXModRep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^class ZZ_pXModRep {$/;"	c
ZZ_pXModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pXModulus() : UseFFT(0), n(-1)  { }$/;"	f	class:ZZ_pXModulus
ZZ_pXModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^class ZZ_pXModulus {$/;"	c
ZZ_pXMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pXMultiplier() : UseFFT(0)  { }$/;"	f	class:ZZ_pXMultiplier
ZZ_pXMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^class ZZ_pXMultiplier {$/;"	c
ZZ_pXNewArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^struct ZZ_pXNewArgument {$/;"	s
ZZ_pXNewArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef ZZ_pXArgument ZZ_pXNewArgument;$/;"	t
ZZ_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   Vec<const sp_ZZ_reduce_struct*> ZZ_red_struct;$/;"	m	struct:MatPrime_crt_helper
ZZ_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   Vec<sp_ZZ_reduce_struct> ZZ_red_struct;$/;"	m	struct:MatPrime_crt_helper
ZZ_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   sp_ZZ_reduce_struct ZZ_red_struct;$/;"	m	class:zz_pInfoT
ZZ_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^const sp_ZZ_reduce_struct& ZZ_red_struct() const { return ptr->ZZ_red_struct; } $/;"	f	class:zz_pContext
ZZ_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static const sp_ZZ_reduce_struct& ZZ_red_struct() { return zz_pInfo->ZZ_red_struct; }$/;"	f	class:zz_p
ZZ_storage	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long ZZ_storage(long d)$/;"	f
ZeroLength	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   void ZeroLength() { if (rep) rep[-1] = 0; }$/;"	f	class:WordVector
_GF2E__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2X _GF2E__rep;$/;"	m	class:GF2E
_GF2__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^unsigned long _GF2__rep;$/;"	m	class:GF2
_ZZ_pE__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pX _ZZ_pE__rep;$/;"	m	class:ZZ_pE
_ZZ_p__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ _ZZ_p__rep;$/;"	m	class:ZZ_p
_card	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^   Lazy<ZZ> _card;$/;"	m	class:GF2EInfoT
_card	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^   Lazy<ZZ>  _card;$/;"	m	class:ZZ_pEInfoT
_card	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^   Lazy<ZZ>  _card;$/;"	m	class:zz_pEInfoT
_card_base	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^   ZZ   _card_base;$/;"	m	class:ZZ_pEInfoT
_card_base	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^   long _card_base;$/;"	m	class:zz_pEInfoT
_card_exp	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^   long _card_exp;$/;"	m	class:GF2EInfoT
_card_exp	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^   long _card_exp;$/;"	m	class:ZZ_pEInfoT
_card_exp	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^   long _card_exp;$/;"	m	class:zz_pEInfoT
_len	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   long _len;  \/\/ length (in bits)$/;"	m	class:Vec
_mat__numcols	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   long _mat__numcols;  $/;"	m	class:Mat
_mat__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   Vec< Vec<T> > _mat__rep;  $/;"	m	class:Mat
_maxlen	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   long _maxlen;  \/\/ (MaxLength << 1) | (fixed)$/;"	m	class:Vec
_ntl_ALLOC	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^inline long& _ntl_ALLOC(_ntl_gbigint p)$/;"	f
_ntl_AlignedVectorHeader	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^union _ntl_AlignedVectorHeader {$/;"	u
_ntl_PINNED	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^inline long _ntl_PINNED(_ntl_gbigint p)$/;"	f
_ntl_SIZE	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^inline long& _ntl_SIZE(_ntl_gbigint p)$/;"	f
_ntl_VectorHeader	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^struct _ntl_VectorHeader {$/;"	s
_ntl_ZEROP	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^inline long _ntl_ZEROP(_ntl_gbigint p)$/;"	f
_ntl_bpl_divrem	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^_ntl_bpl_divrem(long a, long& q, long& r)$/;"	f
_ntl_bpl_divrem	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^_ntl_bpl_divrem(unsigned long a, long& q, long& r)$/;"	f
_ntl_count_bits	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^_ntl_count_bits(unsigned long x)$/;"	f
_ntl_crt_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^class _ntl_crt_struct {$/;"	c
_ntl_enable_if	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^struct _ntl_enable_if$/;"	s
_ntl_enable_if	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^struct _ntl_enable_if<true, T> {$/;"	s
_ntl_g2logs	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^    long _ntl_g2logs(long a)$/;"	f
_ntl_gbigint	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^typedef _ntl_gbigint_body *_ntl_gbigint;$/;"	t
_ntl_gbigint_body	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^struct _ntl_gbigint_body {$/;"	s
_ntl_giszero	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^    long _ntl_giszero (_ntl_gbigint a)$/;"	f
_ntl_glimbs_get	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	/^const _ntl_limb_t * _ntl_glimbs_get(_ntl_gbigint p)$/;"	f
_ntl_gmaxalloc	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^    long _ntl_gmaxalloc(_ntl_gbigint x)$/;"	f
_ntl_gsign	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^    long _ntl_gsign(_ntl_gbigint a)$/;"	f
_ntl_gsize	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^long _ntl_gsize(_ntl_gbigint rep)$/;"	f
_ntl_is_char_pointer	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^struct _ntl_is_char_pointer$/;"	s
_ntl_is_char_pointer	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^struct _ntl_is_char_pointer<char*>$/;"	s
_ntl_is_char_pointer	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^struct _ntl_is_char_pointer<const char*>$/;"	s
_ntl_limb_t	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	/^typedef mp_limb_t _ntl_limb_t;$/;"	t
_ntl_limb_t	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_limbs.h	/^typedef unsigned long _ntl_limb_t;$/;"	t
_ntl_make_aligned	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^char *_ntl_make_aligned(char *p, long align)$/;"	f
_ntl_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^class _ntl_reduce_struct {$/;"	c
_ntl_rem_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^class _ntl_rem_struct {$/;"	c
_ntl_scalar_move	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^T* _ntl_scalar_move(T*& a)$/;"	f
_ntl_swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^void _ntl_swap(T*& a, T*& b)$/;"	f
_ntl_tmp_vec	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^class _ntl_tmp_vec {$/;"	c
_ntl_uint32	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^typedef unsigned int _ntl_uint32; \/\/ 32-bit word$/;"	t
_ntl_uint32	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^typedef unsigned long _ntl_uint32; \/\/ 32-bit word$/;"	t
_ntl_ulong	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef unsigned long _ntl_ulong;$/;"	t
_ntl_ulong_ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^typedef _ntl_ulong *_ntl_ulong_ptr;$/;"	t
_ntl_ulonglong	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^class _ntl_ulonglong { private: _ntl_ulonglong() { } };$/;"	c
_ntl_ulonglong	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^class _ntl_ulonglong { private: _ntl_ulonglong() { } };$/;"	f	class:_ntl_ulonglong
_ntl_ulonglong	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^typedef NTL_ULL_TYPE _ntl_ulonglong;$/;"	t
_ntl_vec_grow	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^inline long _ntl_vec_grow(long n)$/;"	f
_ref_GF2__pos	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^long _ref_GF2__pos;$/;"	m	class:ref_GF2
_ref_GF2__ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^unsigned long *_ref_GF2__ptr;$/;"	m	class:ref_GF2
_vec__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   WrappedPtr<T, _vec_deleter> _vec__rep;  $/;"	m	class:Vec
_vec_deleter	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   class _vec_deleter {$/;"	c	class:Vec
_zz_pE__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline const zz_pX& _zz_pE__rep(const zz_pE& a) { return a._zz_pE__rep; }$/;"	f
_zz_pE__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pX _zz_pE__rep;$/;"	m	class:zz_pE
_zz_p__rep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^long _zz_p__rep;$/;"	m	class:zz_p
a	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	/^   long a;$/;"	m	struct:IntFactor
a	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^   S a;  $/;"	m	class:Pair
a_ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   SmartPtr<ZZ> a_ptr;$/;"	m	class:InvModErrorObject
abs	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR abs(const RR& a)$/;"	f
abs	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ abs(const ZZ& a)$/;"	f
abs	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void abs(ZZ& x, const ZZ& a)$/;"	f
active	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  bool active() const { return active_flag; }$/;"	f	class:BasicThreadPool
active	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^    bool active;$/;"	m	class:scope_guard
active	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^  bool active;$/;"	m	class:DummyScopeGuard
active_flag	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  bool active_flag;$/;"	m	class:BasicThreadPool
add	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void add(long n = 1)$/;"	f	class:BasicThreadPool
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void add(GF2& x, GF2 a, GF2 b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void add(GF2& x, GF2 a, long b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void add(GF2& x, long a, GF2 b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void add(ref_GF2 x, GF2 a, GF2 b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void add(ref_GF2 x, GF2 a, long b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void add(ref_GF2 x, long a, GF2 b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void add(GF2E& x, GF2 a, const GF2E& b)  { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void add(GF2E& x, const GF2E& a, GF2 b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void add(GF2E& x, const GF2E& a, const GF2E& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void add(GF2E& x, const GF2E& a, long b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void add(GF2E& x, long a, const GF2E& b)  { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void add(GF2EX& x, GF2 a, const GF2EX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void add(GF2EX& x, const GF2E& a, const GF2EX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void add(GF2EX& x, long a, const GF2EX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void add(GF2X& x, GF2 a, const GF2X& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void add(GF2X& x, long a, const GF2X& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void add(RR& z, double a, const RR& b) { add(z, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void add(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void add(ZZ& x, const ZZ& a, long b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void add(ZZ& x, long a, const ZZ& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void add(ZZX& x, const ZZ& a, const ZZX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void add(ZZX& x, long a, const ZZX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void add(ZZ_p& x, const ZZ_p& a, const ZZ_p& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void add(ZZ_p& x, long a, const ZZ_p& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_p& a, const ZZ_pE& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_pE& a, const ZZ_p& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_pE& a, const ZZ_pE& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_pE& a, long b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, long a, const ZZ_pE& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void add(ZZ_pEX& x, const ZZ_p& a, const ZZ_pEX& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void add(ZZ_pEX& x, const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void add(ZZ_pEX& x, long a, const ZZ_pEX& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void add(ZZ_pX& x, const ZZ_p& a, const ZZ_pX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void add(ZZ_pX& x, long a, const ZZ_pX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void add(zz_p& x, long a, zz_p b) { add(x, to_zz_p(a), b); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void add(zz_p& x, zz_p a, long b) { add(x, a, to_zz_p(b)); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void add(zz_p& x, zz_p a, zz_p b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_p& a, const zz_pE& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_pE& a, const zz_p& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_pE& a, const zz_pE& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_pE& a, long b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, long a, const zz_pE& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void add(zz_pEX& x, const zz_p& a, const zz_pEX& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void add(zz_pEX& x, const zz_pE& a, const zz_pEX& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void add(zz_pEX& x, long a, const zz_pEX& b)$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void add(zz_pX& x, const zz_pX& a, long b) { add(x, a, to_zz_p(b)); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void add(zz_pX& x, long a, const zz_pX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void add(zz_pX& x, zz_p a, const zz_pX& b) { add(x, b, a); }$/;"	f
add	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      void add(long x)$/;"	f	struct:Vec::proxy_iterator_impl
adjust	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void adjust(ZZ& x) const$/;"	f	class:ZZ_ReduceStructAdapter
alias	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   long alias(const Vec<T>& a) const $/;"	f	class:Mat
alloc	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long alloc;$/;"	m	struct:_ntl_VectorHeader
alloc_	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^   long alloc_;$/;"	m	struct:_ntl_gbigint_body
allocate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^void allocate() { }$/;"	f	class:GF2
allocate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^void allocate() { _GF2E__rep.xrep.SetMaxLength(GF2E::WordLength()); }$/;"	f	class:GF2E
allocate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^void allocate() $/;"	f	class:ZZ_p
allocate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^void allocate() { _ZZ_pE__rep.rep.SetMaxLength(ZZ_pE::degree()); }$/;"	f	class:ZZ_pE
allocate	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^void allocate() { }$/;"	f	class:zz_p
allocate	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^void allocate() {  _zz_pE__rep.rep.SetMaxLength(zz_pE::degree()); }$/;"	f	class:zz_pE
allocated	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   long allocated() const { return rep.MaxLength() * NTL_BITS_PER_LONG; }$/;"	f	class:Vec
allocated	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long allocated() const $/;"	f	class:Vec
amount	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      long amount;$/;"	m	class:LazyTable::Builder
amt	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      long amt() const { return amount; }$/;"	f	class:LazyTable::Builder
append	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^inline void append(WordVector& v, _ntl_ulong a)$/;"	f
append	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^inline void append(WordVector& v, const WordVector& w)$/;"	f
append	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void append(vec_GF2& v, const GF2 a) { v.append(a); }$/;"	f
append	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void append(vec_GF2& v, const vec_GF2& a) { v.append(a); }$/;"	f
append	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::append(const T& a)  $/;"	f	class:Vec
append	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::append(const Vec& w)  $/;"	f	class:Vec
append	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void append(Vec<T>& v, const T& a)  $/;"	f
append	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void append(Vec<T>& v, const Vec<T>& w)  $/;"	f
apply	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   static void apply(_ntl_gbigint p) { _ntl_gfree(p); }$/;"	f	class:ZZ::Deleter
apply	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^      static void apply(T* p) { $/;"	f	class:Vec::_vec_deleter
at	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   const GF2 at(long i) const$/;"	f	class:Vec
at	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   ref_GF2 at(long i) $/;"	f	class:Vec
at	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T& at(long i) {$/;"	f	class:Vec
at	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T& at(long i) const {$/;"	f	class:Vec
b	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   GF2EX f0, fbi, b;$/;"	m	struct:GF2EXTransMultiplier
b	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2X f0, fbi, b;$/;"	m	struct:GF2XTransMultiplier
b	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0, fbi, b;$/;"	m	struct:ZZ_pEXTransMultiplier
b	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pX b;   $/;"	m	class:ZZ_pXMultiplier
b	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   zz_pEX f0, fbi, b;$/;"	m	struct:zz_pEXTransMultiplier
b	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pX b;   $/;"	m	class:zz_pXMultiplier
b	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^   T b;  $/;"	m	class:Pair
bak	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2EBak bak;$/;"	m	class:GF2EPush
bak	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_pBak bak;$/;"	m	class:ZZ_pPush
bak	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pEBak bak;$/;"	m	class:ZZ_pEPush
bak	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_pBak bak;$/;"	m	class:zz_pPush
bak	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pEBak bak;$/;"	m	class:zz_pEPush
bak_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^typedef GF2Bak bak_type;$/;"	t	class:GF2
bak_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^typedef GF2EBak bak_type;$/;"	t	class:GF2E
bak_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^typedef ZZ_pBak bak_type;$/;"	t	class:ZZ_p
bak_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^typedef ZZ_pEBak bak_type;$/;"	t	class:ZZ_pE
bak_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^typedef zz_pBak bak_type;$/;"	t	class:zz_p
bak_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^typedef zz_pEBak bak_type;$/;"	t	class:zz_pE
begin	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void begin(long cnt)$/;"	f	class:BasicThreadPool
begin	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   const_iterator begin() const { return const_iterator(INIT_LOOP_HOLE, rep.elts(), 0); }$/;"	f	class:Vec
begin	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   iterator begin() { return iterator(INIT_LOOP_HOLE, rep.elts(), 0); }$/;"	f	class:Vec
begin	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T* begin() { return elts(); }$/;"	f	class:Vec
begin	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T* begin() const { return elts(); }$/;"	f	class:Vec
berlekamp	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^berlekamp(const GF2EX& f, long verbose=0)$/;"	f
berlekamp	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^berlekamp(const ZZ_pX& f, long verbose=0)$/;"	f
berlekamp	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long berlekamp(const zz_pX& f, long verbose=0)$/;"	f
bigtab	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   UniquePtr< FFTMulTabs, FFTMulTabsDeleterPolicy > bigtab;$/;"	m	struct:FFTPrimeInfo
bit	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long bit(const ZZ& a, long k)$/;"	f
bit_and	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void bit_and(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
bit_and	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void bit_and(ZZ& x, long a, const ZZ& b)$/;"	f
bit_or	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void bit_or(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
bit_or	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void bit_or(ZZ& x, long a, const ZZ& b)$/;"	f
bit_xor	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void bit_xor(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
bit_xor	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void bit_xor(ZZ& x, long a, const ZZ& b)$/;"	f
blend2	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^blend2(PD<4> a, PD<4> b)$/;"	f
blend2	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^blend2(PD<8> a, PD<8> b)$/;"	f
blend4	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^blend4(PD<8> a, PD<8> b)$/;"	f
bninv	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   unsigned long bninv;$/;"	m	struct:sp_muldivrem_struct
bsize	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   long bsize;$/;"	m	class:GF2XVec
bsize	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   long bsize;$/;"	m	class:ZZVec
buf	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   const unsigned char *buf;$/;"	m	class:RandomStream
buf	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   unsigned char buf[64];$/;"	m	class:old_RandomStream
buf_len	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long buf_len;$/;"	m	class:RandomStream
build	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void build(long _p)$/;"	f	struct:RandomBndGenerator
build	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void build(long _p)$/;"	f	struct:sp_ZZ_reduce_struct
building	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      bool building;$/;"	m	class:Lazy::Builder
built	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   bool built()  const { return initialized; }$/;"	f	class:Lazy
c	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^GF2EContext c;$/;"	m	class:GF2EBak
c	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^ZZ_pContext c;$/;"	m	class:ZZ_pBak
c	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^ZZ_pEContext c;$/;"	m	class:ZZ_pEBak
c	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_pContext c;$/;"	m	class:zz_pBak
c	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pEContext c;$/;"	m	class:zz_pEBak
cannot_compare_these_types	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:AlignedArray
cannot_compare_these_types	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:CopiedPtr
cannot_compare_these_types	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:Unique2DArray
cannot_compare_these_types	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:UniqueArray
cannot_compare_these_types	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:UniquePtr
cast_signed	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int cast_signed(unsigned int a) $/;"	f
cast_signed	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int cast_signed(unsigned int a) { return int(a); }$/;"	f
cast_signed	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long cast_signed(unsigned long a) $/;"	f
cast_signed	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long cast_signed(unsigned long a) { return long(a); }$/;"	f
cast_unsigned	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned int cast_unsigned(int a) { return (unsigned int) a; }$/;"	f
cast_unsigned	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long cast_unsigned(long a) { return (unsigned long) a; }$/;"	f
ceil	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR ceil(const RR& a)$/;"	f
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_ALIGNED_ARRAY\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_AVX2\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_AVX512F\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_AVX\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_BUILTIN_CLZL\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_CHRONO_TIME\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_COPY_TRAITS1\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_COPY_TRAITS2\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_FMA\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_LL_TYPE\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_MACOS_TIME\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_PCLMUL\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_POSIX_TIME\\n";$/;"	m	class:std
cerr	/home/penguin/projects/ntl-11.3.2/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_SSSE3\\n";$/;"	m	class:std
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void clear(GF2& x) { x = 0; }$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void clear(ref_GF2 x) { x = 0; }$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void clear(GF2E& x)$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void clear(GF2EX& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void clear(GF2X& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^clear(PD<2>& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^clear(PD<4>& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^clear(PD<8>& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void clear(ZZ& x)$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void clear(ZZX& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void clear(ZZ_p& x)$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void clear(ZZ_pE& x)$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void clear(ZZ_pEX& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void clear(ZZ_pX& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void clear(zz_p& x)$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void clear(zz_pE& x)$/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void clear(zz_pEX& x) $/;"	f
clear	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void clear(zz_pX& x) $/;"	f
clone	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr clone() const $/;"	f	class:CloneablePtr
clone	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtrControl *clone() const $/;"	f	class:CloneablePtrControlDerived
clone	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtrControl *clone() const \\$/;"	f	class:MakeCloneableAux
cnt	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   AtomicRefCount cnt;$/;"	m	class:SmartPtrControl
cnt	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   NTL_SNS atomic_long cnt;$/;"	m	class:AtomicRefCount
cnt	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   NTL_SNS atomic_ulong cnt;$/;"	m	class:AtomicCounter
coeff	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   ZZVec coeff;$/;"	m	struct:MatPrime_crt_helper
coeff_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^typedef GF2E coeff_type;$/;"	t	class:GF2EX
coeff_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^typedef GF2 coeff_type;$/;"	t	class:GF2X
coeff_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^typedef ZZ coeff_type;$/;"	t	class:ZZX
coeff_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^typedef ZZ_pE coeff_type;$/;"	t	class:ZZ_pEX
coeff_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef ZZ_p coeff_type;$/;"	t	class:ZZ_pX
coeff_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^typedef zz_pE coeff_type;$/;"	t	class:zz_pEX
coeff_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^typedef zz_p coeff_type;$/;"	t	class:zz_pX
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long compare(double a, const RR& b) { return -compare(b, a); }$/;"	f
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long compare(const ZZ& a, const ZZ& b)$/;"	f
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long compare(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b); }$/;"	f
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long compare(long a, const ZZ& b) { return -_ntl_gscompare(b.rep, a); }$/;"	f
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long compare(const quad_float& x, double y)$/;"	f
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long compare(double x, const quad_float& y)$/;"	f
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long compare(const xdouble& a, double b)$/;"	f
compare	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long compare(double a, const xdouble& b)$/;"	f
cons	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^inline Pair<S,T> cons(const S& x, const T& y) { return Pair<S,T>(x, y); } $/;"	f
const_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   typedef const_proxy_iterator const_iterator;$/;"	t	class:Vec
const_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   typedef const value_type *const_iterator; $/;"	t	class:Vec
const_proxy_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator() { }$/;"	f	struct:Vec::const_proxy_iterator
const_proxy_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator(INIT_LOOP_HOLE_TYPE, const unsigned long *ptr, long idx)$/;"	f	struct:Vec::const_proxy_iterator
const_proxy_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   struct const_proxy_iterator {$/;"	s	class:Vec
const_reference	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   typedef typename Vec<T>::const_reference const_reference;$/;"	t	class:Mat
const_reference	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   typedef const GF2 const_reference;$/;"	t	class:Vec
const_reference	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   typedef const value_type& const_reference;$/;"	t	class:Vec
content	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZ content(const ZZX& f)$/;"	f
context	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   zz_pContext context; $/;"	m	struct:MatPrimeInfo
context_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^typedef GF2Context context_type;$/;"	t	class:GF2
context_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^typedef GF2EContext context_type;$/;"	t	class:GF2E
context_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^typedef ZZ_pContext context_type;$/;"	t	class:ZZ_p
context_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^typedef ZZ_pEContext context_type;$/;"	t	class:ZZ_pE
context_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^typedef zz_pContext context_type;$/;"	t	class:zz_p
context_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^typedef zz_pEContext context_type;$/;"	t	class:zz_pE
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(GF2& x, GF2 a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(GF2& x, const ZZ& a) { x = to_GF2(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(GF2& x, long a) { x = to_GF2(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(ZZ& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(int& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(long& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(ref_GF2 x, GF2 a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(ref_GF2 x, const ZZ& a) { x = to_GF2(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(ref_GF2 x, long a) { x = to_GF2(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(unsigned int& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void conv(unsigned long& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void conv(GF2E& x, GF2 a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void conv(GF2E& x, const GF2E& a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void conv(GF2E& x, const GF2X& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void conv(GF2E& x, const ZZ& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void conv(GF2E& x, long a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void conv(GF2X& x, const GF2E& a) { x = rep(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void conv(GF2EX& x, const GF2EX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void conv(vec_GF2E& x, const GF2EX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void conv(GF2X& x, const GF2X& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void conv(GF2X& x, const ZZ& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void conv(RR& z, float a) { conv(z, double(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void conv(RR& z, int a) { conv(z, long(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void conv(RR& z, unsigned int a) { conv(z, (unsigned long)(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void conv(float& z, const RR& a) $/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void conv(int& z, const RR& a) $/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void conv(unsigned int& x, const RR& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void conv(unsigned long& x, const RR& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(ZZ& x, const ZZ& a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(ZZ& x, double a) { _ntl_gdoubtoz(a, &x.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(ZZ& x, float a) { _ntl_gdoubtoz(double(a), &x.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(ZZ& x, int a) { _ntl_gintoz(long(a), &x.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(ZZ& x, long a) { _ntl_gintoz(a, &x.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(ZZ& x, unsigned int a) { _ntl_guintoz((unsigned long)(a), &x.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(ZZ& x, unsigned long a) { _ntl_guintoz(a, &x.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(double& x, const ZZ& a) { x = _ntl_gdoub(a.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(float& x, const ZZ& a) { x = float(_ntl_gdoub(a.rep)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(int& x, const ZZ& a) $/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(long& x, const ZZ& a) { x = _ntl_gtoint(a.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(unsigned int& x, const ZZ& a) $/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void conv(unsigned long& x, const ZZ& a) { x = _ntl_gtouint(a.rep); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void conv(ZZX& x, const ZZX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void conv(vec_ZZ& x, const ZZX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void conv(ZZ& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void conv(ZZ_p& x, const ZZ& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void conv(ZZ_p& x, const ZZ_p& a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void conv(int& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void conv(long& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void conv(unsigned int& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void conv(unsigned long& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ_p& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ_pE& a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ_pX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, long a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pX& x, const ZZ_pE& a) { x = rep(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void conv(ZZ_pEX& x, const ZZ_pEX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void conv(vec_ZZ_pE& x, const ZZ_pEX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void conv(ZZ_pX& x, const ZZ_pX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void conv(vec_ZZ_p& x, const ZZ_pX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void conv(ZZ& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void conv(int& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void conv(long& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void conv(unsigned int& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void conv(unsigned long& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void conv(zz_p& x, zz_p a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^void conv(zz_p& x, const ZZ& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^void conv(zz_p& x, long a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const ZZ& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const zz_p& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const zz_pE& a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const zz_pX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, long a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void conv(zz_pX& x, const zz_pE& a) { x = rep(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void conv(vec_zz_pE& x, const zz_pEX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void conv(zz_pEX& x, const zz_pEX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void conv(vec_zz_p& x, const zz_pX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void conv(zz_pX& x, const zz_pX& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void conv(mat_GF2& x, const vec_vec_GF2& a) {$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^void conv(Mat<T>& x, const Mat<S>& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(double& x, const quad_float& a) { x = to_double(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(float& x, const quad_float& a) { x = to_float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(int& x, const quad_float& a) { x = to_int(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(long& x, const quad_float& a) { x = to_long(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(quad_float& x, const quad_float& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(quad_float& x, double a) { x = to_quad_float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(quad_float& x, float a) { x = to_quad_float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(quad_float& x, int a) { x = to_quad_float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(quad_float& x, long a) { x = to_quad_float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(quad_float& x, unsigned int a) { x = to_quad_float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(quad_float& x, unsigned long a) { x = to_quad_float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(unsigned int& x, const quad_float& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void conv(unsigned long& x, const quad_float& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^T conv(const S& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^conv(S& x, T y)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(double& x, double a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(double& x, float a) { x = double(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(double& x, int a) { x = double(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(double& x, long a) { x = double(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(double& x, unsigned a) { x = double(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(double& x, unsigned long a) { x = double(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(float& x, double a) { x = float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(float& x, float a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(float& x, int a) { x = float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(float& x, long a) { x = float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(float& x, unsigned a) { x = float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(float& x, unsigned long a) { x = float(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(int& x, double a) { x = int(NTL_SNS floor(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(int& x, float a) { x = int(NTL_SNS floor(double(a))); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(int& x, int a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(int& x, long a) $/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(int& x, unsigned a) $/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(int& x, unsigned long a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(long& x, double a) { x = long(NTL_SNS floor(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(long& x, float a) { x = long(NTL_SNS floor(double(a))); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(long& x, int a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(long& x, long a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(long& x, unsigned a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(long& x, unsigned long a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned int& x, double a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned int& x, float a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned int& x, int a) { x = ((unsigned int)(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned int& x, long a) { x = ((unsigned int)(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned int& x, unsigned a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned int& x, unsigned long a) { x = ((unsigned int)(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned long& x, double a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned long& x, float a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned long& x, int a) { x = ((unsigned long)(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned long& x, long a) { x = ((unsigned long)(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned long& x, unsigned a) { x = ((unsigned long)(a)); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void conv(unsigned long& x, unsigned long a) { x = a; }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void conv(vec_GF2& x, const vec_GF2& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void conv(Vec<T>& x, const Vec<S>& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(float& x, const xdouble& a) $/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(int& x, const xdouble& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(long& x, const xdouble& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(unsigned int& x, const xdouble& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(unsigned long& x, const xdouble& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& x, const xdouble& a)$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& x, double a) { x = to_xdouble(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& x, float a) { x = to_xdouble(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& x, int a) { x = to_xdouble(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& x, long a) { x = to_xdouble(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& x, unsigned int a) { x = to_xdouble(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& x, unsigned long a) { x = to_xdouble(a); }$/;"	f
conv	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void conv(xdouble& z, const ZZ& a)$/;"	f
copier	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   static T* copier(T *p) { return (p ?  MakeRaw<T>(*p) : 0); }$/;"	f	struct:DefaultCopierPolicy
copier	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   static T* copier(T *p) { return (p ?  p->clone() : 0); }$/;"	f	struct:CloningCopier
copyable	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   static constexpr bool copyable = Relocate_aux_has_any_copy((T*)0);$/;"	m	class:Vec
correct_deficit	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^correct_deficit(PD<2> a, PD<2> b)$/;"	f
correct_deficit	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^correct_deficit(PD<4> a, PD<4> b)$/;"	f
correct_deficit	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^correct_deficit(PD<8> a, PD<8> b)$/;"	f
correct_excess	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^correct_excess(PD<2> a, PD<2> b)$/;"	f
correct_excess	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^correct_excess(PD<4> a, PD<4> b)$/;"	f
correct_excess	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^correct_excess(PD<8> a, PD<8> b)$/;"	f
cos	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR cos(const RR& a)$/;"	f
cost	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   double cost;$/;"	m	struct:MatPrime_crt_helper
counter	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  std::atomic<long> counter;$/;"	m	class:BasicThreadPool
cp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr(CloneablePtr&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
cp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr(CloneablePtr<Y>&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
cp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtrControl *cp;$/;"	m	class:CloneablePtr
cp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr(SmartPtr&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
cp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr(SmartPtr<Y>&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
cp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtrControl *cp;$/;"	m	class:SmartPtr
crt_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ_CRTStructAdapter crt_struct;$/;"	m	class:ZZ_pFFTInfoT
crt_tmp_vec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^  ZZ_TmpVecAdapter crt_tmp_vec;$/;"	m	class:ZZ_pTmpSpaceT
curlen	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      long curlen;$/;"	m	class:LazyTable::Builder
cv	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     std::condition_variable cv;$/;"	m	class:BasicThreadPool::CompositeSignal
cv	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     std::condition_variable cv;$/;"	m	class:BasicThreadPool::SimpleSignal
d	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T d;$/;"	m	class:CloneablePtrControlDerived
d	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T d;$/;"	m	class:MakeCloneableAux
d	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T d;$/;"	m	class:MakeSmartAux
d	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^public: T d; $/;"	m	class:MakeSmartAux
d	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct Relocate_aux_TwoChars { char d[2]; };$/;"	m	struct:Relocate_aux_TwoChars
data	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   mutable UniquePtr<T, P> data;$/;"	m	class:Lazy
data	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^   mutable UniqueArray< UniquePtr<T> > data;$/;"	m	class:LazyTable
data	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   __m128d data;$/;"	m	struct:PD
data	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   __m256d data;$/;"	m	struct:PD
data	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   __m512d data;$/;"	m	struct:PD
data	/home/penguin/projects/ntl-11.3.2/include/NTL/fileio.h	/^   Vec< Vec<char> > data;$/;"	m	class:FileList
data	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   wide_double_impl_t data;$/;"	m	class:wide_double
data	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   NTL_SNS atomic_bool data;$/;"	m	class:AtomicBool
data	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   NTL_SNS atomic_long data;$/;"	m	class:AtomicLong
data	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   NTL_SNS atomic_ulong data;$/;"	m	class:AtomicLowWaterMark
data	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T* data() { return elts(); }$/;"	f	class:Vec
data	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T* data() const { return elts(); }$/;"	f	class:Vec
dec	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   bool dec() $/;"	f	class:AtomicRefCount
dec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      void dec() { idx--; }$/;"	f	struct:Vec::proxy_iterator_impl
default_BlockConstruct	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void default_BlockConstruct(T* p, long n)  $/;"	f
default_BlockConstructFromObj	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void default_BlockConstructFromObj(T* p, long n, const T& q)  $/;"	f
default_BlockConstructFromVec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void default_BlockConstructFromVec(T* p, long n, const T* q)  $/;"	f
default_BlockDestroy	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void default_BlockDestroy(T* p, long n)  $/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long deg(const GF2EX& a) { return a.rep.length() - 1; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long deg(const GF2EXModulus& F) { return F.n; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long deg(const GF2XModulus& F) { return F.n; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long deg(const ZZX& a) { return a.rep.length() - 1; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long deg(const ZZ_pEX& a) { return a.rep.length() - 1; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long deg(const ZZ_pEXModulus& F) { return F.n; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long deg(const ZZ_pX& a) { return a.rep.length() - 1; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long deg(const ZZ_pXModulus& F) { return F.n; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long deg(const zz_pEX& a) { return a.rep.length() - 1; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long deg(const zz_pEXModulus& F) { return F.n; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long deg(const zz_pX& a) { return a.rep.length() - 1; }$/;"	f
deg	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long deg(const zz_pXModulus& F) { return F.n; }$/;"	f
degree	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static long degree() { return GF2EInfo->p.n; }$/;"	f	class:GF2E
degree	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^static long degree() { return deg(ZZ_pEInfo->p); }$/;"	f	class:ZZ_pE
degree	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^static long degree() { return deg(zz_pEInfo->p); }$/;"	f	class:zz_pE
deleter	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   static void deleter(T *p) { delete p; }$/;"	f	struct:DefaultDeleterPolicy
deleter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   static void deleter(RandomStream_impl* p) { RandomStream_impl_delete(p); }$/;"	f	struct:RandomStream_impl_deleter
deleter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void deleter(_ntl_general_rem_one_struct *pinfo)$/;"	f	struct:sp_ZZ_reduce_struct_policy
deleter	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^      static void deleter(MatPrime_crt_helper *p) { MatPrime_crt_helper_deleter(p); }$/;"	f	struct:ZZ_pInfoT::MatPrime_crt_helper_deleter_policy
details_pthread	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^namespace details_pthread {$/;"	n
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline GF2 determinant(const mat_GF2& a)$/;"	f
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline GF2E determinant(const mat_GF2E& a)$/;"	f
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline ZZ determinant(const mat_ZZ& a, long deterministic=0)$/;"	f
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline ZZ_p determinant(const mat_ZZ_p& a)$/;"	f
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline ZZ_pE determinant(const mat_ZZ_pE& A)$/;"	f
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void determinant(zz_p& d, const mat_zz_p& A)$/;"	f
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline zz_p determinant(const mat_zz_p& a)$/;"	f
determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline zz_pE determinant(const mat_zz_pE& A)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 diag(long n, GF2 d)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E diag(long n, const GF2E& d)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR diag(long n, const RR& d)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ diag(long n, const ZZ& d)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p diag(long n, const ZZ_p& d)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE diag(long n, const ZZ_pE& d)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p diag(long n, zz_p d)$/;"	f
diag	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE diag(long n, const zz_pE& d)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX diff(const GF2EX& a)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X diff(const GF2X& a)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX diff(const ZZX& a)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX diff(const ZZ_pEX& a)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX diff(const ZZ_pX& a)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX diff(const zz_pEX& a)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX diff(const zz_pX& a)$/;"	f
diff	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      long diff(const proxy_iterator_impl& other) const$/;"	f	struct:Vec::proxy_iterator_impl
digit	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long digit(const ZZ& a, long k)$/;"	f
discriminant	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZ discriminant(const ZZX& a, long deterministic=0)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void div(GF2& x, GF2 a, GF2 b)   $/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void div(GF2& x, GF2 a, long b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void div(GF2& x, long a, GF2 b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void div(ref_GF2 x, GF2 a, GF2 b)   $/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void div(ref_GF2 x, GF2 a, long b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void div(ref_GF2 x, long a, GF2 b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void div(GF2E& x, const GF2E& a, GF2 b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void div(GF2E& x, const GF2E& a, long b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void div(ZZ& q, const ZZ& a, const ZZ& b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void div(ZZ& q, const ZZ& a, long b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void div(zz_p& x, long a, zz_p b) { div(x, to_zz_p(a), b); }$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void div(zz_p& x, zz_p a, long b) { div(x, a, to_zz_p(b)); }$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void div(zz_p& x, zz_p a, zz_p b)$/;"	f
div	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void div(zz_pX& q, const zz_pX& a, long b)$/;"	f
do_BlockConstruct	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void do_BlockConstruct(T* p, long n) $/;"	f	struct:VecStrategy
do_BlockConstructFromObj	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void do_BlockConstructFromObj(T* p, long n, const T& q)  $/;"	f	struct:VecStrategy
do_BlockConstructFromVec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void do_BlockConstructFromVec(T* p, long n, const T* q) $/;"	f	struct:VecStrategy
do_BlockDestroy	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^static void do_BlockDestroy(T* p, long n) $/;"	f	struct:VecStrategy
do_delete	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^template<class T> void do_delete(void* t) { do_delete_aux((T*)t);  }$/;"	f	namespace:details_pthread
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:AlignedArray
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:CloneablePtr
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:CopiedPtr
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:SmartPtr
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:UniqueArray
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:UniquePtr
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniqueArray<T_ptr> dp;$/;"	m	class:Unique2DArray
dp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniquePtr<T> dp;$/;"	m	class:OptionalVal
dup2even	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^dup2even(PD<4> a)$/;"	f
dup2even	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^dup2even(PD<8> a)$/;"	f
dup2odd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^dup2odd(PD<4> a)$/;"	f
dup2odd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^dup2odd(PD<8> a)$/;"	f
dup4even	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^dup4even(PD<8> a)$/;"	f
dup4odd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^dup4odd(PD<8> a)$/;"	f
e	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^long e;$/;"	m	class:RR
e	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^long e;$/;"	m	class:xdouble
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   GF2X* elts() { return v; }$/;"	f	class:GF2XVec
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   const GF2X* elts() const { return v; }$/;"	f	class:GF2XVec
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T *elts() const { return dp; }$/;"	f	class:UniqueArray
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* elts() const { return dp; }$/;"	f	class:AlignedArray
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   _ntl_ulong* elts() { return rep; }  $/;"	f	class:WordVector
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   const _ntl_ulong* elts() const { return rep; }  $/;"	f	class:WordVector
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   ZZ* elts() { return v; }$/;"	f	class:ZZVec
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   const ZZ* elts() const { return v; }$/;"	f	class:ZZVec
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pX elts[2][2];$/;"	m	class:ZZ_pXMatrix
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pX elts[2][2];$/;"	m	class:zz_pXMatrix
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T* elts() { return _vec__rep; }  $/;"	f	class:Vec
elts	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T* elts() const { return _vec__rep; }  $/;"	f	class:Vec
end	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void end()$/;"	f	class:BasicThreadPool
end	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   const_iterator end() const { $/;"	f	class:Vec
end	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   iterator end() { $/;"	f	class:Vec
end	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T* end() { $/;"	f	class:Vec
end	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T* end() const { $/;"	f	class:Vec
eptr	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  std::exception_ptr eptr;$/;"	m	class:BasicThreadPool
eptr_guard	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  std::mutex eptr_guard;$/;"	m	class:BasicThreadPool
eq	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      bool eq(const proxy_iterator_impl& other) const$/;"	f	struct:Vec::proxy_iterator_impl
equals	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^bool equals(const zz_pContext& other) const { return ptr == other.ptr; } $/;"	f	class:zz_pContext
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2E eval(const GF2EX& f, const GF2E& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2E eval(const GF2X& f, const GF2E& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline vec_GF2E eval(const GF2EX& f, const vec_GF2E& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void eval(GF2E& b, const GF2X& f, const GF2E& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void eval(ZZ& t, const long *a, ZZ_TmpVecAdapter& tmp_vec) const$/;"	f	class:ZZ_CRTStructAdapter
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void eval(ZZ& x, ZZ& a) const$/;"	f	class:ZZ_ReduceStructAdapter
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void eval(long *x, const ZZ& a, ZZ_TmpVecAdapter& tmp_vec) const$/;"	f	class:ZZ_RemStructAdapter
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pE eval(const ZZ_pEX& f, const ZZ_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pE eval(const ZZ_pX& f, const ZZ_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE eval(const ZZ_pEX& f, const vec_ZZ_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void eval(ZZ_pE& b, const ZZ_pX& f, const ZZ_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_p eval(const ZZ_pX& f, const ZZ_p& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p eval(const ZZ_pX& f, const vec_ZZ_p& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline vec_zz_pE eval(const zz_pEX& f, const vec_zz_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void eval(zz_pE& b, const zz_pX& f, const zz_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pE eval(const zz_pEX& f, const zz_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pE eval(const zz_pX& f, const zz_pE& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline vec_zz_p eval(const zz_pX& f, const vec_zz_p& a)$/;"	f
eval	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_p eval(const zz_pX& f, zz_p a)$/;"	f
exec_index	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void exec_index(long cnt, const Fct& fct) $/;"	f	class:BasicThreadPool
exec_range	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void exec_range(long sz, const Fct& fct) $/;"	f	class:BasicThreadPool
exhausted	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long exhausted;$/;"	m	class:PrimeSeq
exists	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   bool exists() const { return dp != 0; } $/;"	f	class:OptionalVal
exp	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR exp(const RR& a)$/;"	f
exp	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble exp(const xdouble& x) { return xexp(to_double(x)); }$/;"	f
expm1	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR expm1(const RR& a)$/;"	f
exponent	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^long exponent() const { return e; }$/;"	f	class:RR
exponent	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^long exponent() const { return e; }$/;"	f	class:xdouble
f	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   GF2EX f;   \/\/ the modulus$/;"	m	class:GF2EXModulus
f	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2X f;   \/\/ the modulus$/;"	m	class:GF2XModulus
f	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f;   \/\/ the modulus$/;"	m	class:ZZ_pEXModulus
f	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pX f;   \/\/ the modulus$/;"	m	class:ZZ_pXModulus
f	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   zz_pEX f;   \/\/ the modulus$/;"	m	class:zz_pEXModulus
f	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pX f;   \/\/ the modulus$/;"	m	class:zz_pXModulus
f	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^    typename std::remove_reference<F>::type f;$/;"	m	class:scope_guard
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   GF2EX f0, fbi, b;$/;"	m	struct:GF2EXTransMultiplier
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   GF2EX f0;$/;"	m	class:GF2EXModulus
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2X f0, fbi, b;$/;"	m	struct:GF2XTransMultiplier
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2X h0, f0;$/;"	m	class:GF2XModulus
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0, fbi, b;$/;"	m	struct:ZZ_pEXTransMultiplier
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0;$/;"	m	class:ZZ_pEXModulus
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   zz_pEX f0, fbi, b;$/;"	m	struct:zz_pEXTransMultiplier
f0	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   zz_pEX f0;$/;"	m	class:zz_pEXModulus
fabs	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR fabs(const RR& a)$/;"	f
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:Lazy
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:AlignedArray
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:CloneablePtr
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:CopiedPtr
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:SmartPtr
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:Unique2DArray
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:UniqueArray
fake_null_function	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:UniquePtr
fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   GF2EX f0, fbi, b;$/;"	m	struct:GF2EXTransMultiplier
fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2X f0, fbi, b;$/;"	m	struct:GF2XTransMultiplier
fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0, fbi, b;$/;"	m	struct:ZZ_pEXTransMultiplier
fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   zz_pEX f0, fbi, b;$/;"	m	struct:zz_pEXTransMultiplier
fct	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      const Fct& fct;$/;"	m	class:BasicThreadPool::ConcurrentTaskFct1
fct	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     const Fct& fct;$/;"	m	class:BasicThreadPool::ConcurrentTaskFct
fetch	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void ZZ_TmpVecAdapter::fetch(ZZ_CRTStructAdapter& crt_struct)$/;"	f	class:ZZ_TmpVecAdapter
fetch	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void ZZ_TmpVecAdapter::fetch(const ZZ_CRTStructAdapter& crt_struct)$/;"	f	class:ZZ_TmpVecAdapter
fetch	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void ZZ_TmpVecAdapter::fetch(const ZZ_RemStructAdapter& rem_struct)$/;"	f	class:ZZ_TmpVecAdapter
fftRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   fftRep() : k(-1), MaxK(-1), len(0), NumPrimes(0) { }$/;"	f	class:fftRep
fftRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   fftRep(INIT_SIZE_TYPE, long InitK) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:fftRep
fftRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   fftRep(const fftRep& R) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:fftRep
fftRep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^class fftRep {$/;"	c
fft_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef FFTRep fft_type;$/;"	t	class:ZZ_pX
fft_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^typedef fftRep fft_type;$/;"	t	class:zz_pX
fixed	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   long fixed() const { return _maxlen & 1; }$/;"	f	class:Vec
fixed	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long fixed() const $/;"	f	class:Vec
fixed	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long fixed;$/;"	m	struct:_ntl_VectorHeader
floor	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR floor(const RR& a)$/;"	f
floor	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double floor(wide_double x)$/;"	f
fused_muladd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_muladd(PD<2> a, PD<2> b, PD<2> c) $/;"	f
fused_muladd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_muladd(PD<4> a, PD<4> b, PD<4> c) $/;"	f
fused_muladd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_muladd(PD<8> a, PD<8> b, PD<8> c) $/;"	f
fused_mulsub	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_mulsub(PD<2> a, PD<2> b, PD<2> c) $/;"	f
fused_mulsub	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_mulsub(PD<4> a, PD<4> b, PD<4> c) $/;"	f
fused_mulsub	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_mulsub(PD<8> a, PD<8> b, PD<8> c) $/;"	f
fused_negmuladd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_negmuladd(PD<2> a, PD<2> b, PD<2> c) $/;"	f
fused_negmuladd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_negmuladd(PD<4> a, PD<4> b, PD<4> c) $/;"	f
fused_negmuladd	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^fused_negmuladd(PD<8> a, PD<8> b, PD<8> c) $/;"	f
get	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   const T* get() const { return data.get(); }$/;"	f	class:Lazy
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* get() const { return dp.get(); }$/;"	f	class:OptionalVal
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:AlignedArray
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:CloneablePtr
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:CopiedPtr
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:SmartPtr
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:UniqueArray
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:UniquePtr
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T_ptr* get() const { return dp.get(); }$/;"	f	class:Unique2DArray
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void *get() { return &d; }$/;"	f	class:CloneablePtrControlDerived
get	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void *get() { return &d; }$/;"	f	class:MakeCloneableAux
get	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void get(unsigned char *res, long n) $/;"	f	class:RandomStream
get	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void get(unsigned char *res, long n) $/;"	f	class:old_RandomStream
get	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   const_reference get(long i, long j) const { return _mat__rep[i].get(j); }$/;"	f	class:Mat
get	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   const GF2 get(long i) const$/;"	f	class:Vec
get	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T& get(long i) const $/;"	f	class:Vec
getBasicThreadPool	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     BasicThreadPool *getBasicThreadPool() const { return pool; }$/;"	f	class:BasicThreadPool::ConcurrentTask
get_a	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   const ZZ& get_a() const { return *a_ptr; }$/;"	f	class:InvModErrorObject
get_a	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   const ZZ& get_a() const { return ZZ::zero(); }$/;"	f	class:InvModErrorObject
get_count	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   long get_count() const { return cp ? cp->cnt.get_count() : 0; }$/;"	f	class:CloneablePtr
get_count	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   long get_count() const { return cp ? cp->cnt.get_count() : 0; }$/;"	f	class:SmartPtr
get_count	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   long get_count() const { return cnt; }$/;"	f	class:AtomicRefCount
get_hi	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^get_hi(PD<4> a)$/;"	f
get_hi	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^get_hi(PD<8> a)$/;"	f
get_lo	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^get_lo(PD<4> a)$/;"	f
get_lo	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^get_lo(PD<8> a)$/;"	f
get_n	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   const ZZ& get_n() const { return *n_ptr; }$/;"	f	class:InvModErrorObject
get_n	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   const ZZ& get_n() const { return ZZ::zero(); }$/;"	f	class:InvModErrorObject
globalSignal	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  SimpleSignal<bool> globalSignal;$/;"	m	class:BasicThreadPool
guard	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      GuardProxy guard;$/;"	m	class:Lazy::Builder
guard	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      GuardProxy guard;$/;"	m	class:LazyTable::Builder
h	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   _ntl_VectorHeader h;$/;"	m	union:_ntl_AlignedVectorHeader
h0	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   GF2EX h0;$/;"	m	class:GF2EXModulus
h0	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2X h0, f0;$/;"	m	class:GF2XModulus
h0	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   ZZ_pEX h0;$/;"	m	class:ZZ_pEXModulus
h0	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   zz_pEX h0;$/;"	m	class:zz_pEXModulus
hi	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^  double hi, lo;$/;"	m	class:quad_float
hi	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   unsigned long hi, lo;$/;"	m	struct:ll_type
hlc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   GF2E hlc;$/;"	m	class:GF2EXModulus
hlc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   ZZ_pE hlc;$/;"	m	class:ZZ_pEXModulus
hlc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   zz_pE hlc;$/;"	m	class:zz_pEXModulus
ident_mat_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 ident_mat_GF2(long n)$/;"	f
ident_mat_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E ident_mat_GF2E(long n)$/;"	f
ident_mat_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR ident_mat_RR(long n)$/;"	f
ident_mat_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ ident_mat_ZZ(long n)$/;"	f
ident_mat_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p ident_mat_ZZ_p(long n)$/;"	f
ident_mat_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE ident_mat_ZZ_pE(long n)$/;"	f
ident_mat_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p ident_mat_zz_p(long n)$/;"	f
ident_mat_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE ident_mat_zz_pE(long n)$/;"	f
idx	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      long idx;$/;"	m	struct:Vec::proxy_iterator_impl
impl	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   UniquePtr<RandomStream_impl,RandomStream_impl_deleter> impl;$/;"	m	class:RandomStream
inc	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   unsigned long inc() $/;"	f	class:AtomicCounter
inc	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   void inc() { cnt.fetch_add(1, NTL_SNS memory_order_relaxed); }$/;"	f	class:AtomicRefCount
inc	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      void inc() { idx++; }$/;"	f	struct:Vec::proxy_iterator_impl
info	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^    const char *info;$/;"	m	class:scope_guard
info	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   const char *info;$/;"	m	struct:scope_guard_builder
init	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void init(const ZZ& p, const ZZ& excess)$/;"	f	class:ZZ_ReduceStructAdapter
init	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void init(long n, const ZZ& p, long (*primes)(long))$/;"	f	class:ZZ_CRTStructAdapter
init	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void init(long n, const ZZ& p, long (*primes)(long))$/;"	f	class:ZZ_RemStructAdapter
init	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long init;$/;"	m	struct:_ntl_VectorHeader
initialized	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   mutable AtomicBool initialized; $/;"	m	class:Lazy
initialized	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^static long initialized() { return (ZZ_pEInfo != 0); }$/;"	f	class:ZZ_pE
initialized	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^static long initialized() { return (zz_pEInfo != 0); }$/;"	f	class:zz_pE
initialized	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^   bool initialized() const $/;"	f	struct:mat_ZZ_p_opaque
insert	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void insert(long i, const ZZ& m)$/;"	f	class:ZZ_CRTStructAdapter
install	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^static void install()$/;"	f	class:ZZ_p
interpolate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX interpolate(const vec_GF2E& a, const vec_GF2E& b)$/;"	f
interpolate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX interpolate(const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
interpolate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX interpolate(const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
interpolate	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX interpolate(const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
interpolate	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX interpolate(const vec_zz_p& a, const vec_zz_p& b)$/;"	f
interval	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   void interval(long& first, long& last, long i) const$/;"	f	struct:PartitionInfo
intervalsz	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   long intervalsz;  \/\/ interval size$/;"	m	struct:PartitionInfo
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 inv(GF2 a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void inv(GF2& x, GF2 a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void inv(ref_GF2 x, GF2 a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E inv(const GF2E& a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR inv(const RR& a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p inv(const ZZ_p& a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE inv(const ZZ_pE& a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void inv(zz_p& x, zz_p a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p inv(zz_p a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE inv(const zz_pE& a)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 inv(const mat_GF2& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E inv(const mat_GF2E& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR inv(const mat_RR& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ inv(const mat_ZZ& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p inv(const mat_ZZ_p& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE inv(const mat_ZZ_pE& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p inv(const mat_zz_p& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void inv(mat_zz_p& X, const mat_zz_p& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void inv(zz_p& d, mat_zz_p& X, const mat_zz_p& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE inv(const mat_zz_pE& A)$/;"	f
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   unsigned long inv;$/;"	m	struct:sp_inverse
inv	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   unsigned long inv;$/;"	m	struct:sp_ll_reduce_struct
iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   typedef proxy_iterator iterator;$/;"	t	class:Vec
iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   typedef value_type *iterator;$/;"	t	class:Vec
join	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^join(PD<2> a, PD<2> b)$/;"	f
join	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^join(PD<4> a, PD<4> b)$/;"	f
k	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long k;                \/\/ a 2^k point representation$/;"	m	class:FFTRep
k	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long k;     \/\/ least k s\/t 2^k >= n$/;"	m	class:ZZ_pXModulus
k	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long k;                \/\/ a 2^k point representation$/;"	m	class:fftRep
k	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long k;     \/\/ least k s\/t 2^k >= n$/;"	m	class:zz_pXModulus
k1	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long k1;$/;"	m	class:GF2XModulus
k2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long k2; $/;"	m	class:GF2XModulus
k3	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long k3; \/\/ used for trinomials and pentanomials$/;"	m	class:GF2XModulus
key	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   pthread_key_t key;$/;"	m	struct:details_pthread::key_wrapper
key_wrapper	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   key_wrapper(void (*destructor)(void*))$/;"	f	struct:details_pthread::key_wrapper
key_wrapper	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct key_wrapper {$/;"	s	namespace:details_pthread
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^void kill() $/;"	f	class:GF2EX
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^void kill() { xrep.kill(); }$/;"	f	class:GF2X
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   void kill() $/;"	f	class:Lazy
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^void kill()$/;"	f	class:ZZ
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^void kill() $/;"	f	class:ZZX
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^void kill() $/;"	f	class:ZZ_pEX
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^void kill() $/;"	f	class:ZZ_pX
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^void kill() $/;"	f	class:zz_pEX
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^void kill() $/;"	f	class:zz_pX
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^void Mat<T>::kill()  $/;"	f	class:Mat
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   void kill() { if (rep) { Deleter::apply(rep); rep = 0; } }$/;"	f	class:WrappedPtr
kill	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::kill()  $/;"	f	class:Vec
l	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long l;     \/\/ least l s\/t 2^l >= 2n-3$/;"	m	class:ZZ_pXModulus
l	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long l;     \/\/ least l s\/t 2^l >= 2n-3$/;"	m	class:zz_pXModulus
launch	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void launch(ConcurrentTask *task, long index)$/;"	f	class:BasicThreadPool
lck	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   NTL_SNS unique_lock<NTL_SNS mutex> lck;$/;"	m	class:GuardProxy
len	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   long len;$/;"	m	class:GF2XVec
len	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^   mutable AtomicLong len; $/;"	m	class:LazyTable
len	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   long len;$/;"	m	class:Unique2DArray
len	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   long len;$/;"	m	class:ZZVec
len	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long len;              \/\/ length of truncated FFT$/;"	m	class:FFTRep
len	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long len;              \/\/ length of truncated FFT$/;"	m	class:fftRep
length	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   long length() const { return len; }$/;"	f	class:GF2XVec
length	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^   long length() const { return len; }$/;"	f	class:LazyTable
length	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   long length() const { return (!rep) ?  0 : long(rep[-1]); }  $/;"	f	class:WordVector
length	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   long length() const { return len; }$/;"	f	class:ZZVec
length	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   long length() const { return _len; }$/;"	f	class:Vec
length	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long length() const $/;"	f	class:Vec
length	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long length;$/;"	m	struct:_ntl_VectorHeader
link	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	/^   long link;$/;"	m	struct:IntFactor
ll_add	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_add(ll_type& x, const ll_type& a)$/;"	f
ll_add	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_add(ll_type& x, unsigned long a)$/;"	f
ll_get_hi	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_get_hi(const ll_type& x)$/;"	f
ll_get_lo	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_get_lo(const ll_type& x)$/;"	f
ll_imul	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_imul(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_imul_add	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_imul_add(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_init	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_init(ll_type& x, unsigned long a)$/;"	f
ll_mul	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_mul(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_mul_add	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_mul_add(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_mul_hi	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_mul_hi(unsigned long a, unsigned long b)$/;"	f
ll_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   sp_ll_reduce_struct ll_red_struct;$/;"	m	class:zz_pInfoT
ll_red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static sp_ll_reduce_struct ll_red_struct() { return zz_pInfo->ll_red_struct; }$/;"	f	class:zz_p
ll_rshift_get_lo	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^ll_rshift_get_lo(ll_type x)$/;"	f
ll_type	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct ll_type {$/;"	s
lo	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^  double hi, lo;$/;"	m	class:quad_float
lo	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   unsigned long hi, lo;$/;"	m	struct:ll_type
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   static PD load(const double *p) { return _mm256_load_pd(p); } $/;"	f	struct:PD
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   static PD load(const double *p) { return _mm512_load_pd(p); } $/;"	f	struct:PD
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   static PD load(const double *p) { return _mm_load_pd(p); } $/;"	f	struct:PD
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^load(PD<2>& x, const double *p) $/;"	f
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^load(PD<2>& x, const long *p)$/;"	f
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^load(PD<4>& x, const double *p) $/;"	f
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^load(PD<4>& x, const long *p)$/;"	f
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^load(PD<8>& x, const double *p) $/;"	f
load	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^load(PD<8>& x, const long *p)$/;"	f
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   static PD loadu(const double *p) { return _mm256_loadu_pd(p); } $/;"	f	struct:PD
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   static PD loadu(const double *p) { return _mm512_loadu_pd(p); } $/;"	f	struct:PD
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   static PD loadu(const double *p) { return _mm_loadu_pd(p); } $/;"	f	struct:PD
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^loadu(PD<2>& x, const double *p) $/;"	f
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^loadu(PD<2>& x, const long *p)$/;"	f
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^loadu(PD<4>& x, const double *p) $/;"	f
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^loadu(PD<4>& x, const long *p)$/;"	f
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^loadu(PD<8>& x, const double *p) $/;"	f
loadu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^loadu(PD<8>& x, const long *p)$/;"	f
localSignal	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      CompositeSignal< ConcurrentTask *, long > localSignal;$/;"	m	struct:BasicThreadPool::AutomaticThread
lock	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   void lock() { lck.lock(); }$/;"	f	class:GuardProxy
log	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR log(const RR& a)$/;"	f
log	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline double log(const ZZ& a)$/;"	f
log10	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR log10(const RR& a)$/;"	f
log1p	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR log1p(const RR& a)$/;"	f
m	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     std::mutex m;$/;"	m	class:BasicThreadPool::CompositeSignal
m	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     std::mutex m;$/;"	m	class:BasicThreadPool::SimpleSignal
m	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^      long m;$/;"	m	struct:Mat::Fixer
make	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void make() { dp.make(); }$/;"	f	class:OptionalVal
make	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void make()$/;"	f	class:CopiedPtr
make	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void make()$/;"	f	class:UniquePtr
make	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void make(Args&&... args) $/;"	f	class:CopiedPtr
make	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void make(Args&&... args) $/;"	f	class:OptionalVal
make	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void make(Args&&... args) $/;"	f	class:UniquePtr
make_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const GF2  make_GF2() const$/;"	f	struct:Vec::proxy_iterator_impl
make_ref_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      ref_GF2 make_ref_GF2() const$/;"	f	struct:Vec::proxy_iterator_impl
make_sp_ll_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^make_sp_ll_reduce_struct(long n)$/;"	f
mantissa	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^const ZZ& mantissa() const { return x; }$/;"	f	class:RR
mantissa	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^double mantissa() const { return x; }$/;"	f	class:xdouble
mask	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   unsigned long mask;$/;"	m	struct:RandomBndGenerator
mat	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   mat_ZZ_p_opaque mat;$/;"	m	struct:ZZ_pXNewArgument
mat	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   Mat<zz_p> mat;$/;"	m	struct:zz_pXNewArgument
mat_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^typedef Mat<GF2> mat_GF2;$/;"	t
mat_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^typedef Mat<GF2E> mat_GF2E;$/;"	t
mat_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^typedef Mat<RR> mat_RR;$/;"	t
mat_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^typedef Mat<ZZ> mat_ZZ;$/;"	t
mat_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^typedef Mat<ZZ_p> mat_ZZ_p;$/;"	t
mat_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^typedef Mat<ZZ_pE> mat_ZZ_pE;$/;"	t
mat_ZZ_p_opaque	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^struct mat_ZZ_p_opaque {$/;"	s
mat_ZZ_p_opaque_body	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^struct mat_ZZ_p_opaque_body {$/;"	s
mat_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^typedef Mat<zz_p> mat_zz_p;$/;"	t
mat_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^typedef Mat<zz_pE> mat_zz_pE;$/;"	t
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int max(int a, int b) { return (a < b) ? b : a; }$/;"	f
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long max(int a, long b) { return (a < b) ? b : long(a); }$/;"	f
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long max(long a, int b) { return (a < b) ? long(b) : a; }$/;"	f
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long max(long a, long b) { return (a < b) ? b : a; }$/;"	f
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned int max(unsigned int a, unsigned int b) $/;"	f
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long max(unsigned int a, unsigned long b) $/;"	f
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long max(unsigned long a, unsigned int b) $/;"	f
max	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long max(unsigned long a, unsigned long b) $/;"	f
method	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   long method; \/\/ GF2EX_MOD_PLAIN or GF2EX_MOD_MUL $/;"	m	class:GF2EXModulus
method	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long method; $/;"	m	class:GF2XModulus
method	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   long method;$/;"	m	class:ZZ_pEXModulus
method	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   long method;$/;"	m	class:zz_pEXModulus
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int min(int a, int b) { return (a < b) ?  a : b; } $/;"	f
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long min(int a, long b) { return (a < b) ?  long(a) : b; } $/;"	f
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long min(long a, int b) { return (a < b) ?  a : long(b); } $/;"	f
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long min(long a, long b) { return (a < b) ?  a : b; } $/;"	f
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned int min(unsigned int a, unsigned int b) $/;"	f
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long min(unsigned int a, unsigned long b) $/;"	f
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long min(unsigned long a, unsigned int b) $/;"	f
min	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline unsigned long min(unsigned long a, unsigned long b) $/;"	f
modulus	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^static long modulus() { return 2; }$/;"	f	class:GF2
modulus	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static const GF2XModulus& modulus() { return GF2EInfo->p; }$/;"	f	class:GF2E
modulus	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^static const ZZ& modulus() { return ZZ_pInfo->p; }$/;"	f	class:ZZ_p
modulus	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^static const ZZ_pXModulus& modulus() { return ZZ_pEInfo->p; }$/;"	f	class:ZZ_pE
modulus	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^long modulus() const { return ptr->p; }$/;"	f	class:zz_pContext
modulus	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static long modulus() { return zz_pInfo->p; }$/;"	f	class:zz_p
modulus	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^static const zz_pXModulus& modulus() { return zz_pEInfo->p; }$/;"	f	class:zz_pE
modulus_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^typedef GF2EXModulus modulus_type;$/;"	t	class:GF2EX
modulus_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^typedef GF2XModulus modulus_type;$/;"	t	class:GF2X
modulus_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^typedef ZZ_pEXModulus modulus_type;$/;"	t	class:ZZ_pEX
modulus_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef ZZ_pXModulus modulus_type;$/;"	t	class:ZZ_pX
modulus_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^typedef zz_pEXModulus modulus_type;$/;"	t	class:zz_pEX
modulus_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^typedef zz_pXModulus modulus_type;$/;"	t	class:zz_pX
montgomery_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   ZZ_ReduceStructAdapter montgomery_struct;$/;"	m	struct:MatPrime_crt_helper
move	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void move(BasicThreadPool& other, long n = 1) $/;"	f	class:BasicThreadPool
move	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   void move(GF2XVec& other) $/;"	f	class:GF2XVec
move	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      void move(UniquePtr<T, P>& p) $/;"	f	class:Lazy::Builder
move	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      void move(UniquePtr<T>& p)$/;"	f	class:LazyTable::Builder
move	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void move(AlignedArray& other) { reset(other.release()); }$/;"	f	class:AlignedArray
move	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void move(CopiedPtr& other) { reset(other.release()); }$/;"	f	class:CopiedPtr
move	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void move(OptionalVal& other) { dp.move(other.dp); }$/;"	f	class:OptionalVal
move	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void move(Unique2DArray& other) $/;"	f	class:Unique2DArray
move	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void move(UniqueArray& other) { reset(other.release()); }$/;"	f	class:UniqueArray
move	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void move(UniquePtr& other) { reset(other.release()); }$/;"	f	class:UniquePtr
move	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   void move(ZZVec& other) $/;"	f	class:ZZVec
move	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^   void move(mat_ZZ_p& A)$/;"	f	struct:mat_ZZ_p_opaque
move	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   void move(Mat& other) $/;"	f	class:Mat
move	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   void move(WrappedPtr& other) $/;"	f	class:WrappedPtr
move	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::move(Vec& y)  $/;"	f	class:Vec
moved	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      bool moved;$/;"	m	class:Lazy::Builder
movesieve	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^const char *movesieve;$/;"	m	class:PrimeSeq
movesieve_mem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^Vec<char> movesieve_mem;$/;"	m	class:PrimeSeq
msk	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   _ntl_ulong msk; \/\/ mask of high bits of residues$/;"	m	class:GF2XModulus
mtx	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   mutable MutexProxy mtx;$/;"	m	class:Lazy
mtx	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^   mutable MutexProxy mtx;$/;"	m	class:LazyTable
mtx	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   NTL_SNS mutex mtx;$/;"	m	class:MutexProxy
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void mul(GF2& x, GF2 a, GF2 b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void mul(GF2& x, GF2 a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void mul(GF2& x, long a, GF2 b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void mul(ref_GF2 x, GF2 a, GF2 b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void mul(ref_GF2 x, GF2 a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void mul(ref_GF2 x, long a, GF2 b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void mul(GF2E& x, GF2 a, const GF2E& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void mul(GF2E& x, const GF2E& a, GF2 b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void mul(GF2E& x, const GF2E& a, const GF2E& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void mul(GF2E& x, const GF2E& a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void mul(GF2E& x, long a, const GF2E& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void mul(GF2EX& x, GF2 a, const GF2EX& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void mul(GF2EX& x, const GF2E& a, const GF2EX& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void mul(GF2EX& x, long a, const GF2EX& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EXFactoring.h	/^inline GF2EX mul(const vec_pair_GF2EX_long& v)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void mul(GF2X& x, GF2 a, const GF2X& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void mul(GF2X& x, long a, const GF2X& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XFactoring.h	/^inline GF2X mul(const vec_pair_GF2X_long& v)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void mul(RR& z, double a, const RR& b) { mul(z, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void mul(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void mul(ZZ& x, const ZZ& a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void mul(ZZ& x, long a, const ZZ& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void mul(ZZX& x, const ZZ& a, const ZZX& b) { mul(x, b, a); } $/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void mul(ZZX& x, long a, const ZZX& b) { mul(x, b, a); } $/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZXFactoring.h	/^inline ZZX mul(const vec_pair_ZZX_long& v)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void mul(ZZ_p& x, const ZZ_p& a, const ZZ_p& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void mul(ZZ_p& x, long a, const ZZ_p& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_p& a, const ZZ_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_pE& a, const ZZ_p& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_pE& a, const ZZ_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_pE& a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, long a, const ZZ_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void mul(ZZ_pEX& x, const ZZ_p& a, const ZZ_pEX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void mul(ZZ_pEX& x, const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void mul(ZZ_pEX& x, long a, const ZZ_pEX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX mul(const vec_pair_ZZ_pEX_long& v)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void mul(ZZ_pX& x, const ZZ_p& a, const ZZ_pX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void mul(ZZ_pX& x, long a, const ZZ_pX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX mul(const vec_pair_ZZ_pX_long& v)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void mul(zz_p& x, long a, zz_p b) { mul(x, to_zz_p(a), b); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void mul(zz_p& x, zz_p a, long b) { mul(x, a, to_zz_p(b)); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void mul(zz_p& x, zz_p a, zz_p b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_p& a, const zz_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_pE& a, const zz_p& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_pE& a, const zz_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_pE& a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, long a, const zz_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void mul(zz_pEX& x, const zz_p& a, const zz_pEX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void mul(zz_pEX& x, const zz_pE& a, const zz_pEX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void mul(zz_pEX& x, long a, const zz_pEX& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX mul(const vec_pair_zz_pEX_long& v)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void mul(zz_pX& x, const zz_pX& a, long b) { mul(x, a, to_zz_p(b)); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void mul(zz_pX& x, long a, const zz_pX& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void mul(zz_pX& x, zz_p a, const zz_pX& b) { mul(x, b, a); }$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pXFactoring.h	/^inline zz_pX mul(const vec_pair_zz_pX_long& v)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void mul(mat_GF2& X, GF2 a, const mat_GF2& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void mul(mat_GF2& X, const mat_GF2& A, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void mul(mat_GF2& X, long a, const mat_GF2& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, GF2 a, const mat_GF2E& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, const GF2E& a, const mat_GF2E& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, const mat_GF2E& A, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, long a, const mat_GF2E& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline void mul(mat_RR& X, const RR& a, const mat_RR& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline void mul(mat_RR& X, double a, const mat_RR& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline void mul(mat_ZZ& X, const ZZ& a, const mat_ZZ& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline void mul(mat_ZZ& X, long a, const mat_ZZ& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline void mul(mat_ZZ_p& X, const ZZ_p& a, const mat_ZZ_p& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline void mul(mat_ZZ_p& X, long a, const mat_ZZ_p& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^void mul(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p_opaque& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline void mul(mat_ZZ_pE& X, const ZZ_p& a, const mat_ZZ_pE& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline void mul(mat_ZZ_pE& X, const ZZ_pE& a, const mat_ZZ_pE& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline void mul(mat_ZZ_pE& X, long a, const mat_ZZ_pE& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void mul(mat_zz_p& X, long a, const mat_zz_p& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void mul(mat_zz_p& X, zz_p a, const mat_zz_p& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline void mul(mat_zz_pE& X, const zz_p& a, const mat_zz_pE& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline void mul(mat_zz_pE& X, const zz_pE& a, const mat_zz_pE& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline void mul(mat_zz_pE& X, long a, const mat_zz_pE& B)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void mul(vec_GF2& x, GF2 a, const vec_GF2& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void mul(vec_GF2& x, const vec_GF2& a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void mul(vec_GF2& x, long a, const vec_GF2& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, GF2 a, const vec_GF2E& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, const GF2E& a, const vec_GF2E& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, const vec_GF2E& a, long b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, long a, const vec_GF2E& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline void mul(vec_RR& x, const RR& a, const vec_RR& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline void mul(vec_RR& x, double a, const vec_RR& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline void mul(vec_ZZ& x, const ZZ& a, const vec_ZZ& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline void mul(vec_ZZ& x, long a, const vec_ZZ& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline void mul(vec_ZZ_p& x, const ZZ_p& a, const vec_ZZ_p& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline void mul(vec_ZZ_p& x, long a, const vec_ZZ_p& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline void mul(vec_ZZ_pE& x, const ZZ_p& a, const vec_ZZ_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline void mul(vec_ZZ_pE& x, const ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline void mul(vec_ZZ_pE& x, long a, const vec_ZZ_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline void mul(vec_zz_p& x, long a, const vec_zz_p& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline void mul(vec_zz_p& x, zz_p a, const vec_zz_p& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline void mul(vec_zz_pE& x, const zz_p& a, const vec_zz_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline void mul(vec_zz_pE& x, const zz_pE& a, const vec_zz_pE& b)$/;"	f
mul	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline void mul(vec_zz_pE& x, long a, const vec_zz_pE& b)$/;"	f
mul_transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^void mul_transpose(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p_opaque& B)$/;"	f
muldivrem_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef sp_muldivrem_struct muldivrem_t;$/;"	t
muldivrem_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef wide_double muldivrem_t;$/;"	t
mulmod_precon_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef unsigned long mulmod_precon_t;$/;"	t
mulmod_precon_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef wide_double mulmod_precon_t;$/;"	t
mulmod_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef sp_inverse mulmod_t;$/;"	t
mulmod_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef wide_double mulmod_t;$/;"	t
multiplier_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef ZZ_pXMultiplier multiplier_type;$/;"	t	class:ZZ_pX
multiplier_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^typedef zz_pXMultiplier multiplier_type;$/;"	t	class:zz_pX
n	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   long n; \/\/  deg(f)$/;"	m	class:GF2EXModulus
n	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long n; \/\/  deg(f)$/;"	m	class:GF2XModulus
n	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   long n; \/\/  deg(f)$/;"	m	class:ZZ_pEXModulus
n	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long n;     \/\/ n = deg(f)$/;"	m	class:ZZ_pXModulus
n	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   long n;$/;"	m	class:ZZ_pXModRep
n	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   long n; \/\/  deg(f)$/;"	m	class:zz_pEXModulus
n	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   long n;     \/\/ n = deg(f)$/;"	m	class:zz_pXModulus
n_ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   SmartPtr<ZZ> n_ptr;$/;"	m	class:InvModErrorObject
nb	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long nb;$/;"	m	struct:RandomBndGenerator
nbits	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   long nbits;$/;"	m	struct:sp_ll_reduce_struct
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void negate(GF2& x, GF2 a)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void negate(ref_GF2 x, GF2 a)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void negate(GF2E& x, const GF2E& a) { x = a; }$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void negate(GF2EX& x, const GF2EX& a) { x = a; }$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void negate(GF2X& x, const GF2X& a) { x = a; }$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void negate(ZZ& x, const ZZ& a)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void negate(ZZ_p& x, const ZZ_p& a)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void negate(ZZ_pE& x, const ZZ_pE& a) $/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void negate(zz_p& x, zz_p a)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void negate(zz_pE& x, const zz_pE& a) $/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void negate(mat_GF2& X, const mat_GF2& A)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void negate(mat_GF2E& X, const mat_GF2E& A)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void negate(vec_GF2& x, const vec_GF2& a)$/;"	f
negate	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline void negate(vec_GF2E& x, const vec_GF2E& a) { x = a; }$/;"	f
new_fft	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void new_fft(long* A, const long* a, long k, $/;"	f
new_ifft	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^void new_ifft(long* A, const long* a, long k, $/;"	f
next	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long next()$/;"	f	struct:RandomBndGenerator
nintervals	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   long nintervals;  \/\/ number of intervals$/;"	m	struct:PartitionInfo
ninv	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   unsigned long ninv;$/;"	m	struct:sp_reduce_struct
norm	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_p norm(const ZZ_pE& a)$/;"	f
norm	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void norm(ZZ_p& x, const ZZ_pE& a)$/;"	f
norm	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void norm(zz_p& x, const zz_pE& a)$/;"	f
norm	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_p norm(const zz_pE& a)$/;"	f
nsintervals	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   long nsintervals; \/\/ number of small intervals$/;"	m	struct:PartitionInfo
nthreads	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  long nthreads;$/;"	m	class:BasicThreadPool
null	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long null() const$/;"	f	class:ZZ
null	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^bool null() const { return ptr == 0; } $/;"	f	class:zz_pContext
old_RandomStream	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^class old_RandomStream {$/;"	c
old_p	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^   long old_p;$/;"	m	class:RROutputPush
old_p	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^   long old_p;$/;"	m	class:RRPush
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long operator!=(GF2 a, GF2 b)  { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long operator!=(GF2 a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long operator!=(long a, GF2 b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator!=(GF2 a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator!=(const GF2E& a, GF2 b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator!=(const GF2E& a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator!=(const GF2E& a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator!=(long a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator!=(GF2 a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator!=(const GF2E& a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, GF2 b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator!=(long a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long operator!=(GF2 a, const GF2X& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long operator!=(const GF2X& a, GF2 b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long operator!=(const GF2X& a, const GF2X& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long operator!=(const GF2X& a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long operator!=(long a, const GF2X& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator!=(const RR& a, const RR& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator!=(const RR& a, double b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator!=(double a, const RR& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const CloneablePtr<X>& a, const CloneablePtr<Y>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const CopiedPtr<T,P>& a, const CopiedPtr<T,P>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const CopiedPtr<X,U>& a, const CopiedPtr<Y,V>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const SmartPtr<X>& a, const SmartPtr<Y>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const Unique2DArray<X>& a, const Unique2DArray<X>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const Unique2DArray<X>& a, const Unique2DArray<Y>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const UniqueArray<X>& a, const UniqueArray<X>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const UniqueArray<X>& a, const UniqueArray<Y>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const UniquePtr<T,P>& a, const UniquePtr<T,P>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator!=(const UniquePtr<X,U>& a, const UniquePtr<Y,V>& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator!=(const ZZ& a, const ZZ& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator!=(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) != 0; }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator!=(long a, const ZZ& b) { return b != a; }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long operator!=(const ZZ& a, const ZZX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long operator!=(const ZZX& a, const ZZ& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long operator!=(const ZZX& a, const ZZX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long operator!=(const ZZX& a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long operator!=(long a, const ZZX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline long operator!=(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline long operator!=(const ZZ_p& a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline long operator!=(long a, const ZZ_p& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_p& a, const ZZ_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_pE& a, const ZZ_p& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_pE& a, long b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator!=(long a, const ZZ_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, long b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator!=(const long a, const ZZ_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_p& a, const ZZ_pX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_pX& a, const ZZ_p& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_pX& a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator!=(long a, const ZZ_pX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long operator!=(long a, zz_p b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long operator!=(zz_p a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long operator!=(zz_p a, zz_p b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_p& a, const zz_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_pE& a, const zz_p& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_pE& a, const zz_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_pE& a, long b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator!=(long a, const zz_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator!=(const long a, const zz_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_p& a, const zz_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pE& a, const zz_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, const zz_p& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, const zz_pE& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, long b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator!=(const zz_pX& a, const zz_pX& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator!=(const zz_pX& a, long b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator!=(const zz_pX& a, zz_p b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator!=(long a, const zz_pX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator!=(zz_p a, const zz_pX& b) { return !(a == b); }$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^long operator!=(const Mat<T>& a, const Mat<T>& b)  $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^inline long operator!=(const Pair<S,T>& x, const Pair<S,T>& y) $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator!=(const quad_float& x, double y) $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator!=(double x, const quad_float& y)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^bool operator!=(const vec_GF2::const_proxy_iterator& a, const vec_GF2::const_proxy_iterator& b) $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^bool operator!=(const vec_GF2::proxy_iterator& a, const vec_GF2::proxy_iterator& b) $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline long operator!=(const vec_GF2& a, const vec_GF2& b)$/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^long operator!=(const Vec<T>& a, const Vec<T>& b) $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator!=(const xdouble& a, const xdouble& b) $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator!=(const xdouble& a, double b) $/;"	f
operator !=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator!=(double a, const xdouble& b) $/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator%(const GF2EX& a, const GF2EX& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator%(const GF2EX& a, const GF2EXModulus& F)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator%(const GF2X& a, const GF2X& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator%(const GF2X& a, const GF2XModulus& F)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator%(const ZZ& a, const ZZ& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator%(const ZZ& a, long b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator%(const ZZX& a, const ZZX& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator%(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator%(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator%(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator%(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator%(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator%(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator%(const zz_pX& a, const zz_pX& b)$/;"	f
operator %	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator%(const zz_pX& a, const zz_pXModulus& F)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator%=(GF2EX& x, const GF2EX& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator%=(GF2EX& x, const GF2EXModulus& F)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator%=(GF2X& x, const GF2X& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator%=(GF2X& x, const GF2XModulus& F)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator%=(ZZ& x, const ZZ& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator%=(ZZX& x, const ZZX& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator%=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator%=(ZZ_pEX& x, const ZZ_pEXModulus& F)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator%=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator%=(ZZ_pX& x, const ZZ_pXModulus& F)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator%=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator%=(zz_pEX& x, const zz_pEXModulus& F)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator%=(zz_pX& x, const zz_pX& b)$/;"	f
operator %=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator%=(zz_pX& x, const zz_pXModulus& F)$/;"	f
operator &	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator&(const ZZ& a, const ZZ& b)$/;"	f
operator &	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator&(const ZZ& a, long b)$/;"	f
operator &	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator&(long a, const ZZ& b)$/;"	f
operator &	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   const raw_ptr* operator&() const { return &rep; }$/;"	f	class:WrappedPtr
operator &	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   raw_ptr* operator&() { return &rep; }$/;"	f	class:WrappedPtr
operator &=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator&=(ZZ& x, const ZZ& b) $/;"	f
operator &=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator&=(ZZ& x, long b) $/;"	f
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      bool operator()()  const { return building; }$/;"	f	class:Lazy::Builder
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   _ntl_ulong& operator()(long i) { return (*this)[i-1]; }  $/;"	f	class:WordVector
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   const _ntl_ulong& operator()(long i) const { return (*this)[i-1]; } $/;"	f	class:WordVector
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pX& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:ZZ_pXMatrix
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   const ZZ_pX& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:ZZ_pXMatrix
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   const zz_pX& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:zz_pXMatrix
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pX& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:zz_pXMatrix
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^      void operator()(Vec<T>& v) { v.FixLength(m); }$/;"	f	struct:Mat::Fixer
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   Vec<T>& operator()(long i) { return _mat__rep[i-1]; }  $/;"	f	class:Mat
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   const Vec<T>& operator()(long i) const { return _mat__rep[i-1]; }  $/;"	f	class:Mat
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   const_reference operator()(long i, long j) const   $/;"	f	class:Mat
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   reference operator()(long i, long j) { return _mat__rep[i-1][j-1]; }  $/;"	f	class:Mat
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   const GF2 operator()(long i) const $/;"	f	class:Vec
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   ref_GF2 operator()(long i) $/;"	f	class:Vec
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T& operator()(long i) { return (*this)[i-1]; }  $/;"	f	class:Vec
operator ()	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T& operator()(long i) const { return (*this)[i-1]; } $/;"	f	class:Vec
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator*(GF2 a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator*(GF2 a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator*(long a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator*(GF2 a, const GF2E& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator*(const GF2E& a, GF2 b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator*(const GF2E& a, const GF2E& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator*(const GF2E& a, long b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator*(long a, const GF2E& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator*(GF2 a, const GF2EX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2E& a, const GF2EX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, const GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, const GF2EX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator*(long a, const GF2EX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator*(GF2 a, const GF2X& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator*(const GF2X& a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator*(const GF2X& a, const GF2X& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator*(const GF2X& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator*(long a, const GF2X& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   const T& operator*()  const { return *data; }$/;"	f	class:Lazy
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator*(PD<2> a, PD<2> b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator*(PD<4> a, PD<4> b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator*(PD<8> a, PD<8> b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator*(const RR& a, const RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator*(const RR& a, double b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator*(double a, const RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:CloneablePtr
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:CopiedPtr
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:SmartPtr
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:UniquePtr
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator*(const ZZ& a, const ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator*(const ZZ& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator*(long a, const ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZ& a, const ZZX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZX& a, const ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZX& a, const ZZX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZX& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator*(long a, const ZZX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator*(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator*(const ZZ_p& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator*(long a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_pE& a, long b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(long a, const ZZ_pE& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(long a, const ZZ_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_p& a, const ZZ_pX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_pX& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(long a, const ZZ_pX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator*(long a, zz_p b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator*(zz_p a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator*(zz_p a, zz_p b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_p& a, const zz_pE& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_pE& a, const zz_p& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_pE& a, const zz_pE& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_pE& a, long b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator*(long a, const zz_pE& b) $/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_p& a, const zz_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pE& a, const zz_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, const zz_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, const zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(long a, const zz_pEX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator*(const zz_pX& a, const zz_pX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator*(const zz_pX& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator*(const zz_pX& a, zz_p b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator*(long a, const zz_pX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator*(zz_p a, const zz_pX& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(GF2 a, const mat_GF2& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(const mat_GF2& a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(const mat_GF2& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(long a, const mat_GF2& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(GF2 a, const mat_GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const GF2E& a, const mat_GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const mat_GF2E& a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const mat_GF2E& a, const GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const mat_GF2E& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(long a, const mat_GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR operator*(const RR& a, const mat_RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR operator*(const mat_RR& a, const RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR operator*(const mat_RR& a, double b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR operator*(double a, const mat_RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(const ZZ& a, const mat_ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(const mat_ZZ& a, const ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(const mat_ZZ& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(long a, const mat_ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(const ZZ_p& a, const mat_ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(const mat_ZZ_p& a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(const mat_ZZ_p& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(long a, const mat_ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const ZZ_p& a, const mat_ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const ZZ_pE& a, const mat_ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const mat_ZZ_pE& a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const mat_ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const mat_ZZ_pE& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(long a, const mat_ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(const mat_zz_p& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(const mat_zz_p& a, zz_p b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(long a, const mat_zz_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(zz_p a, const mat_zz_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const mat_zz_pE& a, const zz_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const mat_zz_pE& a, const zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const mat_zz_pE& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const zz_p& a, const mat_zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const zz_pE& a, const mat_zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(long a, const mat_zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator*(const quad_float& x, const quad_float& y)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator*(const quad_float& x, double y )$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator*(double x, const quad_float& y)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double operator*(wide_double x, wide_double y)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const GF2 operator*() const { return rep.make_GF2(); }$/;"	f	struct:Vec::const_proxy_iterator
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      ref_GF2 operator*() const { return rep.make_ref_GF2(); }$/;"	f	struct:Vec::proxy_iterator
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline GF2 operator*(const vec_GF2& a, const vec_GF2& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(GF2 a, const vec_GF2& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(const vec_GF2& a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(const vec_GF2& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(long a, const vec_GF2& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(GF2 a, const vec_GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const GF2E& a, const vec_GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const vec_GF2E& a, GF2 b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const vec_GF2E& a, const GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const vec_GF2E& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(long a, const vec_GF2E& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR operator*(const RR& a, const vec_RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR operator*(const vec_RR& a, const RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR operator*(const vec_RR& a, double b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR operator*(double a, const vec_RR& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(const ZZ& a, const vec_ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(const vec_ZZ& a, const ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(const vec_ZZ& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(long a, const vec_ZZ& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(const ZZ_p& a, const vec_ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(const vec_ZZ_p& a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(const vec_ZZ_p& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(long a, const vec_ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const ZZ_p& a, const vec_ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const vec_ZZ_pE& a, const ZZ_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const vec_ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const vec_ZZ_pE& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(long a, const vec_ZZ_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(const vec_zz_p& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(const vec_zz_p& a, zz_p b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(long a, const vec_zz_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(zz_p a, const vec_zz_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const vec_zz_pE& a, const zz_p& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const vec_zz_pE& a, const zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const vec_zz_pE& a, long b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const zz_p& a, const vec_zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const zz_pE& a, const vec_zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(long a, const vec_zz_pE& b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator*(const xdouble& a, double b)$/;"	f
operator *	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator*(double a, const xdouble& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator*=(GF2& x, GF2 b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator*=(GF2& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator*=(ref_GF2 x, GF2 b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator*=(ref_GF2 x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator*=(GF2E& x, GF2 b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator*=(GF2E& x, const GF2E& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator*=(GF2E& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, GF2 b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, const GF2E& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, const GF2EX& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator*=(GF2X& x, GF2 b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator*=(GF2X& x, const GF2X& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator*=(GF2X& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator*=(PD<2>& a, PD<2> b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator*=(PD<4>& a, PD<4> b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator*=(PD<8>& a, PD<8> b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator*=(RR& x, const RR& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator*=(RR& x, double b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator*=(ZZ& x, const ZZ& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator*=(ZZ& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator*=(ZZX& x, const ZZ& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator*=(ZZX& x, const ZZX& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator*=(ZZX& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator*=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator*=(ZZ_p& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator*=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator*=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator*=(ZZ_pE& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator*=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator*=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator*=(ZZ_pX& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator*=(zz_p& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator*=(zz_p& x, zz_p b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator*=(zz_pE& x, const zz_p& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator*=(zz_pE& x, const zz_pE& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator*=(zz_pE& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, const zz_p& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, const zz_pE& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator*=(zz_pX& x, const zz_pX& b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator*=(zz_pX& x, long b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator*=(zz_pX& x, zz_p b)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2& operator*=(mat_GF2& x, GF2 a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2& operator*=(mat_GF2& x, const mat_GF2& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2& operator*=(mat_GF2& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline vec_GF2& operator*=(vec_GF2& x, const mat_GF2& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, GF2 a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, const GF2E& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, const mat_GF2E& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, const mat_GF2E& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR& operator*=(mat_RR& x, const RR& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR& operator*=(mat_RR& x, const mat_RR& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR& operator*=(mat_RR& x, double a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline vec_RR& operator*=(vec_RR& x, const mat_RR& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator*=(mat_ZZ& x, const ZZ& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator*=(mat_ZZ& x, const mat_ZZ& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator*=(mat_ZZ& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline vec_ZZ& operator*=(vec_ZZ& x, const mat_ZZ& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator*=(mat_ZZ_p& x, const ZZ_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator*=(mat_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator*=(mat_ZZ_p& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline vec_ZZ_p& operator*=(vec_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, const ZZ_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, const ZZ_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator*=(mat_zz_p& x, const mat_zz_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator*=(mat_zz_p& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator*=(mat_zz_p& x, zz_p a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline vec_zz_p& operator*=(vec_zz_p& x, const mat_zz_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, const zz_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, const zz_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator*= (quad_float& x, const quad_float& y)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator*= (quad_float& x, double y)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double& operator*=(wide_double& x, wide_double y)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2& operator*=(vec_GF2& x, GF2 a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2& operator*=(vec_GF2& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, GF2 a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, const GF2E& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR& operator*=(vec_RR& x, const RR& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR& operator*=(vec_RR& x, double a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator*=(vec_ZZ& x, const ZZ& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator*=(vec_ZZ& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator*=(vec_ZZ_p& x, const ZZ_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator*=(vec_ZZ_p& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, const ZZ_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, const ZZ_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator*=(vec_zz_p& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator*=(vec_zz_p& x, zz_p a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, const zz_p& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, const zz_pE& a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, long a)$/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator*=(xdouble& a, const xdouble& b) $/;"	f
operator *=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator*=(xdouble& a, double b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator+(GF2 a, GF2 b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator+(GF2 a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator+(long a, GF2 b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator+(GF2 a, const GF2E& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator+(const GF2E& a, GF2 b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator+(const GF2E& a, const GF2E& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator+(const GF2E& a, long b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator+(long a, const GF2E& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator+(GF2 a, const GF2EX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2E& a, const GF2EX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, GF2 b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, const GF2E& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, const GF2EX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator+(long a, const GF2EX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator+(GF2 a, const GF2X& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator+(const GF2X& a, GF2 b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator+(const GF2X& a, const GF2X& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator+(const GF2X& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator+(long a, const GF2X& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator+(PD<2> a, PD<2> b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator+(PD<4> a, PD<4> b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator+(PD<8> a, PD<8> b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator+(const RR& a, const RR& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator+(const RR& a, double b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator+(double a, const RR& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator+(const ZZ& a, const ZZ& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator+(const ZZ& a, long b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator+(long  a, const ZZ& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZ& a, const ZZX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZX& a, const ZZ& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZX& a, const ZZX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZX& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator+(long a, const ZZX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator+(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator+(const ZZ_p& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator+(long a, const ZZ_p& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_pE& a, long b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(long a, const ZZ_pE& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(long a, const ZZ_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_p& a, const ZZ_pX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_pX& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(long a, const ZZ_pX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator+(long a, zz_p b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator+(zz_p a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator+(zz_p a, zz_p b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_p& a, const zz_pE& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_pE& a, const zz_p& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_pE& a, const zz_pE& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_pE& a, long b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator+(long a, const zz_pE& b) $/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_p& a, const zz_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pE& a, const zz_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, const zz_p& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, const zz_pE& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(long a, const zz_pEX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator+(const zz_pX& a, const zz_pX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator+(const zz_pX& a, long b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator+(const zz_pX& a, zz_p b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator+(long a, const zz_pX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator+(zz_p a, const zz_pX& b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator+(const quad_float& x, const quad_float& y)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator+(const quad_float& x, double y )$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator+(double x, const quad_float& y)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double operator+(wide_double x, wide_double y)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^operator+(scope_guard_builder b, F&& f)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator+(const vec_GF2::const_proxy_iterator& a, long x)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator+(long x, const vec_GF2::const_proxy_iterator& a)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator+(const vec_GF2::proxy_iterator& a, long x)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator+(long x, const vec_GF2::proxy_iterator& a)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator+(const xdouble& a, double b)$/;"	f
operator +	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator+(double a, const xdouble& b)$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator++(GF2& x) { return x = x + 1; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator++(ref_GF2 x) { return x = x + 1; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void operator++(GF2& x, int) { x = x + 1; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void operator++(ref_GF2 x, int) { x = x + 1; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator++(GF2E& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void operator++(GF2E& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator++(GF2EX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void operator++(GF2EX& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator++(GF2X& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void operator++(GF2X& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator++(RR& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void operator++(RR& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator++(ZZ& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void operator++(ZZ& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator++(ZZX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void operator++(ZZX& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator++(ZZ_p& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void operator++(ZZ_p& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator++(ZZ_pE& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void operator++(ZZ_pE& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator++(ZZ_pEX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void operator++(ZZ_pEX& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator++(ZZ_pX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void operator++(ZZ_pX& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void operator++(zz_p& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator++(zz_p& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void operator++(zz_pE& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator++(zz_pE& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void operator++(zz_pEX& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator++(zz_pEX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void operator++(zz_pX& x, int) { add(x, x, 1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator++(zz_pX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator++(quad_float& a) { a += 1.0; return a; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void operator++(quad_float& a, int) { a += 1.0; }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator  operator++(int) { const_proxy_iterator t = *this; rep.inc(); return t; }$/;"	f	struct:Vec::const_proxy_iterator
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator++() { rep.inc(); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator  operator++(int) { proxy_iterator t = *this; rep.inc(); return t; }$/;"	f	struct:Vec::proxy_iterator
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator& operator++() { rep.inc(); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void operator++(xdouble& a, int) { a = a + to_xdouble(1); }$/;"	f
operator ++	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator++(xdouble& a) { a = a + to_xdouble(1); return a; }$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator+=(GF2& x, GF2 b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator+=(GF2& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator+=(ref_GF2 x, GF2 b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator+=(ref_GF2 x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator+=(GF2E& x, GF2 b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator+=(GF2E& x, const GF2E& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator+=(GF2E& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, GF2 b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, const GF2E& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, const GF2EX& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator+=(GF2X& x, GF2 b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator+=(GF2X& x, const GF2X& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator+=(GF2X& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator+=(PD<2>& a, PD<2> b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator+=(PD<4>& a, PD<4> b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator+=(PD<8>& a, PD<8> b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator+=(RR& x, const RR& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator+=(RR& x, double b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator+=(ZZ& x, const ZZ& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator+=(ZZ& x, long a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator+=(ZZX& x, const ZZ& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator+=(ZZX& x, const ZZX& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator+=(ZZX& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator+=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator+=(ZZ_p& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator+=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator+=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator+=(ZZ_pE& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator+=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator+=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator+=(ZZ_pX& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator+=(zz_p& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator+=(zz_p& x, zz_p b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator+=(zz_pE& x, const zz_p& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator+=(zz_pE& x, const zz_pE& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator+=(zz_pE& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, const zz_p& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, const zz_pE& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator+=(zz_pX& x, const zz_pX& b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator+=(zz_pX& x, long b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator+=(zz_pX& x, zz_p b)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2& operator+=(mat_GF2& x, const mat_GF2& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator+=(mat_GF2E& x, const mat_GF2E& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR& operator+=(mat_RR& x, const mat_RR& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator+=(mat_ZZ& x, const mat_ZZ& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator+=(mat_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator+=(mat_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator+=(mat_zz_p& x, const mat_zz_p& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator+=(mat_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator += (quad_float& x, double y)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator+= (quad_float& x, const quad_float& y)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double& operator+=(wide_double& x, wide_double y)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator+=(long x) { rep.add(x); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator& operator+=(long x) { rep.add(x); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2& operator+=(vec_GF2& x, const vec_GF2& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator+=(vec_GF2E& x, const vec_GF2E& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR& operator+=(vec_RR& x, const vec_RR& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator+=(vec_ZZ& x, const vec_ZZ& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator+=(vec_ZZ_p& x, const vec_ZZ_p& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator+=(vec_ZZ_pE& x, const vec_ZZ_pE& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator+=(vec_zz_p& x, const vec_zz_p& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator+=(vec_zz_pE& x, const vec_zz_pE& a)$/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator+=(xdouble& a, const xdouble& b) $/;"	f
operator +=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator+=(xdouble& a, double b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator-(GF2 a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator-(GF2 a, GF2 b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator-(GF2 a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator-(long a, GF2 b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator-(GF2 a, const GF2E& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a, GF2 b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a, const GF2E& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a, long b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator-(long a, const GF2E& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(GF2 a, const GF2EX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2E& a, const GF2EX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, GF2 b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, const GF2E& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, const GF2EX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator-(long a, const GF2EX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator-(GF2 a, const GF2X& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a, GF2 b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a, const GF2X& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator-(long a, const GF2X& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator-(PD<2> a, PD<2> b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator-(PD<4> a, PD<4> b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator-(PD<8> a, PD<8> b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator-(const RR& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator-(const RR& a, const RR& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator-(const RR& a, double b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator-(double a, const RR& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator-(const ZZ& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator-(const ZZ& a, const ZZ& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator-(const ZZ& a, long b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator-(long  a, const ZZ& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZ& a, const ZZX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a, const ZZ& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a, const ZZX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator-(long a, const ZZX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(const ZZ_p& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(const ZZ_p& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(long a, const ZZ_p& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a, long b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(long a, const ZZ_pE& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(long a, const ZZ_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_p& a, const ZZ_pX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(long a, const ZZ_pX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator-(long a, zz_p b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator-(zz_p a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator-(zz_p a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator-(zz_p a, zz_p b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_p& a, const zz_pE& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a, const zz_p& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a, const zz_pE& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a, long b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator-(long a, const zz_pE& b) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_p& a, const zz_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pE& a, const zz_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a) $/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, const zz_p& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, const zz_pE& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(long a, const zz_pEX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a, const zz_pX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a, long b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a, zz_p b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator-(long a, const zz_pX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator-(zz_p a, const zz_pX& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 operator-(const mat_GF2& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator-(const quad_float& x)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator-(const quad_float& x, const quad_float& y)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator-(const quad_float& x, double y )$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator-(double x, const quad_float& y)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double operator-(wide_double x, wide_double y)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 operator-(const vec_GF2& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^long operator-(const vec_GF2::const_proxy_iterator& a, const vec_GF2::const_proxy_iterator& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^long operator-(const vec_GF2::proxy_iterator& a, const vec_GF2::proxy_iterator& b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator-(const vec_GF2::const_proxy_iterator& a, long x)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator-(long x, const vec_GF2::const_proxy_iterator& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator-(const vec_GF2::proxy_iterator& a, long x)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator-(long x, const vec_GF2::proxy_iterator& a)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator-(const xdouble& a, double b)$/;"	f
operator -	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator-(double a, const xdouble& b)$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator--(GF2& x) { return x = x - 1; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator--(ref_GF2 x) { return x = x - 1; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void operator--(GF2& x, int) { x = x - 1; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void operator--(ref_GF2 x, int) { x = x - 1; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator--(GF2E& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void operator--(GF2E& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator--(GF2EX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void operator--(GF2EX& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator--(GF2X& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void operator--(GF2X& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator--(RR& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void operator--(RR& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator--(ZZ& x) { add(x, x, -1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void operator--(ZZ& x, int) { add(x, x, -1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator--(ZZX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void operator--(ZZX& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator--(ZZ_p& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void operator--(ZZ_p& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator--(ZZ_pE& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void operator--(ZZ_pE& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator--(ZZ_pEX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void operator--(ZZ_pEX& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator--(ZZ_pX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void operator--(ZZ_pX& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void operator--(zz_p& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator--(zz_p& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void operator--(zz_pE& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator--(zz_pE& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void operator--(zz_pEX& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator--(zz_pEX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void operator--(zz_pX& x, int) { sub(x, x, 1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator--(zz_pX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator--(quad_float& a) { a -= 1.0; return a; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline void operator--(quad_float& a, int) { a -= 1.0; }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator  operator--(int) { const_proxy_iterator t = *this; rep.dec(); return t; }$/;"	f	struct:Vec::const_proxy_iterator
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator--() { rep.dec(); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator  operator--(int) { proxy_iterator t = *this; rep.dec(); return t; }$/;"	f	struct:Vec::proxy_iterator
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator& operator--() { rep.dec(); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline void operator--(xdouble& a, int) { a = a - to_xdouble(1); }$/;"	f
operator --	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator--(xdouble& a) { a = a - to_xdouble(1); return a; }$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator-=(GF2& x, GF2 b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator-=(GF2& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator-=(ref_GF2 x, GF2 b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator-=(ref_GF2 x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator-=(GF2E& x, GF2 b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator-=(GF2E& x, const GF2E& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator-=(GF2E& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, GF2 b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, const GF2E& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, const GF2EX& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator-=(GF2X& x, GF2 b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator-=(GF2X& x, const GF2X& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator-=(GF2X& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator-=(PD<2>& a, PD<2> b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator-=(PD<4>& a, PD<4> b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator-=(PD<8>& a, PD<8> b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator-=(RR& x, const RR& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator-=(RR& x, double b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator-=(ZZ& x, const ZZ& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator-=(ZZ& x, long a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator-=(ZZX& x, const ZZ& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator-=(ZZX& x, const ZZX& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator-=(ZZX& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator-=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator-=(ZZ_p& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator-=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator-=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator-=(ZZ_pE& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator-=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator-=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator-=(ZZ_pX& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator-=(zz_p& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator-=(zz_p& x, zz_p b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator-=(zz_pE& x, const zz_p& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator-=(zz_pE& x, const zz_pE& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator-=(zz_pE& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, const zz_p& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, const zz_pE& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator-=(zz_pX& x, const zz_pX& b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator-=(zz_pX& x, long b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator-=(zz_pX& x, zz_p b)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2& operator-=(mat_GF2& x, const mat_GF2& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator-=(mat_GF2E& x, const mat_GF2E& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR& operator-=(mat_RR& x, const mat_RR& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator-=(mat_ZZ& x, const mat_ZZ& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator-=(mat_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator-=(mat_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator-=(mat_zz_p& x, const mat_zz_p& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator-=(mat_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator-= (quad_float& x, const quad_float& y)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator-= (quad_float& x, double y)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double& operator-=(wide_double& x, wide_double y)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator-=(long x) { rep.add(-x); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator& operator-=(long x) { rep.add(-x); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2& operator-=(vec_GF2& x, const vec_GF2& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator-=(vec_GF2E& x, const vec_GF2E& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^inline vec_RR& operator-=(vec_RR& x, const vec_RR& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator-=(vec_ZZ& x, const vec_ZZ& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator-=(vec_ZZ_p& x, const vec_ZZ_p& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator-=(vec_ZZ_pE& x, const vec_ZZ_pE& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator-=(vec_zz_p& x, const vec_zz_p& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator-=(vec_zz_pE& x, const vec_zz_pE& a)$/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator-=(xdouble& a, const xdouble& b) $/;"	f
operator -=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator-=(xdouble& a, double b) $/;"	f
operator ->	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   const T* operator->() const { return data.operator->(); }$/;"	f	class:Lazy
operator ->	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:CloneablePtr
operator ->	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:CopiedPtr
operator ->	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:SmartPtr
operator ->	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:UniquePtr
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator\/(GF2 a, GF2 b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator\/(GF2 a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 operator\/(long a, GF2 b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator\/(GF2 a, const GF2E& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator\/(const GF2E& a, GF2 b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator\/(const GF2E& a, const GF2E& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator\/(const GF2E& a, long b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E operator\/(long a, const GF2E& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, GF2 b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, const GF2E& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, const GF2EX& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, const GF2EXModulus& F)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, GF2 b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, const GF2X& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, const GF2XModulus& F)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator\/(PD<2> a, PD<2> b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator\/(PD<4> a, PD<4> b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator\/(PD<8> a, PD<8> b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator\/(const RR& a, const RR& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator\/(const RR& a, double b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR operator\/(double a, const RR& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator\/(const ZZ& a, const ZZ& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator\/(const ZZ& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator\/(const ZZX& a, const ZZ& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator\/(const ZZX& a, const ZZX& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator\/(const ZZX& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator\/(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator\/(const ZZ_p& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p operator\/(long a, const ZZ_p& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_pE& a, long b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(long a, const ZZ_pE& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator\/(long a, zz_p b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator\/(zz_p a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p operator\/(zz_p a, zz_p b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_p& a, const zz_pE& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_pE& a, const zz_p& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_pE& a, const zz_pE& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_pE& a, long b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(long a, const zz_pE& b) $/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_p& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_pE& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, const zz_pX& b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, const zz_pXModulus& F)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, long b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, zz_p b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator\/(const quad_float& x, const quad_float& y)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator\/(const quad_float& x, double y )$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float operator\/(double x, const quad_float& y)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double operator\/(wide_double x, wide_double y)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator\/(const xdouble& a, double b)$/;"	f
operator /	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble operator\/(double a, const xdouble& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator\/=(GF2& x, GF2 b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2& operator\/=(GF2& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator\/=(ref_GF2 x, GF2 b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline ref_GF2 operator\/=(ref_GF2 x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator\/=(GF2E& x, GF2 b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator\/=(GF2E& x, const GF2E& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& operator\/=(GF2E& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, GF2 b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, const GF2E& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, const GF2EX& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, const GF2EXModulus& F)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, GF2 b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, const GF2X& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, const GF2XModulus& F)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator\/=(PD<2>& a, PD<2> b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator\/=(PD<4>& a, PD<4> b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^operator\/=(PD<8>& a, PD<8> b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator\/=(RR& x, const RR& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& operator\/=(RR& x, double b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator\/=(ZZ& x, const ZZ& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator\/=(ZZ& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator\/=(ZZX& x, const ZZ& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator\/=(ZZX& x, const ZZX& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator\/=(ZZX& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator\/=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& operator\/=(ZZ_p& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator\/=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator\/=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator\/=(ZZ_pE& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_pEXModulus& F)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, const ZZ_pXModulus& F)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator\/=(zz_p& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& operator\/=(zz_p& x, zz_p b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator\/=(zz_pE& x, const zz_p& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator\/=(zz_pE& x, const zz_pE& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& operator\/=(zz_pE& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_p& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_pE& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_pEXModulus& F)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, const zz_pX& b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, const zz_pXModulus& F)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, long b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, zz_p b)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator\/= (quad_float& x, const quad_float& y)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& operator\/= (quad_float& x, double y)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^inline wide_double& operator\/=(wide_double& x, wide_double y)$/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator\/=(xdouble& a, const xdouble& b) $/;"	f
operator /=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& operator\/=(xdouble& a, double b) $/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator <(const RR& a, const RR& b) { return compare(a, b)  < 0; }$/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator <(const RR& a, double b) { return compare(a, b)  < 0; }$/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator <(double a, const RR& b) { return compare(a, b)  < 0; }$/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator<(const ZZ& a, const ZZ& b)$/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator<(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) < 0; }$/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator<(long a, const ZZ& b) { return b > a; }$/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator< (const quad_float& x, double y) $/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator< (double x, const quad_float& y)$/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator <(const xdouble& a, const xdouble& b) $/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator <(const xdouble& a, double b) $/;"	f
operator <	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator <(double a, const xdouble& b) $/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const GF2E& a)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator<<(const GF2EX& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator<<(const GF2X& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator<<(const ZZ& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator<<(const ZZX& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const ZZ_p& a)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const ZZ_pE& a)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator<<(const ZZ_pEX& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator<<(const ZZ_pX& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const zz_pE& a)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator<<(const zz_pEX& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator<<(const zz_pX& a, long n)$/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const Mat<T>& a)  $/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const Pair<S,T>& x)  $/;"	f
operator <<	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const Vec<T>& a)   $/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator<<=(GF2EX& x, long n)$/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator<<=(GF2X& x, long n)$/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator<<=(ZZ& x, long n)$/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator<<=(ZZX& x, long n) $/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator<<=(ZZ_pEX& x, long n)$/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator<<=(ZZ_pX& x, long n)$/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator<<=(zz_pEX& x, long n)$/;"	f
operator <<=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator<<=(zz_pX& x, long n)$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator<=(const RR& a, const RR& b) { return compare(a, b) <= 0; }$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator<=(const RR& a, double b) { return compare(a, b) <= 0; }$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator<=(double a, const RR& b) { return compare(a, b) <= 0; }$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator<=(const ZZ& a, const ZZ& b)$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator<=(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) <= 0; }$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator<=(long a, const ZZ& b) { return b >= a; }$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator<=(const quad_float& x, double y) $/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator<=(double x, const quad_float& y)$/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator<=(const xdouble& a, const xdouble& b) $/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator<=(const xdouble& a, double b) $/;"	f
operator <=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator<=(double a, const xdouble& b) $/;"	f
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^GF2& operator=(long a) { _GF2__rep = a & 1; return *this; }$/;"	f	class:GF2
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^ref_GF2 operator=(const GF2& a)$/;"	f	class:ref_GF2
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^ref_GF2 operator=(const ref_GF2& a)$/;"	f	class:ref_GF2
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^ref_GF2 operator=(long a)$/;"	f	class:ref_GF2
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& GF2E::operator=(GF2 a) { conv(*this, a); return *this; }$/;"	f	class:GF2E
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E& GF2E::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:GF2E
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& GF2EX::operator=(GF2 a) { conv(*this, a); return *this; }$/;"	f	class:GF2EX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& GF2EX::operator=(const GF2E& a) { conv(*this, a); return *this; }$/;"	f	class:GF2EX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& GF2EX::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:GF2EX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^GF2X& operator=(const GF2X& a) { xrep = a.xrep; return *this; }$/;"	f	class:GF2X
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& GF2X::operator=(GF2 a)$/;"	f	class:GF2X
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& GF2X::operator=(long a)$/;"	f	class:GF2X
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   Lazy& operator=(const Lazy& other) $/;"	f	class:Lazy
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR& RR::operator=(double a) { conv(*this, a); return *this; }$/;"	f	class:RR
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   AlignedArray& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:AlignedArray
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr& operator=(const CloneablePtr& other)$/;"	f	class:CloneablePtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CloneablePtr& operator=(const CloneablePtr<Y>& other)$/;"	f	class:CloneablePtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CopiedPtr& operator=(const CopiedPtr& other)$/;"	f	class:CopiedPtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   CopiedPtr& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:CopiedPtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   OptionalVal& operator=(const OptionalVal& other)$/;"	f	class:OptionalVal
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr& operator=(const SmartPtr& other)$/;"	f	class:SmartPtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   SmartPtr& operator=(const SmartPtr<Y>& other)$/;"	f	class:SmartPtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   Unique2DArray& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:Unique2DArray
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniqueArray& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:UniqueArray
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   UniquePtr& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:UniquePtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomStream& operator=(const RandomStream& other) {$/;"	f	class:RandomStream
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ& operator=(const ZZ& a) { _ntl_gcopy(a.rep, &rep); return *this; }$/;"	f	class:ZZ
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^ZZ& operator=(long a) { _ntl_gintoz(a, &rep); return *this; }$/;"	f	class:ZZ
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& ZZX::operator=(const ZZ& a)$/;"	f	class:ZZX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& ZZX::operator=(long a)$/;"	f	class:ZZX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p& ZZ_p::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:ZZ_p
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& ZZ_pE::operator=(const ZZ_p& a) { conv(*this, a); return *this; }$/;"	f	class:ZZ_pE
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE& ZZ_pE::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:ZZ_pE
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& ZZ_pEX::operator=(const ZZ_p& a)$/;"	f	class:ZZ_pEX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& ZZ_pEX::operator=(const ZZ_pE& a)$/;"	f	class:ZZ_pEX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& ZZ_pEX::operator=(long a)$/;"	f	class:ZZ_pEX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p& zz_p::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:zz_p
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p& operator=(const zz_p& a) { _zz_p__rep = a._zz_p__rep; return *this; }$/;"	f	class:zz_p
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& zz_pE::operator=(const zz_p& a) { conv(*this, a); return *this; }$/;"	f	class:zz_pE
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE& zz_pE::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:zz_pE
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& zz_pEX::operator=(const zz_p& a)$/;"	f	class:zz_pEX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& zz_pEX::operator=(const zz_pE& a)$/;"	f	class:zz_pEX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& zz_pEX::operator=(long a)$/;"	f	class:zz_pEX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& zz_pX::operator=(long a)$/;"	f	class:zz_pX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& zz_pX::operator=(zz_p a)$/;"	f	class:zz_pX
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^Mat<T>& Mat<T>::operator=(const Mat& src)  $/;"	f	class:Mat
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float& quad_float::operator=(double x) $/;"	f	class:quad_float
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   AtomicBool& operator=(const bool& _data) $/;"	f	class:AtomicBool
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   AtomicLong& operator=(const long& _data) $/;"	f	class:AtomicLong
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   void operator=(const raw_ptr& _rep)  { rep = _rep; }$/;"	f	class:WrappedPtr
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^Vec<T>& Vec<T>::operator=(const Vec& a)  $/;"	f	class:Vec
operator =	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble& xdouble::operator=(double a)$/;"	f	class:xdouble
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long operator==(GF2 a, GF2 b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long operator==(GF2 a, long b) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long operator==(long a, GF2 b) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator==(const GF2 a, const GF2E& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator==(const GF2E& a, GF2 b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator==(const GF2E& a, const GF2E& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator==(const GF2E& a, long b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline long operator==(const long a, const GF2E& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator==(GF2 a, const GF2EX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator==(const GF2E& a, const GF2EX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator==(const GF2EX& a, const GF2EX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline long operator==(long a, const GF2EX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long operator==(GF2 a, const GF2X& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline long operator==(long a, const GF2X& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator==(double a, const RR& b) { return (b == a); }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const CloneablePtr<X>& a, const CloneablePtr<Y>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const CopiedPtr<T,P>& a, const CopiedPtr<T,P>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const CopiedPtr<X,U>& a, const CopiedPtr<Y,V>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const SmartPtr<X>& a, const SmartPtr<Y>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const Unique2DArray<X>& a, const Unique2DArray<X>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const Unique2DArray<X>& a, const Unique2DArray<Y>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const UniqueArray<X>& a, const UniqueArray<X>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const UniqueArray<X>& a, const UniqueArray<Y>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const UniquePtr<T,P>& a, const UniquePtr<T,P>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^bool operator==(const UniquePtr<X,U>& a, const UniquePtr<Y,V>& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator==(const ZZ& a, const ZZ& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator==(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) == 0; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator==(long a, const ZZ& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long operator==(const ZZ& a, const ZZX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline long operator==(long a, const ZZX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline long operator==(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline long operator==(long a, const ZZ_p& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_p& a, const ZZ_pE& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_pE& a, const ZZ_p& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_pE& a, long b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline long operator==(long a, const ZZ_pE& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator==(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator==(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator==(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline long operator==(long a, const ZZ_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator==(const ZZ_p& a, const ZZ_pX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator==(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline long operator==(long a, const ZZ_pX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long operator==(long a, zz_p b) { return to_zz_p(a) == b; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long operator==(zz_p a, long b) { return a == to_zz_p(b); }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long operator==(zz_p a, zz_p b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator==(const zz_p& a, const zz_pE& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator==(const zz_pE& a, const zz_p& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator==(const zz_pE& a, const zz_pE& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator==(const zz_pE& a, long b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline long operator==(long a, const zz_pE& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator==(const zz_p& a, const zz_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator==(const zz_pE& a, const zz_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator==(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline long operator==(long a, const zz_pEX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator==(const zz_pX& a, const zz_pX& b)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator==(long a, const zz_pX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline long operator==(zz_p a, const zz_pX& b) { return b == a; }$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^long operator==(const Mat<T>& a, const Mat<T>& b)  $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^inline long operator==(const Pair<S,T>& x, const Pair<S,T>& y)  $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator==(const quad_float& x, double y) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator==(double x, const quad_float& y)$/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^bool operator==(const vec_GF2::const_proxy_iterator& a, const vec_GF2::const_proxy_iterator& b) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^bool operator==(const vec_GF2::proxy_iterator& a, const vec_GF2::proxy_iterator& b) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^long operator==(const Vec<T>& a, const Vec<T>& b) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator==(const xdouble& a, const xdouble& b) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator==(const xdouble& a, double b) $/;"	f
operator ==	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator==(double a, const xdouble& b) $/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator >(const RR& a, const RR& b) { return compare(a, b)  > 0; }$/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator >(const RR& a, double b) { return compare(a, b)  > 0; }$/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator >(double a, const RR& b) { return compare(a, b)  > 0; }$/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator>(const ZZ& a, const ZZ& b)$/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator>(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) > 0; }$/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator>(long a, const ZZ& b) { return b < a; }$/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator> (const quad_float& x, double y) $/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator> (double x, const quad_float& y)$/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator >(const xdouble& a, const xdouble& b) $/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator >(const xdouble& a, double b) $/;"	f
operator >	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator >(double a, const xdouble& b) $/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator>=(const RR& a, const RR& b) { return compare(a, b) >= 0; }$/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator>=(const RR& a, double b) { return compare(a, b) >= 0; }$/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long operator>=(double a, const RR& b) { return compare(a, b) >= 0; }$/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator>=(const ZZ& a, const ZZ& b)$/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator>=(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) >= 0; }$/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long operator>=(long a, const ZZ& b) { return b <= a; }$/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator>=(const quad_float& x, double y) $/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long operator>=(double x, const quad_float& y)$/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator>=(const xdouble& a, const xdouble& b) $/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator>=(const xdouble& a, double b) $/;"	f
operator >=	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long operator>=(double a, const xdouble& b) $/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX operator>>(const GF2EX& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X operator>>(const GF2X& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator>>(const ZZ& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX operator>>(const ZZX& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator>>(const ZZ_pEX& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator>>(const ZZ_pX& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX operator>>(const zz_pEX& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX operator>>(const zz_pX& a, long n)$/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^NTL_SNS istream& operator>>(NTL_SNS istream& s, Mat<T>& x)  $/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/pair.h	/^NTL_SNS istream& operator>>(NTL_SNS istream& s, Pair<S,T>& x)  $/;"	f
operator >>	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^NTL_SNS istream & operator>>(NTL_SNS istream& s, Vec<T>& a)   $/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX& operator>>=(GF2EX& x, long n)$/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X& operator>>=(GF2X& x, long n)$/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator>>=(ZZ& x, long n)$/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX& operator>>=(ZZX& x, long n) $/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator>>=(ZZ_pEX& x, long n)$/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator>>=(ZZ_pX& x, long n)$/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator>>=(zz_pEX& x, long n)$/;"	f
operator >>=	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX& operator>>=(zz_pX& x, long n)$/;"	f
operator SmartPtr<Y>	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator SmartPtr<Y>() { return SmartPtr<Y>(SmartPtrLoopHole(), dp, cp); }$/;"	f	class:CloneablePtr
operator T&	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator T& () const { return x; }$/;"	f	class:ReferenceWrapper
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^GF2E& operator[](long i) { return rep[i]; }$/;"	f	class:GF2EX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^const GF2E& operator[](long i) const { return rep[i]; }$/;"	f	class:GF2EX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^const GF2 operator[](long i) const$/;"	f	class:GF2X
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^ref_GF2 operator[](long i) $/;"	f	class:GF2X
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   GF2X& operator[](long i) { return v[i]; }$/;"	f	class:GF2XVec
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   const GF2X& operator[](long i) const { return v[i]; }$/;"	f	class:GF2XVec
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^   const T * operator[] (long i) const $/;"	f	class:LazyTable
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& operator[](long i) const { return dp[i]; }$/;"	f	class:AlignedArray
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& operator[](long i) const { return dp[i]; }$/;"	f	class:UniqueArray
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T_ptr& operator[](long i) const { return dp[i]; }$/;"	f	class:Unique2DArray
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   _ntl_ulong& operator[](long i)   $/;"	f	class:WordVector
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   const _ntl_ulong& operator[](long i) const $/;"	f	class:WordVector
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   ZZ& operator[](long i) { return v[i]; }$/;"	f	class:ZZVec
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   const ZZ& operator[](long i) const { return v[i]; }$/;"	f	class:ZZVec
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^ZZ& operator[](long i) { return rep[i]; }$/;"	f	class:ZZX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^const ZZ& operator[](long i) const { return rep[i]; }$/;"	f	class:ZZX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^ZZ_pE& operator[](long i) { return rep[i]; }$/;"	f	class:ZZ_pEX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^const ZZ_pE& operator[](long i) const { return rep[i]; }$/;"	f	class:ZZ_pEX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^ZZ_p& operator[](long i) { return rep[i]; }$/;"	f	class:ZZ_pX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^const ZZ_p& operator[](long i) const { return rep[i]; }$/;"	f	class:ZZ_pX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^const zz_pE& operator[](long i) const { return rep[i]; }$/;"	f	class:zz_pEX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^zz_pE& operator[](long i) { return rep[i]; }$/;"	f	class:zz_pEX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^const zz_p& operator[](long i) const { return rep[i]; }$/;"	f	class:zz_pX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^zz_p& operator[](long i) { return rep[i]; }$/;"	f	class:zz_pX
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   Vec<T>& operator[](long i) { return _mat__rep[i]; }  $/;"	f	class:Mat
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   const Vec<T>& operator[](long i) const { return _mat__rep[i]; }  $/;"	f	class:Mat
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      const GF2 operator[](long x) const $/;"	f	struct:Vec::const_proxy_iterator
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      ref_GF2 operator[](long x) const $/;"	f	struct:Vec::proxy_iterator
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   const GF2 operator[](long i) const$/;"	f	class:Vec
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   ref_GF2 operator[](long i) $/;"	f	class:Vec
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   T& operator[](long i)   $/;"	f	class:Vec
operator []	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   const T& operator[](long i) const $/;"	f	class:Vec
operator ^	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator^(const ZZ& a, const ZZ& b)$/;"	f
operator ^	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator^(const ZZ& a, long b)$/;"	f
operator ^	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator^(long a, const ZZ& b)$/;"	f
operator ^=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator^=(ZZ& x, const ZZ& b) $/;"	f
operator ^=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator^=(ZZ& x, long b) $/;"	f
operator bool	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   operator bool() const { return data.load( NTL_SNS memory_order_acquire); }$/;"	f	class:AtomicBool
operator const GF2EX&	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   operator const GF2EX& () const { return f; }$/;"	f	class:GF2EXModulus
operator const GF2X&	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   operator const GF2X& () const { return f; }$/;"	f	class:GF2XModulus
operator const T&	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator const T& () const { return x; }$/;"	f	class:ConstReferenceWrapper
operator const ZZ_pEX&	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   operator const ZZ_pEX& () const { return f; }$/;"	f	class:ZZ_pEXModulus
operator const ZZ_pX&	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   operator const ZZ_pX& () const { return f; }$/;"	f	class:ZZ_pXModulus
operator const raw_ptr&	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   operator const raw_ptr& () const { return rep; }$/;"	f	class:WrappedPtr
operator const zz_pEX&	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   operator const zz_pEX& () const { return f; }$/;"	f	class:zz_pEXModulus
operator const zz_pX&	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   operator const zz_pX& () const { return f; }$/;"	f	class:zz_pXModulus
operator const_proxy_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      operator const_proxy_iterator() const $/;"	f	struct:Vec::proxy_iterator
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^   operator fake_null_type() const $/;"	f	class:Lazy
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:AlignedArray
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:CloneablePtr
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:CopiedPtr
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:SmartPtr
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:Unique2DArray
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:UniqueArray
operator fake_null_type	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:UniquePtr
operator long	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   operator long() const { return data.load( NTL_SNS memory_order_acquire); }$/;"	f	class:AtomicLong
operator raw_ptr&	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   operator raw_ptr& () { return rep; }$/;"	f	class:WrappedPtr
operator unsigned long	/home/penguin/projects/ntl-11.3.2/include/NTL/thread.h	/^   operator unsigned long() const { return data.load( NTL_SNS memory_order_relaxed); }$/;"	f	class:AtomicLowWaterMark
operator wide_double_impl_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   operator wide_double_impl_t() const { return data; }$/;"	f	class:wide_double
operator |	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator|(const ZZ& a, const ZZ& b)$/;"	f
operator |	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator|(const ZZ& a, long b)$/;"	f
operator |	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ operator|(long a, const ZZ& b)$/;"	f
operator |=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator|=(ZZ& x, const ZZ& b) $/;"	f
operator |=	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ& operator|=(ZZ& x, long b) $/;"	f
oprec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^static NTL_CHEAP_THREAD_LOCAL long oprec;$/;"	m	class:RR
oprec	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^  long oprec;$/;"	m	class:quad_float
oprec	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^long oprec;$/;"	m	class:xdouble
p	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^   GF2XModulus p;$/;"	m	class:GF2EInfoT
p	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* p;$/;"	m	class:SmartPtrControlDerived
p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long p;$/;"	m	struct:RandomBndGenerator
p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long p;$/;"	m	struct:sp_ZZ_reduce_struct
p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ p;      \/\/ the modulus$/;"	m	class:ZZ_pInfoT
p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^   ZZ_pXModulus p;$/;"	m	class:ZZ_pEInfoT
p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   long p;$/;"	m	class:zz_pInfoT
p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^   zz_pXModulus p;$/;"	m	class:zz_pEInfoT
p_info	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   FFTPrimeInfo* p_info; \/\/ non-null means we are directly using $/;"	m	class:zz_pInfoT
p_info_owner	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   UniquePtr<FFTPrimeInfo> p_info_owner;$/;"	m	class:zz_pInfoT
pair_GF2EX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_GF2EX_long.h	/^typedef Pair<GF2EX,long> pair_GF2EX_long;$/;"	t
pair_GF2X_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_GF2X_long.h	/^typedef Pair<GF2X,long> pair_GF2X_long;$/;"	t
pair_ZZX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZX_long.h	/^typedef Pair<ZZX,long> pair_ZZX_long;$/;"	t
pair_ZZ_pEX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZ_pEX_long.h	/^typedef Pair<ZZ_pEX,long> pair_ZZ_pEX_long;$/;"	t
pair_ZZ_pX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZ_pX_long.h	/^typedef Pair<ZZ_pX,long> pair_ZZ_pX_long;$/;"	t
pair_zz_pEX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_lzz_pEX_long.h	/^typedef Pair<zz_pEX,long> pair_zz_pEX_long;$/;"	t
pair_zz_pX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_lzz_pX_long.h	/^typedef Pair<zz_pX,long> pair_zz_pX_long;$/;"	t
pd_mod_t	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^struct pd_mod_t {$/;"	s
pindex	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long pindex;$/;"	m	class:PrimeSeq
pinfo	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      const PartitionInfo& pinfo;$/;"	m	class:BasicThreadPool::ConcurrentTaskFct1
pinfo	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   UniquePtr<_ntl_general_rem_one_struct,sp_ZZ_reduce_struct_policy> pinfo;$/;"	m	struct:sp_ZZ_reduce_struct
pinned	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   bool pinned() const $/;"	f	class:WordVector
pinned	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^bool pinned() const$/;"	f	class:ZZ
pinv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   mulmod_t pinv;$/;"	m	class:zz_pInfoT
plain_c_string_streambuf	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   plain_c_string_streambuf(const char* ss)$/;"	f	struct:plain_c_string_streambuf
plain_c_string_streambuf	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct plain_c_string_streambuf : public std::streambuf$/;"	s
poly	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   ZZ_pX poly;$/;"	m	struct:ZZ_pXNewArgument
poly	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pX     poly;$/;"	m	struct:zz_pXNewArgument
poly_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^typedef GF2X poly_type;$/;"	t	class:GF2
poly_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^typedef GF2EX poly_type;$/;"	t	class:GF2E
poly_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^typedef ZZX poly_type;$/;"	t	class:ZZ
poly_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^typedef ZZ_pX poly_type;$/;"	t	class:ZZ_p
poly_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^typedef ZZ_pEX poly_type;$/;"	t	class:ZZ_pE
poly_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^typedef zz_pX poly_type;$/;"	t	class:zz_p
poly_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^typedef zz_pEX poly_type;$/;"	t	class:zz_pE
pool	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     BasicThreadPool *pool;$/;"	m	class:BasicThreadPool::ConcurrentTask
pos	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long pos;$/;"	m	class:RandomStream
pos	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long pos;$/;"	m	class:old_RandomStream
position	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   long position(const Vec<T>& a) const { return _mat__rep.position(a); } $/;"	f	class:Mat
position	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^long Vec<T>::position(const T& a) const  $/;"	f	class:Vec
position1	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   long position1(const Vec<T>& a) const { return _mat__rep.position1(a); } $/;"	f	class:Mat
position1	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^long Vec<T>::position1(const T& a) const  $/;"	f	class:Vec
posn	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long posn; \/\/  n - NTL_BITS_PER_LONG*(sn-1);$/;"	m	class:GF2XModulus
pow	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR pow(const RR& x, const RR& y)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void power(GF2& x, GF2 a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void power(ref_GF2 x, GF2 a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E power(const GF2E& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E power(const GF2E& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void power(GF2E& x, const GF2E& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void power(GF2E& x, const GF2E& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX power(const GF2EX& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X power(const GF2X& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR power(const RR& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ power(const ZZ& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void power(ZZ& x, const ZZ& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void power(ZZ& x, long a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p power(const ZZ_p& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p power(const ZZ_p& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void power(ZZ_p& x, const ZZ_p& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void power(ZZ_p& x, const ZZ_p& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE power(const ZZ_pE& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE power(const ZZ_pE& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void power(ZZ_pE& x, const ZZ_pE& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void power(ZZ_pE& x, const ZZ_pE& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX power(const ZZ_pEX& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX power(const ZZ_pX& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void power(zz_p& x, zz_p a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p power(zz_p a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void power(zz_pE& x, const zz_pE& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void power(zz_pE& x, const zz_pE& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE power(const zz_pE& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE power(const zz_pE& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX power(const zz_pEX& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX power(const zz_pX& a, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 power(const mat_GF2& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 power(const mat_GF2& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void power(mat_GF2& X, const mat_GF2& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E power(const mat_GF2E& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E power(const mat_GF2E& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void power(mat_GF2E& X, const mat_GF2E& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR power(const mat_RR& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR power(const mat_RR& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline void power(mat_RR& X, const mat_RR& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ power(const mat_ZZ& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ power(const mat_ZZ& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline void power(mat_ZZ& X, const mat_ZZ& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p power(const mat_ZZ_p& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p power(const mat_ZZ_p& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline void power(mat_ZZ_p& X, const mat_ZZ_p& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE power(const mat_ZZ_pE& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE power(const mat_ZZ_pE& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline void power(mat_ZZ_pE& X, const mat_ZZ_pE& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p power(const mat_zz_p& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p power(const mat_zz_p& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void power(mat_zz_p& X, const mat_zz_p& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void power(mat_zz_p& X, const mat_zz_p& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE power(const mat_zz_pE& A, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE power(const mat_zz_pE& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline void power(mat_zz_pE& X, const mat_zz_pE& A, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float power(const quad_float& x, long e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble power(const xdouble& a, const ZZ& e)$/;"	f
power	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble power(const xdouble& a, long e)$/;"	f
power2_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR power2_RR(long e)$/;"	f
power2_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ power2_ZZ(long e)$/;"	f
power2_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float power2_quad_float(long e)$/;"	f
power2_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble power2_xdouble(long e)$/;"	f
power_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ power_ZZ(long a, long e)$/;"	f
prec	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^static NTL_CHEAP_THREAD_LOCAL long prec;$/;"	m	class:RR
precision	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^static long precision() { return prec; }$/;"	f	class:RR
prime	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   Vec<long> prime;  \/\/ prime[i] = q[i]$/;"	m	struct:MatPrime_crt_helper
prime	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   Vec<long> prime;  \/\/ prime[i] = q[i]$/;"	m	class:ZZ_pFFTInfoT
prime_recip	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   Vec<double> prime_recip;  \/\/ prime_recip[i] = 1\/double(q[i])$/;"	m	struct:MatPrime_crt_helper
prime_recip	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   Vec<double> prime_recip;  \/\/ prime_recip[i] = 1\/double(q[i])$/;"	m	class:ZZ_pFFTInfoT
project	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2E project(const vec_GF2E& a, const GF2EX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void project(GF2E& x, const vec_GF2E& a, const GF2EX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2 project(const vec_GF2& a, const GF2X& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void project(ref_GF2 x, const vec_GF2& a, const GF2X& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pE project(const vec_ZZ_pE& a, const ZZ_pEX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void project(ZZ_pE& x, const vec_ZZ_pE& a, const ZZ_pEX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_p project(const vec_ZZ_p& a, const ZZ_pX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void project(ZZ_p& x, const vec_ZZ_p& a, const ZZ_pX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void project(zz_pE& x, const vec_zz_pE& a, const zz_pEX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pE project(const vec_zz_pE& a, const zz_pEX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void project(zz_p& x, const vec_zz_p& a, const zz_pX& b)$/;"	f
project	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_p project(const vec_zz_p& a, const zz_pX& b)$/;"	f
proxy_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator() { }$/;"	f	struct:Vec::proxy_iterator
proxy_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator(INIT_LOOP_HOLE_TYPE, unsigned long *ptr, long idx)$/;"	f	struct:Vec::proxy_iterator
proxy_iterator	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   struct proxy_iterator {$/;"	s	class:Vec
proxy_iterator_impl	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator_impl() : ptr(0), idx(0) { }$/;"	f	struct:Vec::proxy_iterator_impl
proxy_iterator_impl	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator_impl(T *_ptr, long _idx) : ptr(_ptr), idx(_idx) { }$/;"	f	struct:Vec::proxy_iterator_impl
proxy_iterator_impl	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator_impl(const proxy_iterator_impl<X>& other)$/;"	f	struct:Vec::proxy_iterator_impl
proxy_iterator_impl	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   struct proxy_iterator_impl {$/;"	s	class:Vec
pshift	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long pshift;$/;"	m	class:PrimeSeq
ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^SmartPtr<GF2EInfoT> ptr;$/;"	m	class:GF2EContext
ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^SmartPtr<ZZ_pInfoT> ptr;$/;"	m	class:ZZ_pContext
ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^SmartPtr<ZZ_pEInfoT> ptr;$/;"	m	class:ZZ_pEContext
ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^SmartPtr<zz_pInfoT> ptr;$/;"	m	class:zz_pContext
ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^SmartPtr<zz_pEInfoT> ptr;$/;"	m	class:zz_pEContext
ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^   CopiedPtr<mat_ZZ_p_opaque_body,CloningCopiedPtrPolicy> ptr;$/;"	m	struct:mat_ZZ_p_opaque
ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      T *ptr;$/;"	m	struct:Vec::proxy_iterator_impl
push_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^typedef GF2Push push_type;$/;"	t	class:GF2
push_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^typedef GF2EPush push_type;$/;"	t	class:GF2E
push_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^typedef ZZ_pPush push_type;$/;"	t	class:ZZ_p
push_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^typedef ZZ_pEPush push_type;$/;"	t	class:ZZ_pE
push_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^typedef zz_pPush push_type;$/;"	t	class:zz_p
push_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^typedef zz_pEPush push_type;$/;"	t	class:zz_pE
put	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   void put(long i, long j, const T& a) { _mat__rep[i].put(j, a); }$/;"	f	class:Mat
put	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   void put(long i, long j, const U& a) { _mat__rep[i].put(j, a); }$/;"	f	class:Mat
put	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   void put(long i, GF2 a) { (*this)[i] = a; }$/;"	f	class:Vec
put	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   void put(long i, long a) { put(i, to_GF2(a)); }$/;"	f	class:Vec
put	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   void put(long i, const T& a)$/;"	f	class:Vec
q	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   long q;   \/\/ the prime itself$/;"	m	struct:FFTPrimeInfo
q	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	/^   long q;$/;"	m	struct:IntFactor
q	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   long q;   $/;"	m	struct:MatPrimeInfo
q	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^   double q;$/;"	m	struct:pd_mod_t
qinv	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   mulmod_t qinv;   \/\/ 1\/((wide_double) q) -- but subject to change!!$/;"	m	struct:FFTPrimeInfo
qrecip	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   double qrecip;   \/\/ 1\/double(q)$/;"	m	struct:FFTPrimeInfo
quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^  explicit quad_float(double a) : hi(0), lo(0) { *this = a; }$/;"	f	class:quad_float
quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^  quad_float() : hi(0), lo(0)  {}$/;"	f	class:quad_float
quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^  quad_float(double x, double y) : hi(x), lo(y) { } \/\/ internal use only$/;"	f	class:quad_float
quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^class quad_float {$/;"	c
random	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void random(GF2& x)$/;"	f
random	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void random(ref_GF2 x)$/;"	f
random	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void random(GF2E& x)$/;"	f
random	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void random(ZZ_p& x)$/;"	f
random	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void random(ZZ_pE& x)$/;"	f
random	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void random(zz_p& x)$/;"	f
random	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void random(zz_pE& x)$/;"	f
random_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 random_GF2()$/;"	f
random_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E random_GF2E()$/;"	f
random_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX random_GF2EX(long n)$/;"	f
random_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X random_GF2X(long n)$/;"	f
random_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR random_RR() $/;"	f
random_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p random_ZZ_p()$/;"	f
random_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE random_ZZ_pE()$/;"	f
random_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX random_ZZ_pEX(long n)$/;"	f
random_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX random_ZZ_pX(long n)$/;"	f
random_mat_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 random_mat_GF2(long n, long m)$/;"	f
random_mat_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E random_mat_GF2E(long n, long m)$/;"	f
random_mat_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p random_mat_ZZ_p(long n, long m)$/;"	f
random_mat_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE random_mat_ZZ_pE(long n, long m)$/;"	f
random_mat_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p random_mat_zz_p(long n, long m)$/;"	f
random_mat_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE random_mat_zz_pE(long n, long m)$/;"	f
random_vec_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 random_vec_GF2(long n)$/;"	f
random_vec_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline vec_GF2E random_vec_GF2E(long n)$/;"	f
random_vec_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p random_vec_ZZ_p(long n)$/;"	f
random_vec_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE random_vec_ZZ_pE(long n)$/;"	f
random_vec_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p random_vec_zz_p(long n)$/;"	f
random_vec_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE random_vec_zz_pE(long n)$/;"	f
random_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p random_zz_p()$/;"	f
random_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE random_zz_pE()$/;"	f
random_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX random_zz_pEX(long n)$/;"	f
random_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX random_zz_pX(long n)$/;"	f
raw_ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   typedef T * raw_ptr;$/;"	t	class:WrappedPtr
red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   Vec<sp_reduce_struct> red_struct;$/;"	m	struct:MatPrime_crt_helper
red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   sp_reduce_struct red_struct;$/;"	m	class:zz_pInfoT
red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^sp_reduce_struct red_struct() const { return ptr->red_struct; } $/;"	f	class:zz_pContext
red_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static sp_reduce_struct red_struct() { return zz_pInfo->red_struct; }$/;"	f	class:zz_p
reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ_ReduceStructAdapter reduce_struct;$/;"	m	class:ZZ_pFFTInfoT
ref	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      const Lazy& ref;$/;"	m	class:Lazy::Builder
ref	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      const LazyTable& ref;$/;"	m	class:LazyTable::Builder
ref_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^class ref_GF2 {$/;"	c
ref_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^ref_GF2() : _ref_GF2__ptr(0), _ref_GF2__pos(0) { }$/;"	f	class:ref_GF2
ref_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^ref_GF2(GF2& a) :$/;"	f	class:ref_GF2
ref_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^ref_GF2(INIT_LOOP_HOLE_TYPE, unsigned long *ptr, long pos) :$/;"	f	class:ref_GF2
reference	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   typedef typename Vec<T>::reference reference;$/;"	t	class:Mat
reference	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   typedef ref_GF2 reference;$/;"	t	class:Vec
reference	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   typedef value_type& reference;$/;"	t	class:Vec
reg	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^   unsigned int reg;$/;"	m	struct:CSRPush
relax	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^    void relax() { active = false; }$/;"	f	class:scope_guard
relax	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   void relax() { active = false; }$/;"	f	class:DummyScopeGuard
relaxed_determinant	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline zz_p relaxed_determinant(const mat_zz_p& a, bool relax=true)$/;"	f
relaxed_exec_index	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  static void relaxed_exec_index(BasicThreadPool *pool, long cnt, const Fct& fct) $/;"	f	class:BasicThreadPool
relaxed_exec_range	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  static void relaxed_exec_range(BasicThreadPool *pool, long sz, const Fct& fct) $/;"	f	class:BasicThreadPool
relaxed_inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p relaxed_inv(const mat_zz_p& A, bool relax=true)$/;"	f
relaxed_inv	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void relaxed_inv(mat_zz_p& X, const mat_zz_p& A, bool relax=true)$/;"	f
relaxed_power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p relaxed_power(const mat_zz_p& A, const ZZ& e, bool relax=true)$/;"	f
relaxed_power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p relaxed_power(const mat_zz_p& A, long e, bool relax=true)$/;"	f
relaxed_power	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void relaxed_power(mat_zz_p& X, const mat_zz_p& A, long e, bool relax=true)$/;"	f
release	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* release() { T *p = dp; dp = 0; return p; }$/;"	f	class:CopiedPtr
release	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* release() { T *p = dp; dp = 0; return p; }$/;"	f	class:UniqueArray
release	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* release() { T *p = dp; dp = 0; return p; }$/;"	f	class:UniquePtr
release	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T* release() { return dp.release(); }$/;"	f	class:OptionalVal
release	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T_ptr* release() { len = 0; return dp.release(); }$/;"	f	class:Unique2DArray
release	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   char* release() {  char *p = sp; dp = 0; sp = 0;  return p; }$/;"	f	class:AlignedArray
relocatable	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   static constexpr bool relocatable = DeclareRelocatableType((T*)0);$/;"	m	class:Vec
rem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   long rem(const ZZ& a) const$/;"	f	struct:sp_ZZ_reduce_struct
rem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long rem(const ZZ& a, long b)$/;"	f
rem	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void rem(ZZ& r, const ZZ& a, const ZZ& b)$/;"	f
rem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long rem(long a, long n, sp_reduce_struct red) $/;"	f
rem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long rem(long a, long n, sp_reduce_struct red)$/;"	f
rem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long rem(unsigned long a, long n, sp_reduce_struct red) $/;"	f
rem_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ_RemStructAdapter rem_struct;$/;"	m	class:ZZ_pFFTInfoT
rem_tmp_vec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^  ZZ_TmpVecAdapter rem_tmp_vec;$/;"	m	class:ZZ_pTmpSpaceT
remove	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  void remove(long n = 1)$/;"	f	class:BasicThreadPool
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline long rep(GF2 a) { return a._GF2__rep; }$/;"	f
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline const GF2X& rep(const GF2E& a) { return a._GF2E__rep; }$/;"	f
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^vec_GF2E rep;$/;"	m	class:GF2EX
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   _ntl_ulong *rep;  $/;"	m	class:WordVector
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   UniquePtr<_ntl_crt_struct> rep;$/;"	m	class:ZZ_CRTStructAdapter
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   UniquePtr<_ntl_reduce_struct> rep;$/;"	m	class:ZZ_ReduceStructAdapter
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   UniquePtr<_ntl_rem_struct> rep;$/;"	m	class:ZZ_RemStructAdapter
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   UniquePtr<_ntl_tmp_vec> rep;$/;"	m	class:ZZ_TmpVecAdapter
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^WrappedPtr<_ntl_gbigint_body, Deleter> rep;$/;"	m	class:ZZ
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^vec_ZZ rep;$/;"	m	class:ZZX
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline const ZZ& rep(const ZZ_p& a) { return a._ZZ_p__rep; }$/;"	f
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline const ZZ_pX& rep(const ZZ_pE& a) { return a._ZZ_pE__rep; }$/;"	f
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^vec_ZZ_pE rep;$/;"	m	class:ZZ_pEX
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^vec_ZZ_p rep;$/;"	m	class:ZZ_pX
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline long rep(zz_p a) { return a._zz_p__rep; }$/;"	f
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline const zz_pX& rep(const zz_pE& a) { return a._zz_pE__rep; }$/;"	f
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^vec_zz_pE rep;$/;"	m	class:zz_pEX
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^vec_zz_p rep;$/;"	m	class:zz_pX
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^inline const Vec< Vec<T> >& rep(const Mat<T>& a)  $/;"	f
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   raw_ptr rep;$/;"	m	class:WrappedPtr
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator_impl<const unsigned long> rep;$/;"	m	struct:Vec::const_proxy_iterator
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^      proxy_iterator_impl<unsigned long> rep;$/;"	m	struct:Vec::proxy_iterator
rep	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   WordVector rep;$/;"	m	class:Vec
rep_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^typedef long rep_type;$/;"	t	class:GF2
rep_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^typedef GF2X rep_type;$/;"	t	class:GF2E
rep_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^typedef ZZ rep_type;$/;"	t	class:ZZ_p
rep_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^typedef ZZ_pX rep_type;$/;"	t	class:ZZ_pE
rep_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^typedef long rep_type;$/;"	t	class:zz_p
rep_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^typedef zz_pX rep_type;$/;"	t	class:zz_pE
request	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      long request;$/;"	m	class:LazyTable::Builder
reset	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void reset() { reset(0); }$/;"	f	class:AlignedArray
reset	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void reset()$/;"	f	class:Unique2DArray
reset	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void reset(T* p = 0) { dp.reset(p); }$/;"	f	class:OptionalVal
reset	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void reset(T* p = 0)$/;"	f	class:CopiedPtr
reset	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void reset(T* p = 0)$/;"	f	class:UniqueArray
reset	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void reset(T* p = 0)$/;"	f	class:UniquePtr
reset	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void reset(char* p)$/;"	f	class:AlignedArray
residue_type	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^typedef GF2E residue_type;$/;"	t	class:GF2X
residue_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^typedef ZZ_p residue_type;$/;"	t	class:ZZ
residue_type	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef ZZ_pE residue_type;$/;"	t	class:ZZ_pX
residue_type	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^typedef zz_pE residue_type;$/;"	t	class:zz_pX
restore	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^void restore() const {}$/;"	f	class:GF2Context
resultant	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2E resultant(const GF2EX& a, const GF2EX& b)$/;"	f
resultant	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZ resultant(const ZZX& a, const ZZX& b, long deterministic=0)$/;"	f
resultant	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pE resultant(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
resultant	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_p resultant(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
resultant	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pE resultant(const zz_pEX& a, const zz_pEX& b)$/;"	f
resultant	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_p resultant(const zz_pX& a, const zz_pX& b)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX reverse(const GF2EX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX reverse(const GF2EX& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void reverse(GF2EX& c, const GF2EX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X reverse(const GF2X& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X reverse(const GF2X& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void reverse(GF2X& c, const GF2X& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void reverse(GF2X& c, const GF2X& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX reverse(const ZZX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX reverse(const ZZX& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void reverse(ZZX& c, const ZZX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX reverse(const ZZ_pEX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX reverse(const ZZ_pEX& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void reverse(ZZ_pEX& c, const ZZ_pEX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX reverse(const ZZ_pX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX reverse(const ZZ_pX& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void reverse(ZZ_pX& c, const ZZ_pX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void reverse(zz_pEX& c, const zz_pEX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX reverse(const zz_pEX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX reverse(const zz_pEX& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void reverse(zz_pX& c, const zz_pX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX reverse(const zz_pX& a)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX reverse(const zz_pX& a, long hi)$/;"	f
reverse	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 reverse(const vec_GF2& a)$/;"	f
round	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR round(const RR& a)$/;"	f
run	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      void run(long index) $/;"	f	class:BasicThreadPool::ConcurrentTaskFct1
run	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     void run(long index) { fct(index); }$/;"	f	class:BasicThreadPool::ConcurrentTaskFct
run	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     void run(long index) { }$/;"	f	class:BasicThreadPool::ConcurrentTaskTerminate
runOneTask	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  static void runOneTask(ConcurrentTask *task, long index)$/;"	f	class:BasicThreadPool
save	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^void save() {}$/;"	f	class:GF2Context
saved	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomStream saved;$/;"	m	class:RandomStreamPush
scope_guard	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^    scope_guard(F&& _f, const char *_info) : $/;"	f	class:scope_guard
scope_guard	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^class scope_guard $/;"	c
scope_guard_builder	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   explicit scope_guard_builder(const char *_info) : info(_info) { }$/;"	f	struct:scope_guard_builder
scope_guard_builder	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^struct scope_guard_builder {  $/;"	s
send	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     void send(T _val, T1 _val1)$/;"	f	class:BasicThreadPool::CompositeSignal
send	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     void send(T new_val)$/;"	f	class:BasicThreadPool::SimpleSignal
set	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void set(GF2& x) { x = 1; }$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void set(ref_GF2 x) { x = 1; }$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void set(GF2E& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void set(GF2EX& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void set(ZZ& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void set(ZZX& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void set(ZZ_p& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void set(ZZ_pE& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void set(ZZ_pEX& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void set(ZZ_pX& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void set(zz_p& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void set(zz_pE& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void set(zz_pEX& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void set(zz_pX& x)$/;"	f
set	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   T* set(T *p)$/;"	f	struct:details_pthread::key_wrapper
set_nonce	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   void set_nonce(unsigned long nonce) $/;"	f	class:RandomStream
sgn	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   long sgn;$/;"	m	struct:sp_reduce_struct
shamt	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2EXTransMultiplier
shamt	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2XTransMultiplier
shamt	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pEXTransMultiplier
shamt	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pEXTransMultiplier
shamt	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   long shamt;$/;"	m	struct:sp_inverse
shamt_b	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2EXTransMultiplier
shamt_b	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2XTransMultiplier
shamt_b	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pEXTransMultiplier
shamt_b	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pEXTransMultiplier
shamt_fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2EXTransMultiplier
shamt_fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2XTransMultiplier
shamt_fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pEXTransMultiplier
shamt_fbi	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pEXTransMultiplier
shift	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline vec_GF2 shift(const vec_GF2& a, long n)$/;"	f
sign	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long sign(const ZZ& a)$/;"	f
sign	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline long sign(const quad_float& x){$/;"	f
sin	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR sin(const RR& a)$/;"	f
size	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long size; \/\/ word length of residues$/;"	m	class:GF2XModulus
size	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   enum { size = 2};$/;"	e	enum:PD::__anon3
size	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   enum { size = 4};$/;"	e	enum:PD::__anon2
size	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^   enum { size = 8};$/;"	e	enum:PD::__anon1
size	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long size() const$/;"	f	class:ZZ
size	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   long size;  \/\/ p.size()$/;"	m	class:ZZ_pInfoT
size_	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^   long size_;$/;"	m	struct:_ntl_gbigint_body
sn	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   long sn; \/\/  f.xrep.length()$/;"	m	class:GF2XModulus
solve	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void solve(zz_p& d, const mat_zz_p& A, vec_zz_p& x, const vec_zz_p& b)$/;"	f
solve	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void solve(zz_p& d, vec_zz_p& x, const mat_zz_p& A, const vec_zz_p& b)$/;"	f
sp	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   char *sp;$/;"	m	class:AlignedArray
sp_CorrectDeficit	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectDeficit(long a, long n)$/;"	f
sp_CorrectDeficit	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectDeficit(unsigned long a, long n)$/;"	f
sp_CorrectDeficitQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectDeficitQuo(T& q, long a, long n, long amt=1)$/;"	f
sp_CorrectDeficitQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectDeficitQuo(T& q, unsigned long a, long n, long amt=1)$/;"	f
sp_CorrectExcess	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectExcess(long a, long n)$/;"	f
sp_CorrectExcess	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectExcess(unsigned long a, long n)$/;"	f
sp_CorrectExcessQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectExcessQuo(T& q, long a, long n, long amt=1)$/;"	f
sp_CorrectExcessQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_CorrectExcessQuo(T& q, unsigned long a, long n, long amt=1)$/;"	f
sp_CountLeadingZeros	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_CountLeadingZeros(unsigned long x)$/;"	f
sp_Negative	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^bool sp_Negative(unsigned long a)$/;"	f
sp_NormalizedMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_NormalizedMulMod(long a, long b, long n, unsigned long ninv) $/;"	f
sp_NormalizedMulModWithQuo	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_NormalizedMulModWithQuo(long& qres, long a, long b, long n, unsigned long ninv)$/;"	f
sp_NormalizedPrepMulMod	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_NormalizedPrepMulMod(long n)$/;"	f
sp_NormalizedPrepMulModPrecon	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_NormalizedPrepMulModPrecon(long b, long n, unsigned long ninv)$/;"	f
sp_PrepRem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_reduce_struct sp_PrepRem(long n) $/;"	f
sp_PrepRem	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_reduce_struct sp_PrepRem(long n)$/;"	f
sp_SignMask	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_SignMask(long a)$/;"	f
sp_SignMask	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^long sp_SignMask(unsigned long a)$/;"	f
sp_ZZ_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   sp_ZZ_reduce_struct() : p(0) { }$/;"	f	struct:sp_ZZ_reduce_struct
sp_ZZ_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^struct sp_ZZ_reduce_struct {$/;"	s
sp_ZZ_reduce_struct_policy	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^struct sp_ZZ_reduce_struct_policy {$/;"	s
sp_inverse	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   sp_inverse(unsigned long _inv, long _shamt) : inv(_inv), shamt(_shamt) { }$/;"	f	struct:sp_inverse
sp_inverse	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^struct sp_inverse {$/;"	s
sp_ll_red_21	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_ll_red_21(unsigned long hi, unsigned long lo, long d, $/;"	f
sp_ll_red_21_normalized	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_ll_red_21_normalized(unsigned long hi, unsigned long lo, long d, $/;"	f
sp_ll_red_31	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_ll_red_31(unsigned long x2, unsigned long x1, unsigned long x0,$/;"	f
sp_ll_red_31_normalized	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_ll_red_31_normalized(unsigned long x2, unsigned long x1, unsigned long x0,$/;"	f
sp_ll_red_n1	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_ll_red_n1(const unsigned long *x, long n, long d, sp_ll_reduce_struct dinv)$/;"	f
sp_ll_red_n1_normalized	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^sp_ll_red_n1_normalized(const unsigned long *x, long n, long d, sp_ll_reduce_struct dinv)$/;"	f
sp_ll_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   sp_ll_reduce_struct(unsigned long _inv, long _nbits) : inv(_inv), nbits(_nbits) { }$/;"	f	struct:sp_ll_reduce_struct
sp_ll_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^struct sp_ll_reduce_struct { };$/;"	s
sp_ll_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^struct sp_ll_reduce_struct {$/;"	s
sp_muldivrem_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   explicit sp_muldivrem_struct(unsigned long _bninv) : bninv(_bninv) { }$/;"	f	struct:sp_muldivrem_struct
sp_muldivrem_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^struct sp_muldivrem_struct {$/;"	s
sp_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   sp_reduce_struct(unsigned long _ninv, long _sgn) : $/;"	f	struct:sp_reduce_struct
sp_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^struct sp_reduce_struct { };$/;"	s
sp_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^struct sp_reduce_struct {$/;"	s
special	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   bool special() const$/;"	f	class:ZZ_CRTStructAdapter
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 sqr(GF2 a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sqr(GF2& x, GF2 a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sqr(ref_GF2 x, GF2 a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E sqr(const GF2E& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void sqr(GF2E& x, const GF2E& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX sqr(const GF2EX& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X sqr(const GF2X& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR sqr(const RR& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ sqr(const ZZ& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void sqr(ZZ& x, const ZZ& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX sqr(const ZZX& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p sqr(const ZZ_p& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void sqr(ZZ_p& x, const ZZ_p& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE sqr(const ZZ_pE& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void sqr(ZZ_pE& x, const ZZ_pE& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX sqr(const ZZ_pEX& a) $/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX sqr(const ZZ_pX& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void sqr(zz_p& x, zz_p a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline zz_p sqr(zz_p a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void sqr(zz_pE& x, const zz_pE& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE sqr(const zz_pE& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX sqr(const zz_pEX& a) $/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX sqr(const zz_pX& a)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 sqr(const mat_GF2& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void sqr(mat_GF2& X, const mat_GF2& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E sqr(const mat_GF2E& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void sqr(mat_GF2E& X, const mat_GF2E& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR sqr(const mat_RR& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline void sqr(mat_RR& X, const mat_RR& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ sqr(const mat_ZZ& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline void sqr(mat_ZZ& X, const mat_ZZ& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p sqr(const mat_ZZ_p& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline void sqr(mat_ZZ_p& X, const mat_ZZ_p& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE sqr(const mat_ZZ_pE& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline void sqr(mat_ZZ_pE& X, const mat_ZZ_pE& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p sqr(const mat_zz_p& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline void sqr(mat_zz_p& X, const mat_zz_p& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE sqr(const mat_zz_pE& A)$/;"	f
sqr	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline void sqr(mat_zz_pE& X, const mat_zz_pE& A)$/;"	f
sqrt	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR sqrt(const RR& a)$/;"	f
stab	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   vec_GF2X stab;$/;"	m	class:GF2XModulus
stab1	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   UniqueArray<unsigned long> stab1;$/;"	m	class:GF2XModulus
stab_cnt	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   UniqueArray<long> stab_cnt;$/;"	m	class:GF2XModulus
stab_ptr	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   UniqueArray<unsigned long *> stab_ptr;$/;"	m	class:GF2XModulus
state	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   _ntl_uint32 state[16];$/;"	m	class:old_RandomStream
storage	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^static long storage() { return WV_storage(GF2E::WordLength()); }$/;"	f	class:GF2E
storage	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^static long storage() { return ZZ_storage(ZZ_pInfo->size); }$/;"	f	class:ZZ_p
storage	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static long storage() { return sizeof(long); }$/;"	f	class:zz_p
store	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^store(double *p, PD<2> a) $/;"	f
store	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^store(double *p, PD<4> a) $/;"	f
store	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^store(double *p, PD<8> a) $/;"	f
store	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^store(long *p, PD<2> a)$/;"	f
store	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^store(long *p, PD<4> a)$/;"	f
store	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^store(long *p, PD<8> a)$/;"	f
storeu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^storeu(double *p, PD<2> a) $/;"	f
storeu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^storeu(double *p, PD<4> a) $/;"	f
storeu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^storeu(double *p, PD<8> a) $/;"	f
storeu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^storeu(long *p, PD<2> a)$/;"	f
storeu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^storeu(long *p, PD<4> a)$/;"	f
storeu	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^storeu(long *p, PD<8> a)$/;"	f
str	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   RandomStream *str;$/;"	m	struct:RandomBndGenerator
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sub(GF2& x, GF2 a, GF2 b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sub(GF2& x, GF2 a, long b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sub(GF2& x, long a, GF2 b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sub(ref_GF2 x, GF2 a, GF2 b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sub(ref_GF2 x, GF2 a, long b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void sub(ref_GF2 x, long a, GF2 b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void sub(GF2E& x, GF2 a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void sub(GF2E& x, const GF2E& a, GF2 b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void sub(GF2E& x, const GF2E& a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void sub(GF2E& x, const GF2E& a, long b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void sub(GF2E& x, long a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, GF2 a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2E& a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, GF2 b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, long b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, long a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void sub(GF2X& x, GF2 a, const GF2X& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void sub(GF2X& x, const GF2X& a, GF2 b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void sub(GF2X& x, const GF2X& a, const GF2X& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void sub(GF2X& x, const GF2X& a, long b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void sub(GF2X& x, long a, const GF2X& b) { add(x, a, b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void sub(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void sub(ZZ& x, const ZZ& a, long b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void sub(ZZ_p& x, const ZZ_p& a, const ZZ_p& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_p& a, const ZZ_pE& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_pE& a, const ZZ_p& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_pE& a, const ZZ_pE& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_pE& a, long b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, long a, const ZZ_pE& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void sub(zz_p& x, long a, zz_p b) { sub(x, to_zz_p(a), b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void sub(zz_p& x, zz_p a, long b) { sub(x, a, to_zz_p(b)); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void sub(zz_p& x, zz_p a, zz_p b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_p& a, const zz_pE& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_pE& a, const zz_p& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_pE& a, const zz_pE& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_pE& a, long b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, long a, const zz_pE& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void sub(zz_pX& x, const zz_pX& a, long b) { sub(x, a, to_zz_p(b)); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void sub(zz_pX& x, long a, const zz_pX& b) { sub(x, to_zz_p(a), b); }$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline void sub(mat_GF2& X, const mat_GF2& A, const mat_GF2& B)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline void sub(mat_GF2E& X, const mat_GF2E& A, const mat_GF2E& B)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void sub(vec_GF2& x, const vec_GF2& a, const vec_GF2& b)$/;"	f
sub	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^inline void sub(vec_GF2E& x, const vec_GF2E& a, const vec_GF2E& b)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void swap(GF2& x, GF2& y) { x.swap(y); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline void swap(ref_GF2 x, ref_GF2 y) { x.swap(y); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^void swap(GF2& x) { GF2 t; t = *this; *this = x; x = t; }$/;"	f	class:GF2
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^void swap(ref_GF2 x) { GF2 t; t = *this; *this = x; x = t; }$/;"	f	class:ref_GF2
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void swap(GF2E& x, GF2E& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^void swap(GF2E& y) { _GF2E__rep.swap(y._GF2E__rep); }$/;"	f	class:GF2E
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline void swap(GF2EX& x, GF2EX& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^void swap(GF2EX& x) { rep.swap(x.rep); }$/;"	f	class:GF2EX
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline void swap(GF2X& a, GF2X& b) { a.swap(b); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^void swap(GF2X& x) { xrep.swap(x.xrep); }$/;"	f	class:GF2X
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   void swap(GF2XVec& x)$/;"	f	class:GF2XVec
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^inline void swap(GF2XVec& x, GF2XVec& y) { x.swap(y); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline void swap(RR& a, RR& b) { a.swap(b); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^void swap(RR& z) { x.swap(z.x); _ntl_swap(e, z.e); }$/;"	f	class:RR
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(AlignedArray& other)$/;"	f	class:AlignedArray
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(CloneablePtr& other)$/;"	f	class:CloneablePtr
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(CopiedPtr& other)$/;"	f	class:CopiedPtr
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(OptionalVal& other) { dp.swap(other.dp); }$/;"	f	class:OptionalVal
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(SmartPtr& other)$/;"	f	class:SmartPtr
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(Unique2DArray& other)$/;"	f	class:Unique2DArray
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(UniqueArray& other)$/;"	f	class:UniqueArray
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   void swap(UniquePtr& other)$/;"	f	class:UniquePtr
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(AlignedArray<T,align>& p, AlignedArray<T,align>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(CloneablePtr<T>& p, CloneablePtr<T>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(CopiedPtr<T,P>& p, CopiedPtr<T,P>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(OptionalVal<T>& p, OptionalVal<T>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(SmartPtr<T>& p, SmartPtr<T>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(Unique2DArray<T>& p, Unique2DArray<T>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(UniqueArray<T>& p, UniqueArray<T>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^void swap(UniquePtr<T,P>& p, UniquePtr<T,P>& q) { p.swap(q); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^inline void swap(WordVector& x, WordVector& y) $/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void swap(ZZ& x, ZZ& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^void swap(ZZ& x)$/;"	f	class:ZZ
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   void swap(ZZVec& x)$/;"	f	class:ZZVec
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^inline void swap(ZZVec& x, ZZVec& y) { x.swap(y); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline void swap(ZZX& x, ZZX& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^void swap(ZZX& x) { rep.swap(x.rep); }$/;"	f	class:ZZX
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline void swap(ZZ_p& x, ZZ_p& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^void swap(ZZ_p& x)$/;"	f	class:ZZ_p
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void swap(ZZ_pE& x, ZZ_pE& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^void swap(ZZ_pE& x) { _ZZ_pE__rep.swap(x._ZZ_pE__rep); }$/;"	f	class:ZZ_pE
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline void swap(ZZ_pEX& x, ZZ_pEX& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^void swap(ZZ_pEX& x) { rep.swap(x.rep); }$/;"	f	class:ZZ_pEX
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline void swap(ZZ_pX& x, ZZ_pX& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^void swap(ZZ_pX& x)$/;"	f	class:ZZ_pX
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^inline void swap(zz_p& x, zz_p& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void swap(zz_pE& x, zz_pE& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^void swap(zz_pE& x) { _zz_pE__rep.swap(x._zz_pE__rep); }$/;"	f	class:zz_pE
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline void swap(zz_pEX& x, zz_pEX& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^void swap(zz_pEX& x) { rep.swap(x.rep); }$/;"	f	class:zz_pEX
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline void swap(zz_pX& x, zz_pX& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^void swap(zz_pX& x)$/;"	f	class:zz_pX
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   void swap(Mat& other)$/;"	f	class:Mat
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^void swap(Mat<T>& X, Mat<T>& Y)  $/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   void swap(WrappedPtr& other) { _ntl_swap(rep, other.rep); }$/;"	f	class:WrappedPtr
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void swap(int& a, int& b)  {  int t;  t = a; a = b; b = t; }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline void swap(long& a, long& b)  {  long t;  t = a; a = b; b = t; }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^void swap(WrappedPtr<T,Deleter>& x, WrappedPtr<T,Deleter>& y)$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^inline void swap(vec_GF2& x, vec_GF2& y) { x.swap(y); }$/;"	f
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void Vec<T>::swap(Vec& y)  $/;"	f	class:Vec
swap	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^void swap(Vec<T>& x, Vec<T>& y)  $/;"	f
swap2	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^swap2(PD<4> a) $/;"	f
swap2	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^swap2(PD<8> a) $/;"	f
swap4	/home/penguin/projects/ntl-11.3.2/include/NTL/PD.h	/^swap4(PD<8> a) $/;"	f
sz	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   long sz;$/;"	m	struct:MatPrime_crt_helper
t	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      std::thread t;$/;"	m	struct:BasicThreadPool::AutomaticThread
t	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   ZZ t;$/;"	m	struct:MatPrime_crt_helper_scratch
tbl	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   Unique2DArray<long> tbl;$/;"	m	class:FFTRep
tbl	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   Unique2DArray<long> tbl;$/;"	m	class:ZZ_pXModRep
tbl	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   UniqueArray<long> tbl[4];$/;"	m	class:fftRep
term	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      ConcurrentTaskTerminate term;$/;"	m	struct:BasicThreadPool::AutomaticThread
threadVec	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  Vec< UniquePtr<AutomaticThread> > threadVec;$/;"	m	class:BasicThreadPool
to_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 to_GF2(const ZZ& a) $/;"	f
to_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^inline GF2 to_GF2(long a) $/;"	f
to_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E to_GF2E(GF2 a)$/;"	f
to_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E to_GF2E(const GF2X& a)$/;"	f
to_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E to_GF2E(const ZZ& a)$/;"	f
to_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2E to_GF2E(long a)$/;"	f
to_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(GF2 a)$/;"	f
to_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const GF2E& a)$/;"	f
to_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const GF2X& a)$/;"	f
to_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const ZZ& a)$/;"	f
to_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const vec_GF2E& a)$/;"	f
to_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(long a)$/;"	f
to_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X to_GF2X(GF2 a)$/;"	f
to_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X to_GF2X(const ZZ& a)$/;"	f
to_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X to_GF2X(const vec_GF2& a)$/;"	f
to_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X to_GF2X(long a)$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(const RR& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(const ZZ& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(const char *a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(const quad_float& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(const xdouble& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(double a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(float a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(int a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(long a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(unsigned int a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR to_RR(unsigned long a) { return RR(INIT_VAL, a); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline ZZ to_ZZ(const RR& a)$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(const ZZ& a) { return a; }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(const char *s) { return ZZ(INIT_VAL, s); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(double a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(float a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(int a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(long a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(unsigned int a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ to_ZZ(unsigned long a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline ZZ to_ZZ(const quad_float& a)$/;"	f
to_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline ZZ to_ZZ(const xdouble& a)$/;"	f
to_ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const ZZ& a)$/;"	f
to_ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const ZZ_pX& a)$/;"	f
to_ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const vec_ZZ& a)$/;"	f
to_ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const zz_pX& a)$/;"	f
to_ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX to_ZZX(long a)$/;"	f
to_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p to_ZZ_p(const ZZ& a)$/;"	f
to_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^inline ZZ_p to_ZZ_p(long a)$/;"	f
to_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(const ZZ& a) $/;"	f
to_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(const ZZ_p& a) $/;"	f
to_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(const ZZ_pX& a) $/;"	f
to_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(long a) $/;"	f
to_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ& a)$/;"	f
to_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ_p& a)$/;"	f
to_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ_pE& a)$/;"	f
to_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ_pX& a)$/;"	f
to_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const vec_ZZ_pE& a)$/;"	f
to_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(long a)$/;"	f
to_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZ_pX to_ZZ_pX(const ZZX& a)$/;"	f
to_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(const ZZ& a)$/;"	f
to_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(const ZZ_p& a)$/;"	f
to_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(const vec_ZZ_p& a)$/;"	f
to_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(long a)$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline double to_double(const RR& a) { double z; conv(z, a); return z; }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline double to_double(const ZZ& a) { return _ntl_gdoub(a.rep); }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline double to_double(const quad_float& x) { return x.hi; }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double to_double(double a) { return a; }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double to_double(float a) { return double(a); }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double to_double(int a) { return double(a); }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double to_double(long a) { return double(a); }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double to_double(unsigned a) { return double(a); }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline double to_double(unsigned long a) { return double(a); }$/;"	f
to_double	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline double to_double(const xdouble& a)$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline float to_float(const RR& a) { float z; conv(z, a); return z; }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline float to_float(const ZZ& a) { return float(_ntl_gdoub(a.rep)); }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline float to_float(const quad_float& x) { return float(x.hi); }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline float to_float(double a) { return float(a); }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline float to_float(float a) { return a; }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline float to_float(int a) { return float(a); }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline float to_float(long a) { return float(a); }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline float to_float(unsigned a) { return float(a); }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline float to_float(unsigned long a) { return float(a); }$/;"	f
to_float	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline float to_float(const xdouble& a)$/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline int to_int(const RR& a) { int z; conv(z, a); return z; }$/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline int to_int(const ZZ& a)  $/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline int to_int(const quad_float& x) { return to_int(to_long(x)); }$/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int to_int(double a) { return int(NTL_SNS floor(a)); }$/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int to_int(float a) { return int(NTL_SNS floor(double(a))); }$/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int to_int(int a) { return a; }$/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int to_int(long a) $/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int to_int(unsigned a) $/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline int to_int(unsigned long a) $/;"	f
to_int	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline int to_int(const xdouble& a)$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline long to_long(const RR& a) { long z; conv(z, a); return z; }$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long to_long(const ZZ& a)  { return _ntl_gtoint(a.rep); }$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long to_long(double a) { return long(NTL_SNS floor(a)); }$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long to_long(float a) { return long(NTL_SNS floor(double(a))); }$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long to_long(int a) { return a; }$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long to_long(long a) { return a; }$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long to_long(unsigned a)$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^inline long to_long(unsigned long a)$/;"	f
to_long	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline long to_long(const xdouble& a)$/;"	f
to_mat_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 to_mat_GF2(const vec_vec_GF2& a) {$/;"	f
to_mat_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ_p to_mat_ZZ_p(const mat_ZZ& a)$/;"	f
to_mat_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_zz_p to_mat_zz_p(const mat_ZZ& a)$/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline quad_float to_quad_float(const RR& a) $/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(const ZZ& x)$/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(const char *s)$/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(const quad_float& a)$/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(double x) $/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(float x) $/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(int n) $/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(int n) { return quad_float(n, 0); }$/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(long n) { return quad_float(n, 0); }$/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(unsigned int n) $/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(unsigned int n) { return quad_float(n, 0); }$/;"	f
to_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/quad_float.h	/^inline quad_float to_quad_float(unsigned long n) { return quad_float(n, 0); }$/;"	f
to_uint	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline unsigned int to_uint(const ZZ& a)  $/;"	f
to_ulong	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline unsigned long to_ulong(const ZZ& a)  { return _ntl_gtouint(a.rep); }$/;"	f
to_vec_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline vec_GF2 to_vec_GF2(const GF2X& a)$/;"	f
to_vec_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ to_vec_ZZ(const vec_ZZ_p& a)$/;"	f
to_vec_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_ZZ to_vec_ZZ(const vec_zz_p& a)$/;"	f
to_vec_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p to_vec_ZZ_p(const vec_ZZ& a)$/;"	f
to_vec_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^inline vec_zz_p to_vec_zz_p(const vec_ZZ& a)$/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline xdouble to_xdouble(const RR& a) $/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble to_xdouble(const char *a) $/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble to_xdouble(const xdouble& a)$/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble to_xdouble(float a) { return to_xdouble(double(a)); }$/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble to_xdouble(int a) { return xdouble(a, 0); }$/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble to_xdouble(long a) { return xdouble(a, 0); }$/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble to_xdouble(unsigned int a) { return xdouble(a, 0); }$/;"	f
to_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^inline xdouble to_xdouble(unsigned long a) { return xdouble(a, 0); }$/;"	f
to_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p to_zz_p(const ZZ& a)$/;"	f
to_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p to_zz_p(long a) $/;"	f
to_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(const ZZ& a) $/;"	f
to_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(const zz_p& a) $/;"	f
to_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(const zz_pX& a) $/;"	f
to_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(long a) $/;"	f
to_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const ZZ& a)$/;"	f
to_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const vec_zz_pE& a)$/;"	f
to_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const zz_p& a)$/;"	f
to_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const zz_pE& a)$/;"	f
to_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const zz_pX& a)$/;"	f
to_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(long a)$/;"	f
to_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline zz_pX to_zz_pX(const ZZX& a)$/;"	f
to_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(const ZZ& a)$/;"	f
to_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(const vec_zz_p& a)$/;"	f
to_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(long a)$/;"	f
to_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(zz_p a)$/;"	f
trace	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline GF2 trace(const GF2E& a)$/;"	f
trace	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2E.h	/^inline void trace(ref_GF2 x, const GF2E& a)$/;"	f
trace	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline ZZ_p trace(const ZZ_pE& a)$/;"	f
trace	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pE.h	/^inline void trace(ZZ_p& x, const ZZ_pE& a)$/;"	f
trace	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline void trace(zz_p& x, const zz_pE& a)$/;"	f
trace	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^inline zz_p trace(const zz_pE& a)$/;"	f
tracevec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   OptionalVal< Lazy<vec_GF2E> > tracevec;$/;"	m	class:GF2EXModulus
tracevec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   OptionalVal< Lazy<vec_GF2> > tracevec;$/;"	m	class:GF2XModulus
tracevec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   OptionalVal< Lazy<vec_ZZ_pE> > tracevec; $/;"	m	class:ZZ_pEXModulus
tracevec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   OptionalVal< Lazy<vec_ZZ_p> > tracevec;$/;"	m	class:ZZ_pXModulus
tracevec	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   OptionalVal< Lazy<vec_zz_pE> > tracevec; $/;"	m	class:zz_pEXModulus
tracevec	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   OptionalVal< Lazy<vec_zz_p> > tracevec;  $/;"	m	class:zz_pXModulus
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2.h	/^inline mat_GF2 transpose(const mat_GF2 & a)$/;"	f
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_GF2E.h	/^inline mat_GF2E transpose(const mat_GF2E& a)$/;"	f
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_RR.h	/^inline mat_RR transpose(const mat_RR & a)$/;"	f
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ.h	/^inline mat_ZZ transpose(const mat_ZZ& A)$/;"	f
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p transpose(const mat_ZZ_p & a)$/;"	f
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE transpose(const mat_ZZ_pE& A)$/;"	f
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_p.h	/^inline mat_zz_p transpose(const mat_zz_p& a)$/;"	f
transpose	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE transpose(const mat_zz_pE& A)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^inline GF2EX trunc(const GF2EX& a, long m)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^inline GF2X trunc(const GF2X& a, long m)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^inline RR trunc(const RR& a)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline void trunc(ZZ& x, const ZZ& a, long k)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^inline ZZX trunc(const ZZX& a, long m)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX trunc(const ZZ_pEX& a, long m)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^inline ZZ_pX trunc(const ZZ_pX& a, long m)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX trunc(const zz_pEX& a, long m)$/;"	f
trunc	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX trunc(const zz_pX& a, long m)$/;"	f
trunc_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline ZZ trunc_ZZ(const ZZ& a, long k)$/;"	f
trunc_long	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long trunc_long(const ZZ& a, long k)$/;"	f
type	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^  typedef T type;$/;"	t	struct:_ntl_enable_if
u	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   Vec<long> u;  \/\/ u[i] = (M\/q[i])^{-1} mod q[i]$/;"	m	struct:MatPrime_crt_helper
u	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   Vec<long> u;  \/\/ u[i] = (M\/q[i])^{-1} mod q[i]$/;"	m	class:ZZ_pFFTInfoT
u	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   Vec<long> u;                 \/\/ u, as above$/;"	m	class:zz_pInfoT
unpinned_move	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   void unpinned_move(WordVector& other)$/;"	f	class:WordVector
unpinned_swap	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   void unpinned_swap(WordVector& other)$/;"	f	class:WordVector
uqinv	/home/penguin/projects/ntl-11.3.2/include/NTL/MatPrime.h	/^   Vec<mulmod_precon_t> uqinv;$/;"	m	struct:MatPrime_crt_helper
uqinv	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   Vec<mulmod_precon_t> uqinv;$/;"	m	class:ZZ_pFFTInfoT
uqinv	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   Vec<mulmod_precon_t> uqinv;  \/\/ MulModPrecon for u$/;"	m	class:zz_pInfoT
v	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   GF2X* v;$/;"	m	class:GF2XVec
v	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   ZZ* v;$/;"	m	class:ZZVec
val	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     T val; $/;"	m	class:BasicThreadPool::CompositeSignal
val	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     T val; $/;"	m	class:BasicThreadPool::SimpleSignal
val	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	/^   long val;$/;"	m	struct:IntFactor
val	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^   const GF2EX& val() const { return f; }$/;"	f	class:GF2EXModulus
val	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   const GF2X& val() const { return f; }$/;"	f	class:GF2XModulus
val	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& val() const { return *dp; }$/;"	f	class:OptionalVal
val	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^   const ZZ_pEX& val() const { return f; }$/;"	f	class:ZZ_pEXModulus
val	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   const ZZ_pX& val() const { return b; }$/;"	f	class:ZZ_pXMultiplier
val	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^   const ZZ_pX& val() const { return f; }$/;"	f	class:ZZ_pXModulus
val	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^   const zz_pEX& val() const { return f; }$/;"	f	class:zz_pEXModulus
val	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   const zz_pX& val() const { return b; }$/;"	f	class:zz_pXMultiplier
val	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   const zz_pX& val() const { return f; }$/;"	f	class:zz_pXModulus
val1	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     T1 val1;$/;"	m	class:BasicThreadPool::CompositeSignal
validate	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^long validate() { return _ntl_gvalidate(rep); }$/;"	f	class:ZZ
value	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^ enum {value = false};$/;"	e	enum:_ntl_is_char_pointer::__anon4
value	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^ enum {value = true};$/;"	e	enum:_ntl_is_char_pointer::__anon5
value	/home/penguin/projects/ntl-11.3.2/include/NTL/ctools.h	/^ enum {value = true};$/;"	e	enum:_ntl_is_char_pointer::__anon6
value	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^     enum { value =  sizeof( copy<T>(0) )  == 1 };$/;"	e	enum:Relocate_aux_has_copy::__anon7
value_type	/home/penguin/projects/ntl-11.3.2/include/NTL/matrix.h	/^   typedef typename Vec<T>::value_type value_type;$/;"	t	class:Mat
value_type	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   typedef GF2 value_type;$/;"	t	class:Vec
value_type	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   typedef T value_type;$/;"	t	class:Vec
vec_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^typedef Vec<GF2> vec_GF2;$/;"	t
vec_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2E.h	/^typedef Vec<GF2E> vec_GF2E;$/;"	t
vec_GF2EX	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2EX.h	/^typedef Vec<GF2EX> vec_GF2EX;$/;"	t
vec_GF2X	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^typedef Vec<GF2X> vec_GF2X;$/;"	t
vec_GF2XVec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2XVec.h	/^typedef Vec<GF2XVec> vec_GF2XVec;$/;"	t
vec_IntFactor	/home/penguin/projects/ntl-11.3.2/include/NTL/FacVec.h	/^typedef Vec<IntFactor> vec_IntFactor;$/;"	t
vec_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_RR.h	/^typedef Vec<RR> vec_RR;$/;"	t
vec_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ.h	/^typedef Vec<ZZ> vec_ZZ;$/;"	t
vec_ZZVec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZVec.h	/^typedef Vec<ZZVec> vec_ZZVec;$/;"	t
vec_ZZX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZX.h	/^typedef Vec<ZZX> vec_ZZX;$/;"	t
vec_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_p.h	/^typedef Vec<ZZ_p> vec_ZZ_p;$/;"	t
vec_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ZZ_pE.h	/^typedef Vec<ZZ_pE> vec_ZZ_pE;$/;"	t
vec_ZZ_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pEX.h	/^typedef Vec<ZZ_pEX> vec_ZZ_pEX;$/;"	t
vec_ZZ_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_pX.h	/^typedef Vec<ZZ_pX> vec_ZZ_pX;$/;"	t
vec_double	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_double.h	/^typedef Vec<double> vec_double;$/;"	t
vec_long	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_long.h	/^typedef Vec<long> vec_long;$/;"	t
vec_pair_GF2EX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_GF2EX_long.h	/^typedef Vec<pair_GF2EX_long> vec_pair_GF2EX_long;$/;"	t
vec_pair_GF2X_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_GF2X_long.h	/^typedef Vec<pair_GF2X_long> vec_pair_GF2X_long;$/;"	t
vec_pair_ZZX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZX_long.h	/^typedef Vec<pair_ZZX_long> vec_pair_ZZX_long;$/;"	t
vec_pair_ZZ_pEX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZ_pEX_long.h	/^typedef Vec<pair_ZZ_pEX_long> vec_pair_ZZ_pEX_long;$/;"	t
vec_pair_ZZ_pX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_ZZ_pX_long.h	/^typedef Vec<pair_ZZ_pX_long> vec_pair_ZZ_pX_long;$/;"	t
vec_pair_zz_pEX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_lzz_pEX_long.h	/^typedef Vec<pair_zz_pEX_long> vec_pair_zz_pEX_long;$/;"	t
vec_pair_zz_pX_long	/home/penguin/projects/ntl-11.3.2/include/NTL/pair_lzz_pX_long.h	/^typedef Vec<pair_zz_pX_long> vec_pair_zz_pX_long;$/;"	t
vec_quad_float	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_quad_float.h	/^typedef Vec<quad_float> vec_quad_float;$/;"	t
vec_ulong	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_ulong.h	/^typedef Vec<unsigned long> vec_ulong;$/;"	t
vec_vec_GF2	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_GF2.h	/^typedef Vec< Vec<GF2> > vec_vec_GF2;$/;"	t
vec_vec_GF2E	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_GF2E.h	/^typedef Vec< Vec<GF2E> > vec_vec_GF2E;$/;"	t
vec_vec_RR	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_RR.h	/^typedef Vec< Vec<RR> > vec_vec_RR;$/;"	t
vec_vec_ZZ	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ZZ.h	/^typedef Vec< Vec<ZZ> > vec_vec_ZZ;$/;"	t
vec_vec_ZZ_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ZZ_p.h	/^typedef Vec< Vec<ZZ_p> > vec_vec_ZZ_p;$/;"	t
vec_vec_ZZ_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ZZ_pE.h	/^typedef Vec< Vec<ZZ_pE> > vec_vec_ZZ_pE;$/;"	t
vec_vec_long	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_long.h	/^typedef Vec< Vec<long> > vec_vec_long;$/;"	t
vec_vec_ulong	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_ulong.h	/^typedef Vec< Vec<unsigned long> > vec_vec_ulong;$/;"	t
vec_vec_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_lzz_p.h	/^typedef Vec< Vec<zz_p> > vec_vec_zz_p;$/;"	t
vec_vec_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_vec_lzz_pE.h	/^typedef Vec< Vec<zz_pE> > vec_vec_zz_pE;$/;"	t
vec_xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_xdouble.h	/^typedef Vec<xdouble> vec_xdouble;$/;"	t
vec_zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_p.h	/^typedef Vec<zz_p> vec_zz_p;$/;"	t
vec_zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_lzz_pE.h	/^typedef Vec<zz_pE> vec_zz_pE;$/;"	t
vec_zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^typedef Vec<zz_pEX> vec_zz_pEX;$/;"	t
vec_zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^typedef Vec<zz_pX> vec_zz_pX;$/;"	t
wait	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     T wait() $/;"	f	class:BasicThreadPool::SimpleSignal
wait	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^     T wait(T1& _val1) $/;"	f	class:BasicThreadPool::CompositeSignal
watched	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   GF2X& watched;$/;"	m	class:GF2XWatcher
watched	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   WordVector& watched;$/;"	m	class:WordVectorWatcher
watched	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   ZZ& watched;$/;"	m	class:ZZWatcher
watched	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ZZ_p& watched;$/;"	m	class:ZZ_pWatcher
watched	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^      Vec& watched;$/;"	m	class:Vec::Watcher
weight	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long weight(const ZZ& a)$/;"	f
weight	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^inline long weight(long a)$/;"	f
wide_double	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   explicit wide_double(const T& x) : data(x) { }$/;"	f	class:wide_double
wide_double	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   wide_double() { }$/;"	f	class:wide_double
wide_double	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^   wide_double(const wide_double& x) : data(x.data) { }$/;"	f	class:wide_double
wide_double	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^class wide_double {$/;"	c
wide_double	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef double wide_double;$/;"	t
wide_double_impl_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef double wide_double_impl_t;$/;"	t
wide_double_impl_t	/home/penguin/projects/ntl-11.3.2/include/NTL/sp_arith.h	/^typedef long double wide_double_impl_t;$/;"	t
worker	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^   static void worker(CompositeSignal< ConcurrentTask *, long > *localSignal)$/;"	f	class:BasicThreadPool
wqinvtab	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^   const double **wqinvtab;$/;"	m	struct:pd_mod_t
wqinvtab1	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^   const double **wqinvtab1;$/;"	m	struct:pd_mod_t
wtab	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^   const double **wtab;$/;"	m	struct:pd_mod_t
wtab1	/home/penguin/projects/ntl-11.3.2/include/NTL/pd_FFT.h	/^   const double **wtab1;$/;"	m	struct:pd_mod_t
x	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^ZZ x;$/;"	m	class:RR
x	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& x;$/;"	m	class:ConstReferenceWrapper
x	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   T& x;$/;"	m	class:ReferenceWrapper
x	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^   Vec<double> x;               \/\/ u\/q, where u = (M\/q)^{-1} mod q$/;"	m	class:zz_pInfoT
x	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^double x;$/;"	m	class:xdouble
x1	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   double x1;$/;"	m	union:_ntl_AlignedVectorHeader
x2	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long x2;$/;"	m	union:_ntl_AlignedVectorHeader
x3	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   char *x3;$/;"	m	union:_ntl_AlignedVectorHeader
x4	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   long double x4;$/;"	m	union:_ntl_AlignedVectorHeader
xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^class xdouble {$/;"	c
xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^explicit xdouble(double a) : x(0), e(0) { *this = a; }$/;"	f	class:xdouble
xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^xdouble() : x(0), e(0) { }$/;"	f	class:xdouble
xdouble	/home/penguin/projects/ntl-11.3.2/include/NTL/xdouble.h	/^xdouble(double xx, long ee) : x(xx), e(ee) { } \/\/ internal use only$/;"	f	class:xdouble
xrep	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^WordVector xrep;$/;"	m	class:GF2X
zero	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2.h	/^static GF2 zero() { return GF2(); }$/;"	f	class:GF2
zero	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^static zz_p zero() { return zz_p(); }$/;"	f	class:zz_p
zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^class zz_p {$/;"	c
zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^explicit zz_p(long a) : _zz_p__rep(0) { *this = a;  }$/;"	f	class:zz_p
zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p() : _zz_p__rep(0) {  }$/;"	f	class:zz_p
zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p(INIT_ALLOC_TYPE) : _zz_p__rep(0) { } $/;"	f	class:zz_p
zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p(INIT_NO_ALLOC_TYPE) : _zz_p__rep(0) { } $/;"	f	class:zz_p
zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p(const zz_p& a) : _zz_p__rep(a._zz_p__rep) { }  $/;"	f	class:zz_p
zz_p	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_p(long a, INIT_LOOP_HOLE_TYPE) { _zz_p__rep = a; }$/;"	f	class:zz_p
zz_pBak	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^class zz_pBak {$/;"	c
zz_pBak	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_pBak() : MustRestore(false) { }$/;"	f	class:zz_pBak
zz_pContext	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^class zz_pContext {$/;"	c
zz_pContext	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_pContext() { }$/;"	f	class:zz_pContext
zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^class zz_pE {$/;"	c
zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^explicit zz_pE(const zz_p& a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:zz_pE
zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^explicit zz_pE(long a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:zz_pE
zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pE() {  } \/\/ NO_ALLOC$/;"	f	class:zz_pE
zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pE(INIT_ALLOC_TYPE) {  _zz_pE__rep.rep.SetMaxLength(zz_pE::degree()); }  \/\/ allocates space$/;"	f	class:zz_pE
zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pE(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:zz_pE
zz_pE	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pE(zz_pE& x, INIT_TRANS_TYPE) : _zz_pE__rep(x._zz_pE__rep, INIT_TRANS) { }$/;"	f	class:zz_pE
zz_pEBak	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^class zz_pEBak {$/;"	c
zz_pEBak	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pEBak() : MustRestore(false) {  }$/;"	f	class:zz_pEBak
zz_pEContext	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^class zz_pEContext {$/;"	c
zz_pEContext	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^explicit zz_pEContext(const zz_pX& p) : ptr(MakeSmart<zz_pEInfoT>(p)) { }$/;"	f	class:zz_pEContext
zz_pEContext	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pEContext() { }$/;"	f	class:zz_pEContext
zz_pEInfoT	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^class zz_pEInfoT {$/;"	c
zz_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^class zz_pEPush {$/;"	c
zz_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^explicit zz_pEPush(const zz_pEContext& context) { bak.save(); context.restore(); }$/;"	f	class:zz_pEPush
zz_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^explicit zz_pEPush(const zz_pX& p) { bak.save(); zz_pEContext c(p); c.restore(); }$/;"	f	class:zz_pEPush
zz_pEPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pE.h	/^zz_pEPush() { bak.save(); }$/;"	f	class:zz_pEPush
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^class zz_pEX {$/;"	c
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^explicit zz_pEX(const zz_p& a) { *this = a; }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^explicit zz_pEX(const zz_pE& a) { *this = a; }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^explicit zz_pEX(long a) { *this = a; }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i, const zz_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i, const zz_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(long i, const zz_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(long i, const zz_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^zz_pEX() { }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^zz_pEX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:zz_pEX
zz_pEX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^zz_pEX(zz_pEX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:zz_pEX
zz_pEXArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^struct zz_pEXArgument {$/;"	s
zz_pEXModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^class zz_pEXModulus {$/;"	c
zz_pEXTransMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pEX.h	/^struct zz_pEXTransMultiplier {$/;"	s
zz_pInfoT	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^class zz_pInfoT {$/;"	c
zz_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^class zz_pPush {$/;"	c
zz_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^explicit zz_pPush(const zz_pContext& context) { bak.save(); context.restore(); }$/;"	f	class:zz_pPush
zz_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^explicit zz_pPush(long p, long maxroot=NTL_FFTMaxRoot) $/;"	f	class:zz_pPush
zz_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_pPush() { bak.save(); }$/;"	f	class:zz_pPush
zz_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_pPush(INIT_FFT_TYPE, long index) $/;"	f	class:zz_pPush
zz_pPush	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_p.h	/^zz_pPush(INIT_USER_FFT_TYPE, long q)$/;"	f	class:zz_pPush
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^class zz_pX {$/;"	c
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^explicit zz_pX(long a) { *this = a; }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^explicit zz_pX(zz_p a) { *this = a; }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(INIT_MONO_TYPE, long i, zz_p a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(long i, zz_p a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^zz_pX() {}$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^zz_pX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:zz_pX
zz_pX	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^zz_pX(zz_pX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:zz_pX
zz_pXArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^struct zz_pXArgument {$/;"	s
zz_pXMatrix	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pXMatrix() { }$/;"	f	class:zz_pXMatrix
zz_pXMatrix	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^class zz_pXMatrix {$/;"	c
zz_pXModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pXModulus() : UseFFT(0), n(-1)  { }$/;"	f	class:zz_pXModulus
zz_pXModulus	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^class zz_pXModulus {$/;"	c
zz_pXMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^   zz_pXMultiplier() : UseFFT(0)  { }$/;"	f	class:zz_pXMultiplier
zz_pXMultiplier	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^class zz_pXMultiplier {$/;"	c
zz_pXNewArgument	/home/penguin/projects/ntl-11.3.2/include/NTL/lzz_pX.h	/^struct zz_pXNewArgument {$/;"	s
zz_p_context	/home/penguin/projects/ntl-11.3.2/include/NTL/FFT.h	/^   SmartPtr<zz_pInfoT> zz_p_context; $/;"	m	struct:FFTPrimeInfo
~AlignedArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~AlignedArray() { NTL_SNS free(sp); }$/;"	f	class:AlignedArray
~AutomaticThread	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^      ~AutomaticThread()$/;"	f	struct:BasicThreadPool::AutomaticThread
~BasicThreadPool	/home/penguin/projects/ntl-11.3.2/include/NTL/BasicThreadPool.h	/^  ~BasicThreadPool() $/;"	f	class:BasicThreadPool
~Builder	/home/penguin/projects/ntl-11.3.2/include/NTL/Lazy.h	/^      ~Builder() { if (moved) ref.initialized = true; }$/;"	f	class:Lazy::Builder
~Builder	/home/penguin/projects/ntl-11.3.2/include/NTL/LazyTable.h	/^      ~Builder() { if (amount) ref.len = curlen; }$/;"	f	class:LazyTable::Builder
~CloneablePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~CloneablePtr() {$/;"	f	class:CloneablePtr
~CopiedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~CopiedPtr() { P::deleter(dp); }$/;"	f	class:CopiedPtr
~DummyScopeGuard	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   ~DummyScopeGuard() { if (active) TerminalError("unexpected exception"); }$/;"	f	class:DummyScopeGuard
~GF2XHexOutputPush	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   ~GF2XHexOutputPush() { GF2X::HexOutput = OldHexOutput; }$/;"	f	class:GF2XHexOutputPush
~GF2XVec	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2XVec.h	/^   ~GF2XVec() { kill(); };$/;"	f	class:GF2XVec
~GF2XWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/GF2X.h	/^   ~GF2XWatcher() { watched.KillBig(); } $/;"	f	class:GF2XWatcher
~RROutputPush	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^   ~RROutputPush() { RR::oprec = old_p; } $/;"	f	class:RROutputPush
~RRPush	/home/penguin/projects/ntl-11.3.2/include/NTL/RR.h	/^   ~RRPush() { RR::prec = old_p; } $/;"	f	class:RRPush
~RandomStreamPush	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   ~RandomStreamPush() { SetSeed(saved); } $/;"	f	class:RandomStreamPush
~SmartPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~SmartPtr() {$/;"	f	class:SmartPtr
~SmartPtrControl	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   virtual ~SmartPtrControl() { }$/;"	f	class:SmartPtrControl
~SmartPtrControlDerived	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~SmartPtrControlDerived() $/;"	f	class:SmartPtrControlDerived
~Unique2DArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~Unique2DArray()$/;"	f	class:Unique2DArray
~UniqueArray	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~UniqueArray() { delete[] dp; }$/;"	f	class:UniqueArray
~UniquePtr	/home/penguin/projects/ntl-11.3.2/include/NTL/SmartPtr.h	/^   ~UniquePtr() { P::deleter(dp); }$/;"	f	class:UniquePtr
~Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vec_GF2.h	/^   ~Vec() {}$/;"	f	class:Vec
~Vec	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^   ~Vec()$/;"	f	class:Vec
~Watcher	/home/penguin/projects/ntl-11.3.2/include/NTL/vector.h	/^      ~Watcher() $/;"	f	class:Vec::Watcher
~WordVectorWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/WordVector.h	/^   ~WordVectorWatcher() { watched.KillBig(); }$/;"	f	class:WordVectorWatcher
~WrappedPtr	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^   ~WrappedPtr() { if (rep) Deleter::apply(rep); } $/;"	f	class:WrappedPtr
~ZZVec	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZVec.h	/^   ~ZZVec() { kill(); };$/;"	f	class:ZZVec
~ZZWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ.h	/^   ~ZZWatcher() { watched.KillBig(); }$/;"	f	class:ZZWatcher
~ZZ_pWatcher	/home/penguin/projects/ntl-11.3.2/include/NTL/ZZ_p.h	/^   ~ZZ_pWatcher() { watched.KillBig(); }$/;"	f	class:ZZ_pWatcher
~_ntl_crt_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^   virtual ~_ntl_crt_struct() { }$/;"	f	class:_ntl_crt_struct
~_ntl_reduce_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^   virtual ~_ntl_reduce_struct() { }$/;"	f	class:_ntl_reduce_struct
~_ntl_rem_struct	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^   virtual ~_ntl_rem_struct() { }$/;"	f	class:_ntl_rem_struct
~_ntl_tmp_vec	/home/penguin/projects/ntl-11.3.2/include/NTL/lip.h	/^   virtual ~_ntl_tmp_vec() { }$/;"	f	class:_ntl_tmp_vec
~mat_ZZ_p_opaque_body	/home/penguin/projects/ntl-11.3.2/include/NTL/mat_ZZ_p.h	/^   virtual ~mat_ZZ_p_opaque_body() { }$/;"	f	struct:mat_ZZ_p_opaque_body
~scope_guard	/home/penguin/projects/ntl-11.3.2/include/NTL/tools.h	/^    ~scope_guard() {$/;"	f	class:scope_guard
